<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MeetEdu</name>
    </assembly>
    <members>
        <member name="T:MeetEdu.AppointmentRequestModel">
            <summary>
            Request model for an appointment 
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRequestModel.ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRequestModel.RuleId">
            <summary>
            The appointment rule id
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRequestModel.Date">
            <summary>
            The date
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRequestModel.TimeStart">
            <summary>
            The time that the appointment begins
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRequestModel.TimeEnd">
            <summary>
            The time that the appointment ends
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRequestModel.IsCanceled">
            <summary>
            A flag indicating whether the subscription was canceled or not
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRequestModel.DateCanceled">
            <summary>
            The date the customer subscription was canceled
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRequestModel.IsRemote">
            <summary>
            A flag indicating whether it is remote or not
            </summary>
        </member>
        <member name="M:MeetEdu.AppointmentRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.AppointmentRuleRequestModel">
            <summary>
            Request model for an appointment template
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleRequestModel.ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleRequestModel.HasRemoteOption">
            <summary>
            A flag indicating whether it has a remote option or not
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleRequestModel.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleRequestModel.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleRequestModel.Duration">
            <summary>
            The duration
            </summary>
        </member>
        <member name="M:MeetEdu.AppointmentRuleRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.BaseRequestModel">
            <summary>
            The base response model
            </summary>
        </member>
        <member name="M:MeetEdu.BaseRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.DepartmentContactMessageRequestModel">
            <summary>
            Request model for a department contact message
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageRequestModel.DepartmentId">
            <summary>
            The department id
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageRequestModel.MemberId">
            <summary>
            The member id
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageRequestModel.FirstName">
            <summary>
            The first name
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageRequestModel.LastName">
            <summary>
            The last name
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageRequestModel.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageRequestModel.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageRequestModel.Message">
            <summary>
            The message
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentContactMessageRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.DepartmentLayoutRequestModel">
            <summary>
            Request model for a department layout
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutRequestModel.DepartmentId">
            <summary>
            The department id
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutRequestModel.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutRequestModel.Rooms">
            <summary>
            The layout
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentLayoutRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.DepartmentRequestModel">
            <summary>
            Request model for a department
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRequestModel.UniversityId">
            <summary>
            The university id
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRequestModel.Category">
            <summary>
            The category
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRequestModel.Fields">
            <summary>
            The fields of study
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRequestModel.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRequestModel.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRequestModel.TotalStaffMembers">
            <summary>
            The number of staff members
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRequestModel.WorkHours">
            <summary>
            The work hours
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRequestModel.ImageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRequestModel.Location">
            <summary>
            The location
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRequestModel.Billing">
            <summary>
            The billing information
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRequestModel.Shipping">
            <summary>
            The shipping information
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRequestModel.Labels">
            <summary>
            The labels
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.LabelRequestModel">
            <summary>
            Request model used for a label
            </summary>
        </member>
        <member name="P:MeetEdu.LabelRequestModel.CompanyId">
            <summary>
            The company id
            </summary>
        </member>
        <member name="P:MeetEdu.LabelRequestModel.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="M:MeetEdu.LabelRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.LogInRequestModel">
            <summary>
            Request model used for logging a user in
            </summary>
        </member>
        <member name="P:MeetEdu.LogInRequestModel.Username">
            <summary>
            The user's username or email
            </summary>
        </member>
        <member name="P:MeetEdu.LogInRequestModel.Password">
            <summary>
            The user's password
            </summary>
        </member>
        <member name="M:MeetEdu.LogInRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.LogInRequestModel.#ctor(System.String,System.String)">
            <summary>
            Standard constructor
            </summary>
            <param name="userNameOrEmail">The user's username or email</param>
            <param name="password">The user's password</param>
        </member>
        <member name="T:MeetEdu.StandardRequestModel">
            <summary>
            The standard request model
            </summary>
        </member>
        <member name="P:MeetEdu.StandardRequestModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:MeetEdu.StandardRequestModel.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="M:MeetEdu.StandardRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.StandardRequestModel.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.UniversityRequestModel">
            <summary>
            Request model used for a university
            </summary>
        </member>
        <member name="P:MeetEdu.UniversityRequestModel.ImageUrl">
            <summary>
            The image
            </summary>
        </member>
        <member name="P:MeetEdu.UniversityRequestModel.Labels">
            <summary>
            The labels
            </summary>
        </member>
        <member name="M:MeetEdu.UniversityRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.MemberRequestModel">
            <summary>
            Request model used for a member
            </summary>
        </member>
        <member name="P:MeetEdu.MemberRequestModel.UserId">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="M:MeetEdu.MemberRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.ProfessorRequestModel">
            <summary>
            Request model used for a professor 
            </summary>
        </member>
        <member name="P:MeetEdu.ProfessorRequestModel.Websites">
            <summary>
            The personal websites 
            </summary>
        </member>
        <member name="P:MeetEdu.ProfessorRequestModel.Field">
            <summary>
            The field of study
            </summary>
        </member>
        <member name="P:MeetEdu.ProfessorRequestModel.ResearchInterests">
            <summary>
            The research interests
            </summary>
        </member>
        <member name="M:MeetEdu.ProfessorRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.SecretaryRequestModel">
            <summary>
            Request model used for a secretary 
            </summary>
        </member>
        <member name="P:MeetEdu.SecretaryRequestModel.Role">
            <summary>
            The role
            </summary>
        </member>
        <member name="M:MeetEdu.SecretaryRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.StaffMemberRequestModel">
            <summary>
            Request model used for a staff member
            </summary>
        </member>
        <member name="P:MeetEdu.StaffMemberRequestModel.UserId">
            <summary>
            The user id
            </summary>
        </member>
        <member name="P:MeetEdu.StaffMemberRequestModel.DepartmentId">
            <summary>
            The department id
            </summary>
        </member>
        <member name="P:MeetEdu.StaffMemberRequestModel.WeeklySchedule">
            <summary>
            The weekly schedule
            </summary>
        </member>
        <member name="M:MeetEdu.StaffMemberRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.UserRequestModel">
            <summary>
            Request model used for a user
            </summary>
        </member>
        <member name="P:MeetEdu.UserRequestModel.Username">
            <summary>
            The username
            </summary>
        </member>
        <member name="P:MeetEdu.UserRequestModel.FirstName">
            <summary>
            The first name
            </summary>
        </member>
        <member name="P:MeetEdu.UserRequestModel.LastName">
            <summary>
            The last name
            </summary>
        </member>
        <member name="P:MeetEdu.UserRequestModel.PasswordHash">
            <summary>
            Gets or sets a salted and hashed representation of the password for this user.
            </summary>
        </member>
        <member name="P:MeetEdu.UserRequestModel.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:MeetEdu.UserRequestModel.IsEmailConfirmed">
            <summary>
            A flag indicating whether the email is confirmed or not
            </summary>
        </member>
        <member name="P:MeetEdu.UserRequestModel.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="P:MeetEdu.UserRequestModel.ImageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="P:MeetEdu.UserRequestModel.DateOfBirth">
            <summary>
            The birthday
            </summary>
        </member>
        <member name="P:MeetEdu.UserRequestModel.Shipping">
            <summary>
            The shipping information
            </summary>
        </member>
        <member name="P:MeetEdu.UserRequestModel.Billing">
            <summary>
            The billing information
            </summary>
        </member>
        <member name="M:MeetEdu.UserRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.WeeklyScheduleRequestModel">
            <summary>
            Request model used for a weekly schedule
            </summary>
        </member>
        <member name="P:MeetEdu.WeeklyScheduleRequestModel.WorkHours">
            <summary>
            The work hours
            </summary>
        </member>
        <member name="P:MeetEdu.WeeklyScheduleRequestModel.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="M:MeetEdu.WeeklyScheduleRequestModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.AppointmentResponseModel">
            <summary>
            Represents an appointment 
            </summary>
        </member>
        <member name="F:MeetEdu.AppointmentResponseModel.mProfessorId">
            <summary>
            The member of the <see cref="P:MeetEdu.AppointmentResponseModel.ProfessorId"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentResponseModel.ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentResponseModel.RuleId">
            <summary>
            The appointment rule id
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentResponseModel.Date">
            <summary>
            The date
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentResponseModel.TimeStart">
            <summary>
            The time that the appointment begins
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentResponseModel.TimeEnd">
            <summary>
            The time that the appointment ends
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentResponseModel.IsCanceled">
            <summary>
            A flag indicating whether the subscription was canceled or not
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentResponseModel.DateCanceled">
            <summary>
            The date the customer subscription was canceled
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentResponseModel.IsRemote">
            <summary>
            A flag indicating whether it is remote or not
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentResponseModel.Rule">
            <summary>
            The rule
            </summary>
        </member>
        <member name="M:MeetEdu.AppointmentResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.EmbeddedAppointmentResponseModel">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.AppointmentResponseModel"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedAppointmentResponseModel.mProfessorId">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedAppointmentResponseModel.ProfessorId"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentResponseModel.ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentResponseModel.RuleId">
            <summary>
            The appointment rule id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentResponseModel.Date">
            <summary>
            The date
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentResponseModel.TimeStart">
            <summary>
            The time that the appointment begins
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentResponseModel.TimeEnd">
            <summary>
            The time that the appointment ends
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentResponseModel.IsCanceled">
            <summary>
            A flag indicating whether the subscription was canceled or not
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentResponseModel.IsRemote">
            <summary>
            A flag indicating whether it is remote or not
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentResponseModel.Rule">
            <summary>
            The subject
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedAppointmentResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.AppointmentRuleResponseModel">
            <summary>
            Represents an appointment template 
            </summary>
        </member>
        <member name="F:MeetEdu.AppointmentRuleResponseModel.mProfessorId">
            <summary>
            The member of the <see cref="P:MeetEdu.AppointmentRuleResponseModel.ProfessorId"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.AppointmentRuleResponseModel.mDescription">
            <summary>
            The member of the <see cref="P:MeetEdu.AppointmentRuleResponseModel.Description"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.AppointmentRuleResponseModel.mNote">
            <summary>
            The member of the <see cref="P:MeetEdu.AppointmentRuleResponseModel.Note"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleResponseModel.ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleResponseModel.HasRemoteOption">
            <summary>
            A flag indicating whether it has a remote option or not
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleResponseModel.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleResponseModel.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleResponseModel.Duration">
            <summary>
            The duration
            </summary>
        </member>
        <member name="M:MeetEdu.AppointmentRuleResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.EmbeddedAppointmentRuleResponseModel">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.AppointmentRuleResponseModel"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedAppointmentRuleResponseModel.mProfessorId">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedAppointmentRuleResponseModel.ProfessorId"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentRuleResponseModel.ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentRuleResponseModel.HasRemoteOption">
            <summary>
            A flag indicating whether it has a remote option or not
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentRuleResponseModel.Duration">
            <summary>
            The duration
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedAppointmentRuleResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.BaseResponseModel">
            <summary>
            The base response model
            </summary>
        </member>
        <member name="F:MeetEdu.BaseResponseModel.mId">
            <summary>
            The member of the <see cref="P:MeetEdu.BaseResponseModel.Id"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.BaseResponseModel.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="M:MeetEdu.BaseResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.EmbeddedBaseResponseModel">
            <summary>
            The base for all the embedded response models
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedBaseResponseModel.mSource">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedBaseResponseModel.Source"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedBaseResponseModel.Source">
            <summary>
            The id of the entity that was used for creating the current 
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedBaseResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.DateResponseModel">
            <summary>
            The date response model
            </summary>
        </member>
        <member name="P:MeetEdu.DateResponseModel.DateCreated">
            <summary>
            The creation date
            </summary>
        </member>
        <member name="P:MeetEdu.DateResponseModel.DateModified">
            <summary>
            The last modification date
            </summary>
        </member>
        <member name="M:MeetEdu.DateResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.DepartmentContactMessageResponseModel">
            <summary>
            Represents a department contact message 
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentContactMessageResponseModel.mDepartmentId">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentContactMessageResponseModel.DepartmentId"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentContactMessageResponseModel.mFirstName">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentContactMessageResponseModel.FirstName"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentContactMessageResponseModel.mLastName">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentContactMessageResponseModel.LastName"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentContactMessageResponseModel.mMessage">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentContactMessageResponseModel.Message"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentContactMessageResponseModel.mEmail">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentContactMessageResponseModel.Email"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageResponseModel.DepartmentId">
            <summary>
            The department id
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageResponseModel.MemberId">
            <summary>
            The member id
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageResponseModel.FirstName">
            <summary>
            The first name
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageResponseModel.LastName">
            <summary>
            The last name
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageResponseModel.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageResponseModel.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageResponseModel.Message">
            <summary>
            The message
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentContactMessageResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.EmbeddedDepartmentContactMessageResponseModel">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.DepartmentContactMessageResponseModel"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedDepartmentContactMessageResponseModel.mDepartmentId">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedDepartmentContactMessageResponseModel.DepartmentId"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedDepartmentContactMessageResponseModel.mEmail">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedDepartmentContactMessageResponseModel.Email"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentContactMessageResponseModel.DepartmentId">
            <summary>
            The department id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentContactMessageResponseModel.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentContactMessageResponseModel.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedDepartmentContactMessageResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.DepartmentLayoutResponseModel">
            <summary>
            Represents a company layout document in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentLayoutResponseModel.mDepartmentId">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentLayoutResponseModel.DepartmentId"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentLayoutResponseModel.mDescription">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentLayoutResponseModel.Description"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentLayoutResponseModel.mRooms">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentLayoutResponseModel.Rooms"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutResponseModel.DepartmentId">
            <summary>
            The department id
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutResponseModel.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutResponseModel.Rooms">
            <summary>
            The layout
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentLayoutResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.DepartmentResponseModel">
            <summary>
            Represents a department 
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentResponseModel.mUniversityId">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentResponseModel.UniversityId"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentResponseModel.mNote">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentResponseModel.Note"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentResponseModel.mDescription">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentResponseModel.Description"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentResponseModel.mFields">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentResponseModel.Fields"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentResponseModel.mLabels">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentResponseModel.Labels"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentResponseModel.UniversityId">
            <summary>
            The university id
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentResponseModel.Category">
            <summary>
            The category
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentResponseModel.Fields">
            <summary>
            The fields of study
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentResponseModel.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentResponseModel.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentResponseModel.TotalStaffMembers">
            <summary>
            The number of staff members
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentResponseModel.WorkHours">
            <summary>
            The work hours
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentResponseModel.ImageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentResponseModel.Location">
            <summary>
            The location
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentResponseModel.Billing">
            <summary>
            The billing information
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentResponseModel.Shipping">
            <summary>
            The shipping information
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentResponseModel.Labels">
            <summary>
            The labels
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.EmbeddedDepartmentResponseModel">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.DepartmentResponseModel"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedDepartmentResponseModel.mUniversityId">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedDepartmentResponseModel.UniversityId"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentResponseModel.UniversityId">
            <summary>
            The university id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentResponseModel.TotalStaffMembers">
            <summary>
            The number of staff members
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentResponseModel.ImageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentResponseModel.Location">
            <summary>
            The location
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedDepartmentResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.LabelResponseModel">
            <summary>
            Represents a label
            </summary>
        </member>
        <member name="F:MeetEdu.LabelResponseModel.mDescription">
            <summary>
            The member of the <see cref="P:MeetEdu.LabelResponseModel.Description"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.LabelResponseModel.mCompanyId">
            <summary>
            The member of the <see cref="P:MeetEdu.LabelResponseModel.DepartmentId"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.LabelResponseModel.DepartmentId">
            <summary>
            The company id
            </summary>
        </member>
        <member name="P:MeetEdu.LabelResponseModel.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="M:MeetEdu.LabelResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.EmbeddedLabelResponseModel">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.LabelResponseModel"/> used when embedding
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedLabelResponseModel.mCompanyId">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedLabelResponseModel.DepartmentId"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedLabelResponseModel.DepartmentId">
            <summary>
            The company id
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedLabelResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.StandardResponseModel">
            <summary>
            The standard response model
            </summary>
        </member>
        <member name="F:MeetEdu.StandardResponseModel.mName">
            <summary>
            The member of the <see cref="P:MeetEdu.StandardResponseModel.Name"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.StandardResponseModel.mColor">
            <summary>
            The member of the <see cref="P:MeetEdu.StandardResponseModel.Color"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.StandardResponseModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:MeetEdu.StandardResponseModel.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="M:MeetEdu.StandardResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.StandardResponseModel.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EmbeddedStandardResponseModel">
            <summary>
            The embedded standard response model
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedStandardResponseModel.mName">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedStandardResponseModel.Name"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedStandardResponseModel.mColor">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedStandardResponseModel.Color"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedStandardResponseModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedStandardResponseModel.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedStandardResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedStandardResponseModel.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.UniversityResponseModel">
            <summary>
            Represents a university 
            </summary>
        </member>
        <member name="F:MeetEdu.UniversityResponseModel.mLabels">
            <summary>
            The member of the <see cref="P:MeetEdu.UniversityResponseModel.Labels"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.UniversityResponseModel.ImageUrl">
            <summary>
            The image
            </summary>
        </member>
        <member name="P:MeetEdu.UniversityResponseModel.Labels">
            <summary>
            The labels
            </summary>
        </member>
        <member name="M:MeetEdu.UniversityResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.EmbeddedUniversityResponseModel">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.UniversityResponseModel"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedUniversityResponseModel.ImageUrl">
            <summary>
            The image
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedUniversityResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.MemberResponseModel">
            <summary>
            Represents a member
            </summary>
        </member>
        <member name="F:MeetEdu.MemberResponseModel.mUserId">
            <summary>
            The member of the <see cref="P:MeetEdu.MemberResponseModel.UserId"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.MemberResponseModel.UserId">
            <summary>
            The user id
            </summary>
        </member>
        <member name="P:MeetEdu.MemberResponseModel.TotalAppointments">
            <summary>
            The total number of appointments
            </summary>
        </member>
        <member name="P:MeetEdu.MemberResponseModel.TotalSavedCompanies">
            <summary>
            The total number of saved companies
            </summary>
        </member>
        <member name="P:MeetEdu.MemberResponseModel.TotalSavedProfessors">
            <summary>
            The total number of saved professors
            </summary>
        </member>
        <member name="P:MeetEdu.MemberResponseModel.User">
            <summary>
            The user
            </summary>
        </member>
        <member name="M:MeetEdu.MemberResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.EmbeddedMemberResponseModel">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.MemberResponseModel"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedMemberResponseModel.mUserId">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedMemberResponseModel.UserId"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedMemberResponseModel.UserId">
            <summary>
            The user id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedMemberResponseModel.User">
            <summary>
            The user
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedMemberResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.ProfessorResponseModel">
            <summary>
            Represents a professor 
            </summary>
        </member>
        <member name="F:MeetEdu.ProfessorResponseModel.mField">
            <summary>
            The member of the <see cref="P:MeetEdu.ProfessorResponseModel.Field"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.ProfessorResponseModel.mResearchInterests">
            <summary>
            The member of the <see cref="P:MeetEdu.ProfessorResponseModel.ResearchInterests"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.ProfessorResponseModel.mWebsites">
            <summary>
            The member of the <see cref="P:MeetEdu.ProfessorResponseModel.Websites"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.ProfessorResponseModel.Websites">
            <summary>
            The personal websites 
            </summary>
        </member>
        <member name="P:MeetEdu.ProfessorResponseModel.Field">
            <summary>
            The field of study
            </summary>
        </member>
        <member name="P:MeetEdu.ProfessorResponseModel.ResearchInterests">
            <summary>
            The research interests
            </summary>
        </member>
        <member name="M:MeetEdu.ProfessorResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.EmbeddedProfessorResponseModel">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.ProfessorResponseModel"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedProfessorResponseModel.mField">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedProfessorResponseModel.Field"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedProfessorResponseModel.Field">
            <summary>
            The field of study
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedProfessorResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.SecretaryResponseModel">
            <summary>
            Request model used for a secretary 
            </summary>
        </member>
        <member name="P:MeetEdu.SecretaryResponseModel.Role">
            <summary>
            The role
            </summary>
        </member>
        <member name="M:MeetEdu.SecretaryResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.StaffMemberResponseModel">
            <summary>
            Represents a staff member
            </summary>
        </member>
        <member name="F:MeetEdu.StaffMemberResponseModel.mUserId">
            <summary>
            The member of the <see cref="P:MeetEdu.StaffMemberResponseModel.UserId"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.StaffMemberResponseModel.mDepartmentId">
            <summary>
            The member of the <see cref="P:MeetEdu.StaffMemberResponseModel.DepartmentId"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.StaffMemberResponseModel.mQuote">
            <summary>
            The member of the <see cref="P:MeetEdu.StaffMemberResponseModel.Quote"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.StaffMemberResponseModel.UserId">
            <summary>
            The user id
            </summary>
        </member>
        <member name="P:MeetEdu.StaffMemberResponseModel.DepartmentId">
            <summary>
            The department id
            </summary>
        </member>
        <member name="P:MeetEdu.StaffMemberResponseModel.Quote">
            <summary>
            The quote
            </summary>
        </member>
        <member name="P:MeetEdu.StaffMemberResponseModel.WeeklySchedule">
            <summary>
            The weekly schedule
            </summary>
        </member>
        <member name="P:MeetEdu.StaffMemberResponseModel.User">
            <summary>
            The user
            </summary>
        </member>
        <member name="M:MeetEdu.StaffMemberResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.EmbeddedStaffMemberResponseModel">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.StaffMemberResponseModel"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedStaffMemberResponseModel.mUserId">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedStaffMemberResponseModel.UserId"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedStaffMemberResponseModel.mDepartmentId">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedStaffMemberResponseModel.DepartmentId"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedStaffMemberResponseModel.UserId">
            <summary>
            The user id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedStaffMemberResponseModel.DepartmentId">
            <summary>
            The department id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedStaffMemberResponseModel.WeeklySchedule">
            <summary>
            The weekly schedule
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedStaffMemberResponseModel.User">
            <summary>
            The user
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedStaffMemberResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.UserResponseModel">
            <summary>
            Represents a user
            </summary>
        </member>
        <member name="F:MeetEdu.UserResponseModel.mFirstName">
            <summary>
            The member of the <see cref="P:MeetEdu.UserResponseModel.FirstName"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.UserResponseModel.mLastName">
            <summary>
            The member of the <see cref="P:MeetEdu.UserResponseModel.LastName"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.UserResponseModel.mUsername">
            <summary>
            The member of the <see cref="P:MeetEdu.UserResponseModel.Username"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.UserResponseModel.mEmail">
            <summary>
            The member of the <see cref="P:MeetEdu.UserResponseModel.Email"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.UserResponseModel.Username">
            <summary>
            The username
            </summary>
        </member>
        <member name="P:MeetEdu.UserResponseModel.FirstName">
            <summary>
            The first name
            </summary>
        </member>
        <member name="P:MeetEdu.UserResponseModel.LastName">
            <summary>
            The last name
            </summary>
        </member>
        <member name="P:MeetEdu.UserResponseModel.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:MeetEdu.UserResponseModel.IsEmailConfirmed">
            <summary>
            A flag indicating whether the email is confirmed or not
            </summary>
        </member>
        <member name="P:MeetEdu.UserResponseModel.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="P:MeetEdu.UserResponseModel.ImageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="P:MeetEdu.UserResponseModel.DateOfBirth">
            <summary>
            The birthday
            </summary>
        </member>
        <member name="P:MeetEdu.UserResponseModel.Shipping">
            <summary>
            The shipping information
            </summary>
        </member>
        <member name="P:MeetEdu.UserResponseModel.Billing">
            <summary>
            The billing information
            </summary>
        </member>
        <member name="M:MeetEdu.UserResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.EmbeddedUserResponseModel">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.UserResponseModel"/> used when embedding
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedUserResponseModel.mFirstName">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedUserResponseModel.FirstName"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedUserResponseModel.mLastName">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedUserResponseModel.LastName"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedUserResponseModel.mUsername">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedUserResponseModel.Username"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedUserResponseModel.Username">
            <summary>
            The username
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedUserResponseModel.FirstName">
            <summary>
            The first name
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedUserResponseModel.LastName">
            <summary>
            The last name
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedUserResponseModel.ImageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedUserResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.WeeklyScheduleResponseModel">
            <summary>
            Represents a weekly schedule
            </summary>
        </member>
        <member name="F:MeetEdu.WeeklyScheduleResponseModel.mWorkHours">
            <summary>
            The member of the <see cref="P:MeetEdu.WeeklyScheduleResponseModel.WorkHours"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.WeeklyScheduleResponseModel.mNote">
            <summary>
            The member of the <see cref="P:MeetEdu.WeeklyScheduleResponseModel.Note"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.WeeklyScheduleResponseModel.WorkHours">
            <summary>
            The work hours
            </summary>
        </member>
        <member name="P:MeetEdu.WeeklyScheduleResponseModel.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="M:MeetEdu.WeeklyScheduleResponseModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.APIArgs">
            <summary>
            Query arguments that provide pagination
            </summary>
        </member>
        <member name="F:MeetEdu.APIArgs.mOffset">
            <summary>
            The member of the <see cref="P:MeetEdu.APIArgs.Offset"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.APIArgs.Page">
            <summary>
            The index of the page starting from 0.
            </summary>
        </member>
        <member name="P:MeetEdu.APIArgs.PerPage">
            <summary>
            Maximum number of entries to be returned in result set.
            </summary>
        </member>
        <member name="P:MeetEdu.APIArgs.Offset">
            <summary>
            Offset the result set by a specific number of items.
            </summary>
        </member>
        <member name="M:MeetEdu.APIArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.StafMemberAPIArgs">
            <summary>
            Arguments used for retrieving data that belong to a staff member
            </summary>
        </member>
        <member name="P:MeetEdu.StafMemberAPIArgs.IncludeDepartments">
            <summary>
            Limit the result to entries with specific department ids
            </summary>
        </member>
        <member name="P:MeetEdu.StafMemberAPIArgs.ExcludeDepartments">
            <summary>
            Limit the result to entries without specific department ids
            </summary>
        </member>
        <member name="M:MeetEdu.StafMemberAPIArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.DepartmentAPIArgs">
            <summary>
            Arguments used for retrieving data that belong to a department
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentAPIArgs.IncludeUniversities">
            <summary>
            Limit the result to entries with specific university ids
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentAPIArgs.ExcludeUniversities">
            <summary>
            Limit the result to entries without specific university ids
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentAPIArgs.IncludeFields">
            <summary>
            Limit the result to entries with specific field ids
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentAPIArgs.ExcludeFields">
            <summary>
            Limit the result to entries without specific field ids
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentAPIArgs.IncludeLabels">
            <summary>
            Limit the result to entries with specific label ids
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentAPIArgs.ExcludeLabels">
            <summary>
            Limit the result to entries without specific label ids
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentAPIArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.DepartmentRelatedAPIArgs">
            <summary>
            Arguments used for retrieving data that belong to a department layout
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRelatedAPIArgs.IncludeDepartments">
            <summary>
            Limit the result to entries with specific department ids
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentRelatedAPIArgs.ExcludeDepartments">
            <summary>
            Limit the result to entries without specific department ids
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentRelatedAPIArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.AppointmentRuleAPIArgs">
            <summary>
            Arguments used for retrieving data that belong to a professor
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleAPIArgs.IncludeProfessors">
            <summary>
            Limit the result to entries with specific professor ids
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleAPIArgs.ExcludeProfessors">
            <summary>
            Limit the result to entries without specific professor ids
            </summary>
        </member>
        <member name="M:MeetEdu.AppointmentRuleAPIArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.MemberRelatedAPIArgs">
            <summary>
            Arguments used for retrieving members
            </summary>
        </member>
        <member name="M:MeetEdu.MemberRelatedAPIArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.BaseArgs">
            <summary>
            The base for all the classes that are used as arguments
            </summary>
        </member>
        <member name="F:MeetEdu.BaseArgs.mMaps">
            <summary>
            The maps
            </summary>
        </member>
        <member name="M:MeetEdu.BaseArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.BaseArgs.ToArgs``1">
            <summary>
            Creates and returns an instance of <typeparamref name="TArgs"/> from the current arguments
            by copying the values of the properties with the same name and the same property type of
            the arguments
            </summary>
            <typeparam name="TArgs">The type of the arguments</typeparam>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.BaseArgs.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:MeetEdu.BaseArgs.ArgsToArgsMap.SourceArgsType">
            <summary>
            The type of the source arguments
            </summary>
        </member>
        <member name="P:MeetEdu.BaseArgs.ArgsToArgsMap.DestinationArgsType">
            <summary>
            The type of the destination arguments
            </summary>
        </member>
        <member name="P:MeetEdu.BaseArgs.ArgsToArgsMap.SourcePropertyToDestinationPropertyPairs">
            <summary>
            Pairs between the source and the destination properties that can have their values copied
            </summary>
        </member>
        <member name="M:MeetEdu.BaseArgs.ArgsToArgsMap.#ctor(System.Type,System.Type)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.ConditionableAPIArgs">
            <summary>
            Query arguments that provide conditional based filtering options.
            </summary>
        </member>
        <member name="P:MeetEdu.ConditionableAPIArgs.Condition">
            <summary>
            The condition.
            </summary>
        </member>
        <member name="M:MeetEdu.ConditionableAPIArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.OrderableAPIArgs">
            <summary>
            Query arguments that provide ordering options
            </summary>
        </member>
        <member name="P:MeetEdu.OrderableAPIArgs.Order">
            <summary>
            The order condition.
            NOTE: The default is <see cref="F:MeetEdu.OrderCondition.Descending"/>!
            </summary>
        </member>
        <member name="P:MeetEdu.OrderableAPIArgs.OrderBy">
            <summary>
            The fields in order that should be used for ordering the results.
            </summary>
        </member>
        <member name="P:MeetEdu.OrderableAPIArgs.MeetEdu#IOrderable#Rules">
            <summary>
            The rules
            </summary>
        </member>
        <member name="M:MeetEdu.OrderableAPIArgs.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.SearchBar">
            <summary>
            The search bar component
            </summary>
        </member>
        <member name="F:MeetEdu.SearchBar.mIsSearchForDepartments">
            <summary>
            The member of the <see cref="P:MeetEdu.SearchBar.IsSearchForDepartments"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.SearchBar.mSearchCategory">
            <summary>
            The search category
            </summary>
        </member>
        <member name="F:MeetEdu.SearchBar.mSearchIcon">
            <summary>
            The search icon
            </summary>
        </member>
        <member name="F:MeetEdu.SearchBar.mSearchBackColor">
            <summary>
            The search back color
            </summary>
        </member>
        <member name="P:MeetEdu.SearchBar.Text">
            <summary>
            The search text
            </summary>
        </member>
        <member name="P:MeetEdu.SearchBar.IsSearchForDepartments">
            <summary>
            A flag indicating whether the search regarding departments or not
            </summary>
        </member>
        <member name="M:MeetEdu.SearchBar.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.SearchBar.OnTextChanged(System.String)">
            <summary>
            Handles the text change
            </summary>
            <param name="value">The value</param>
            <returns></returns>
        </member>
        <member name="P:MeetEdu.SearchBar.TextChanged">
            <summary>
            Fires when the <see cref="P:MeetEdu.SearchBar.Text"/> is changed
            </summary>
        </member>
        <member name="T:MeetEdu.UniversityBox">
            <summary>
            The University display box
            </summary>
        </member>
        <member name="P:MeetEdu.UniversityBox.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:MeetEdu.UniversityBox.Image">
            <summary>
            The image
            </summary>
        </member>
        <member name="P:MeetEdu.UniversityBox.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="M:MeetEdu.UniversityBox.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.FrameworkConstructionExtensions">
            <summary>
            Extension methods 
            </summary>
        </member>
        <member name="F:MeetEdu.FrameworkConstructionExtensions.RequestModelSuffix">
            <summary>
            The request model suffix
            </summary>
        </member>
        <member name="F:MeetEdu.FrameworkConstructionExtensions.EntitySuffix">
            <summary>
            The entity suffix
            </summary>
        </member>
        <member name="F:MeetEdu.FrameworkConstructionExtensions.EmbeddedPrefix">
            <summary>
            The embedded model suffix
            </summary>
        </member>
        <member name="F:MeetEdu.FrameworkConstructionExtensions.ResponseModelSuffix">
            <summary>
            The response model suffix
            </summary>
        </member>
        <member name="F:MeetEdu.FrameworkConstructionExtensions.APIArgsSuffix">
            <summary>
            The API args suffix
            </summary>
        </member>
        <member name="T:MeetEdu.MeetEduAPIRoutes">
            <summary>
            The AppontMate related API routes
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.APIRoute">
            <summary>
            The app route
            <code>/appointMate/api</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.VersionRoute">
            <summary>
            The app route
            <code>/appointMate/api/v1</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.BaseRoute">
            <summary>
            The base route
            <code>/appointMate/api/v1/meetEdu</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.LogInRoute">
            <summary>
            The login route
            <code>/appointMate/api/v1/meetEdu/login</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.RegisterRoute">
            <summary>
            The register route
            <code>/appointMate/api/v1/meetEdu/register</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.UsersRoute">
            <summary>
            The users route
            <code>/appointMate/api/v1/meetEdu/users</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.UserRoute">
            <summary>
            The user route
            <code>/appointMate/api/v1/meetEdu/users/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetEduAPIRoutes.GetUserRoute(System.String)">
            <summary>
            Gets the route for the user with the specified <paramref name="userId"/>
            <code>/appointMate/api/v1/meetEdu/users/4</code>
            </summary>
            <param name="userId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.UniversitiesRoute">
            <summary>
            The universities route
            <code>/appointMate/api/v1/meetEdu/universities</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.DepartmentsRoute">
            <summary>
            The departments route
            <code>/appointMate/api/v1/meetEdu/departments</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.DepartmentRoute">
            <summary>
            The department route
            <code>/appointMate/api/v1/meetEdu/departments/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetEduAPIRoutes.GetDepartmentRoute(System.String)">
            <summary>
            Gets the department route for the one with the specified <paramref name="departmentId"/>
            <code>/appointMate/api/v1/meetEdu/departments/3</code>
            </summary>
            <param name="departmentId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.DepartmentContactMessagesRoute">
            <summary>
            The department contact messages route
            <code>/appointMate/api/v1/meetEdu/departments/3/departmentContactMessages</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.DepartmentContactMessageRoute">
            <summary>
            The department contact message route
            <code>/appointMate/api/v1/meetEdu/departmentContactMessages/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetEduAPIRoutes.GetDepartmentContactMessageRoute(System.String)">
            <summary>
            Gets the route for the department contact message with the specified <paramref name="departmentContactMessageId"/>
            <code>/appointMate/api/v1/meetEdu/departmentContactMessages/2</code>
            </summary>
            <param name="departmentContactMessageId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.SecretariesRoute">
            <summary>
            The secretaries route
            <code>/appointMate/api/v1/meetEdu/secretaries</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.SecretaryRoute">
            <summary>
            The secretary route
            <code>/appointMate/api/v1/meetEdu/secretaries/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetEduAPIRoutes.GetSecretaryRoute(System.String)">
            <summary>
            Gets the route for the secretary with the specified <paramref name="secretaryId"/>
            <code>/appointMate/api/v1/meetEdu/secretaries/4</code>
            </summary>
            <param name="secretaryId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.ProfessorsRoute">
            <summary>
            The professors route
            <code>/appointMate/api/v1/meetEdu/professors</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.ProfessorRoute">
            <summary>
            The professor route
            <code>/appointMate/api/v1/meetEdu/professors/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetEduAPIRoutes.GetProfessorRoute(System.String)">
            <summary>
            Gets the professor route for the one with the specified <paramref name="professorId"/>
            <code>/appointMate/api/v1/meetEdu/professors/3</code>
            </summary>
            <param name="professorId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.AppointmentRulesRoute">
            <summary>
            The appointment rules route
            <code>/appointMate/api/v1/meetEdu/appointmentRules</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.AppointmentRuleRoute">
            <summary>
            The appointment rule route
            <code>/appointMate/api/v1/meetEdu/appointmentRules/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetEduAPIRoutes.GetAppointmentRuleRoute(System.String)">
            <summary>
            Gets the route for the appointment with the specified <paramref name="appointmentRuleId"/>
            <code>/appointMate/api/v1/meetEdu/appointmentRules/4</code>
            </summary>
            <param name="appointmentRuleId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.MembersRoute">
            <summary>
            The members route
            <code>/appointMate/api/v1/meetEdu/members</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.MemberRoute">
            <summary>
            The member route
            <code>/appointMate/api/v1/meetEdu/members/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetEduAPIRoutes.GetMemberRoute(System.String)">
            <summary>
            Gets the member route for the one with the specified <paramref name="memberId"/>
            <code>/appointMate/api/v1/meetEdu/members/3</code>
            </summary>
            <param name="memberId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.SavedDepartmentsRoute">
            <summary>
            The saved departments route
            <code>/appointMate/api/v1/meetEdu/savedDepartments</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.SavedProfessorsRoute">
            <summary>
            The saved departments route
            <code>/appointMate/api/v1/meetEdu/savedProfessors</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.AppointmentsRoute">
            <summary>
            The appointments route
            <code>/appointMate/api/v1/meetEdu/appointments</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduAPIRoutes.AppointmentRoute">
            <summary>
            The appointment route
            <code>/appointMate/api/v1/meetEdu/appointments/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetEduAPIRoutes.GetAppointmentRoute(System.String)">
            <summary>
            Gets the route for the appointment with the specified <paramref name="appointmentId"/>
            <code>/appointMate/api/v1/meetEdu/appointments/4</code>
            </summary>
            <param name="appointmentId">The id</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.MeetCoreAPIRoutes">
            <summary>
            The MeetCore related API routes
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.APIRoute">
            <summary>
            The app route
            <code>/appointMate/api</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.VersionRoute">
            <summary>
            The app route
            <code>/appointMate/api/v1</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.BaseRoute">
            <summary>
            The base route
            <code>/appointMate/api/v1/meetCore</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.LogInRoute">
            <summary>
            The login route
            <code>/appointMate/api/v1/meetCore/login</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.RegisterRoute">
            <summary>
            The register route
            <code>/appointMate/api/v1/meetCore/register</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.UsersRoute">
            <summary>
            The users route
            <code>/appointMate/api/v1/meetCore/users</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.UserRoute">
            <summary>
            The user route
            <code>/appointMate/api/v1/meetCore/users/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetCoreAPIRoutes.GetUserRoute(System.String)">
            <summary>
            Gets the route for the user with the specified <paramref name="userId"/>
            <code>/appointMate/api/v1/meetCore/users/4</code>
            </summary>
            <param name="userId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.UniversitiesRoute">
            <summary>
            The universities route
            <code>/appointMate/api/v1/meetCore/universities</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.UniversityRoute">
            <summary>
            The university route
            <code>/appointMate/api/v1/meetCore/universities/5</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetCoreAPIRoutes.GetUniversityRoute(System.String)">
            <summary>
            Gets the route for the university with the specified <paramref name="universityId"/>
            <code>/appointMate/api/v1/meetCore/universities/5</code>
            </summary>
            <param name="universityId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.UniversityLabelsRoute">
            <summary>
            The university labels route
            <code>/appointMate/api/v1/meetCore/universityLabels</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.UniversityLabelRoute">
            <summary>
            The university label route
            <code>/appointMate/api/v1/meetCore/universityLabels/5</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetCoreAPIRoutes.GetUniversityLabelRoute(System.String)">
            <summary>
            Gets the route for the university label with the specified <paramref name="universityLabelId"/>
            <code>/appointMate/api/v1/meetCore/universityLabels/5</code>
            </summary>
            <param name="universityLabelId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.DepartmentsRoute">
            <summary>
            The departments route
            <code>/appointMate/api/v1/meetCore/departments</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.DepartmentRoute">
            <summary>
            The department route
            <code>/appointMate/api/v1/meetCore/departments/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetCoreAPIRoutes.GetDepartmentRoute(System.String)">
            <summary>
            Gets the department route for the one with the specified <paramref name="departmentId"/>
            <code>/appointMate/api/v1/meetCore/departments/3</code>
            </summary>
            <param name="departmentId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.DepartmentLayoutsRoute">
            <summary>
            The department layouts route
            <code>/appointMate/api/v1/meetCore/departmentLayouts</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.DepartmentLayoutRoute">
            <summary>
            The department layout route
            <code>/appointMate/api/v1/meetCore/departmentLayouts/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetCoreAPIRoutes.GetDepartmentLayoutRoute(System.String)">
            <summary>
            Gets the department layout route for the one with the specified <paramref name="departmentLayoutId"/>
            <code>/appointMate/api/v1/meetCore/departmentLayouts/3</code>
            </summary>
            <param name="departmentLayoutId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.DepartmentLabelsRoute">
            <summary>
            The department labels route
            <code>/appointMate/api/v1/meetCore/departmentLabels</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.DepartmentLabelRoute">
            <summary>
            The department label route
            <code>/appointMate/api/v1/meetCore/departmentLabels/5</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetCoreAPIRoutes.GetDepartmentLabelRoute(System.String)">
            <summary>
            Gets the route for the department label with the specified <paramref name="departmentLabelId"/>
            <code>/appointMate/api/v1/meetCore/departmentLabels/5</code>
            </summary>
            <param name="departmentLabelId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.DepartmentContactMessagesRoute">
            <summary>
            The department contact messages route
            <code>/appointMate/api/v1/meetCore/departmentContactMessages</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.DepartmentContactMessageRoute">
            <summary>
            The department contact message route
            <code>/appointMate/api/v1/meetCore/departmentContactMessages/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetCoreAPIRoutes.GetDepartmentContactMessageRoute(System.String)">
            <summary>
            Gets the route for the department contact message with the specified <paramref name="departmentContactMessageId"/>
            <code>/appointMate/api/v1/meetCore/departmentContactMessages/2</code>
            </summary>
            <param name="departmentContactMessageId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.SecretariesRoute">
            <summary>
            The secretaries route
            <code>/appointMate/api/v1/meetCore/secretaries</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.SecretaryRoute">
            <summary>
            The secretary route
            <code>/appointMate/api/v1/meetCore/secretaries/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetCoreAPIRoutes.GetSecretaryRoute(System.String)">
            <summary>
            Gets the route for the secretary with the specified <paramref name="secretaryId"/>
            <code>/appointMate/api/v1/meetCore/secretaries/4</code>
            </summary>
            <param name="secretaryId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.ProfessorsRoute">
            <summary>
            The professors route
            <code>/appointMate/api/v1/meetCore/professors</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.ProfessorRoute">
            <summary>
            The professor route
            <code>/appointMate/api/v1/meetCore/professors/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetCoreAPIRoutes.GetProfessorRoute(System.String)">
            <summary>
            Gets the professor route for the one with the specified <paramref name="professorId"/>
            <code>/appointMate/api/v1/meetCore/professors/3</code>
            </summary>
            <param name="professorId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.AppointmentRulesRoute">
            <summary>
            The appointment rules route
            <code>/appointMate/api/v1/meetCore/appointmentRules</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.AppointmentRuleRoute">
            <summary>
            The appointment rule route
            <code>/appointMate/api/v1/meetCore/appointmentRules/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetCoreAPIRoutes.GetAppointmentRuleRoute(System.String)">
            <summary>
            Gets the route for the appointment with the specified <paramref name="appointmentRuleId"/>
            <code>/appointMate/api/v1/meetCore/appointmentRules/4</code>
            </summary>
            <param name="appointmentRuleId">The id</param>
            <returns></returns>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.AppointmentsRoute">
            <summary>
            The appointments route
            <code>/appointMate/api/v1/meetCore/appointments</code>
            </summary>
        </member>
        <member name="F:MeetEdu.MeetCoreAPIRoutes.AppointmentRoute">
            <summary>
            The appointment route
            <code>/appointMate/api/v1/meetCore/appointments/3</code>
            </summary>
        </member>
        <member name="M:MeetEdu.MeetCoreAPIRoutes.GetAppointmentRoute(System.String)">
            <summary>
            Gets the route for the appointment with the specified <paramref name="appointmentId"/>
            <code>/appointMate/api/v1/meetCore/appointments/4</code>
            </summary>
            <param name="appointmentId">The id</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.MeetEduConstants">
            <summary>
            The constants for the MeetEdu app
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduConstants.AppName">
            <summary>
            The app name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduConstants.PopularSearches">
            <summary>
            Popular searches
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduConstants.Explorer">
            <summary>
            Explorer
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduConstants.MyAccount">
            <summary>
            My account
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduConstants.Appointments">
            <summary>
            Appointments
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduConstants.Favorites">
            <summary>
            Favorites
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduConstants.Settings">
            <summary>
            Settings
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduConstants.LogIn">
            <summary>
            Log in
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduConstants.LogOut">
            <summary>
            Log out
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduConstants.Departments">
            <summary>
            Departments
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduConstants.Faculty">
            <summary>
            Faculty
            </summary>
        </member>
        <member name="T:MeetEdu.MeetEduWebServerConstants">
            <summary>
            Web server constants related to the MeetEdu application
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduWebServerConstants.NoCompaniesWereFoundWithTheSpecifiedIdsErrorMessage">
            <summary>
            Error message indicating no companies were found with the specified ids
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduWebServerConstants.NoSessionWasCreatedErrorMessage">
            <summary>
            Error message indicating invalid registration credentials
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduWebServerConstants.InvalidLogInCredentialsErrorMessage">
            <summary>
            Error message indicating an invalid username or an invalid password
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduWebServerConstants.InvalidRegistrationCredentialsErrorMessage">
            <summary>
            Error message indicating invalid registration credentials
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduWebServerConstants.InsufficientCustomerPointsErrorMessage">
            <summary>
            Error message indicating insufficient customer points
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduWebServerConstants.NoCustomerIdSpecifiedInTheRequestErrorMessage">
            <summary>
            Error message indicating no customer id was specified
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduWebServerConstants.NoAppointmentTemplateIdSpecifiedInTheRequestErrorMessage">
            <summary>
            Error message indicating no appointment template id was specified
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduWebServerConstants.NoServiceIdSpecifiedInTheRequestErrorMessage">
            <summary>
            Error message indicating no service id was specified
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduWebServerConstants.TheCustomerServicePurchasedAmountCanNotBeSetToLessThanThePaidAmountErrorMessage">
            <summary>
            Error message indicating that the purchased amount of a customer service can not be set to less than the paid amount
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduWebServerConstants.TheCustomerServicePurchasedAmountCanNotBeSetToLessThanTheAmountOfTheScheduledPaymentsErrorMessage">
            <summary>
            Error message indicating that the purchased amount of a customer service can not be set to less than the amount of the scheduled payments
            </summary>
        </member>
        <member name="M:MeetEdu.MeetEduWebServerConstants.GetCustomerWithUserIdNotFoundErrorMessage(MongoDB.Bson.ObjectId)">
            <summary>
            Error message indicating that there are no customers with the specified user id
            </summary>
            <param name="id">The user id</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.MeetCoreController">
            <summary>
            Controller used for handing the requests related to a MeetCore related application
            </summary>
        </member>
        <member name="P:MeetEdu.MeetCoreController.UniversityId">
            <summary>
            The university id
            </summary>
        </member>
        <member name="P:MeetEdu.MeetCoreController.DepartmentId">
            <summary>
            The department id
            </summary>
        </member>
        <member name="M:MeetEdu.MeetCoreController.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.MeetCoreController.RegisterUserAsync(MeetEdu.UserRequestModel)">
            <summary>
            Registers a user
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.LoginAsync(MeetEdu.LogInRequestModel)">
            <summary>
            Validates the user credentials sent by the user and returns the user
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetUniversitiesAsync(MeetEdu.APIArgs,System.Threading.CancellationToken)">
            <summary>
            Gets the universities
            </summary>
            <param name="args">The arguments</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.AddUniversityAsync(MeetEdu.UniversityRequestModel,System.Threading.CancellationToken)">
            <summary>
            Creates a university
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetUniversityAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the university with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.UpdateUniversityAsync(System.String,MeetEdu.UniversityRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the university with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.DeleteUniversityAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the university with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetUniversityLabelsAsync(MeetEdu.APIArgs,System.Threading.CancellationToken)">
            <summary>
            Gets the university labels
            </summary>
            <param name="args">The arguments</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.AddUniversityLabelAsync(MeetEdu.LabelRequestModel,System.Threading.CancellationToken)">
            <summary>
            Creates a university label
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetUniversityLabelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the university label with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.UpdateUniversityLabelAsync(System.String,MeetEdu.LabelRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the university label with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.DeleteUniversityLabelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the university label with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetDepartmentsAsync(MeetEdu.DepartmentAPIArgs,System.Threading.CancellationToken)">
            <summary>
            Gets the departments
            </summary>
            <param name="args">The arguments</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.AddDepartmentAsync(MeetEdu.DepartmentRequestModel,System.Threading.CancellationToken)">
            <summary>
            Creates a department
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetDepartmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the department with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.UpdateDepartmentAsync(System.String,MeetEdu.DepartmentRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the department with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.DeleteDepartmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the department with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetDepartmentLayoutsAsync(MeetEdu.DepartmentRelatedAPIArgs,System.Threading.CancellationToken)">
            <summary>
            Gets the departments
            </summary>
            <param name="args">The arguments</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.AddDepartmentLayoutAsync(MeetEdu.DepartmentLayoutRequestModel,System.Threading.CancellationToken)">
            <summary>
            Creates a department
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetDepartmentLayoutAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the department with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.UpdateDepartmentLayoutAsync(System.String,MeetEdu.DepartmentLayoutRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the department with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.DeleteDepartmentLayoutAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the department with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetDepartmentLabelsAsync(MeetEdu.DepartmentRelatedAPIArgs,System.Threading.CancellationToken)">
            <summary>
            Gets the department labels
            </summary>
            <param name="args">The arguments</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.AddDepartmentLabelAsync(MeetEdu.LabelRequestModel,System.Threading.CancellationToken)">
            <summary>
            Creates a department label
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetDepartmentLabelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the department label with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.UpdateDepartmentLabelAsync(System.String,MeetEdu.LabelRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the department label with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.DeleteDepartmentLabelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the department label with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetDepartmentContactMessagesAsync(MeetEdu.DepartmentRelatedAPIArgs,System.Threading.CancellationToken)">
            <summary>
            Gets the department contact messages
            </summary>
            <param name="args">The arguments</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.AddDepartmentContactMessageAsync(MeetEdu.DepartmentContactMessageRequestModel,System.Threading.CancellationToken)">
            <summary>
            Creates a department contact message
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetDepartmentContactMessageAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the department contact message with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.UpdateDepartmentContactMessageAsync(System.String,MeetEdu.DepartmentContactMessageRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the department contact message with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.DeleteDepartmentContactMessageAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the department contact message with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetSecretariesAsync(MeetEdu.StafMemberAPIArgs,System.Threading.CancellationToken)">
            <summary>
            Gets the secretaries
            </summary>
            <param name="args">The arguments</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.AddSecretaryAsync(MeetEdu.SecretaryRequestModel,System.Threading.CancellationToken)">
            <summary>
            Creates a secretary
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetSecretaryAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the secretary
            </summary>
            <param name="id"></param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.UpdateSecretaryAsync(System.String,MeetEdu.SecretaryRequestModel,MeetEdu.UserRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the secretary with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="user">The user</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.DeleteSecretaryAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the secretary with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetProfessorsAsync(MeetEdu.StafMemberAPIArgs,System.Threading.CancellationToken)">
            <summary>
            Gets the professors
            </summary>
            <param name="args">The arguments</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.AddProfessorAsync(MeetEdu.ProfessorRequestModel,System.Threading.CancellationToken)">
            <summary>
            Creates a professor
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetProfessorAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the secretary
            </summary>
            <param name="id"></param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.UpdateProfessorAsync(System.String,MeetEdu.ProfessorRequestModel,MeetEdu.UserRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the secretary with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="user">The user</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.DeleteProfessorAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the secretary with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetAppointmentRulesAsync(MeetEdu.AppointmentRuleAPIArgs,System.Threading.CancellationToken)">
            <summary>
            Gets the appointment rules
            </summary>
            <param name="args">The arguments</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.AddAppointmentRuleAsync(MeetEdu.AppointmentRuleRequestModel,System.Threading.CancellationToken)">
            <summary>
            Creates a appointment
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetAppointmentRuleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the appointment with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.UpdateAppointmentRuleAsync(System.String,MeetEdu.AppointmentRuleRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the appointment with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.DeleteAppointmentRuleAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the appointment with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetAppointmentsAsync(MeetEdu.APIArgs,System.Threading.CancellationToken)">
            <summary>
            Gets the appointments
            </summary>
            <param name="args">The arguments</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.AddAppointmentAsync(MeetEdu.AppointmentRequestModel,System.Threading.CancellationToken)">
            <summary>
            Creates a appointment
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.GetAppointmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the appointment with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.UpdateAppointmentAsync(System.String,MeetEdu.AppointmentRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the appointment with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetCoreController.DeleteAppointmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the appointment with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.MeetEduController">
            <summary>
            Controller used for handing the requests related to an MeetEdu related application
            </summary>
        </member>
        <member name="M:MeetEdu.MeetEduController.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.MeetEduController.RegisterUserAsync(MeetEdu.UserRequestModel)">
            <summary>
            Registers a user
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.LoginAsync(MeetEdu.LogInRequestModel)">
            <summary>
            Validates the user credentials sent by the user and returns the user
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.GetUserAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the user with the specified <paramref name="id"/>
            </summary>
            <param name="id">The memberId</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.GetUniversityAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the university with the specified <paramref name="id"/>
            </summary>
            <param name="id">The memberId</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.GetDepartmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the department with the specified <paramref name="id"/>
            </summary>
            <param name="id">The memberId</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.GetProfessorAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the professor with the specified <paramref name="id"/>
            </summary>
            <param name="id">The memberId</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.GetAppointmentRulesAsync(MeetEdu.AppointmentRuleAPIArgs,System.Threading.CancellationToken)">
            <summary>
            Gets the appointment rules
            </summary>
            <param name="args">The arguments</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.GetMemberAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the member with the specified <paramref name="id"/>
            </summary>
            <param name="id">The memberId</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.AddMemberSavedDepartmentAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Adds a saved the department with the specified <paramref name="departmentId"/> to the member with the specified <paramref name="memberId"/>
            </summary>
            <param name="memberId">The memberId</param>
            <param name="departmentId">The department id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.GetMemberSavedDepartmentsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the saved departments of the user with the specified <paramref name="id"/>
            </summary>
            <param name="id">The user id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.GetMemberSavedDepartmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the saved department with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.DeleteSavedDeparmentAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the saved department with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.AddMemberSavedProfessorAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Adds a saved the professor with the specified <paramref name="professorId"/> to the member with the specified <paramref name="memberId"/>
            </summary>
            <param name="memberId">The memberId</param>
            <param name="professorId">The professor </param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.GetMemberSavedProfessorsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the saved professors of the user with the specified <paramref name="id"/>
            </summary>
            <param name="id">The user memberId</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.GetMemberSavedProfessorAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the saved professor with the specified <paramref name="id"/>
            </summary>
            <param name="id">The memberId</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduController.DeleteSavedProfessorAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the saved professor with the specified <paramref name="id"/>
            </summary>
            <param name="id">The memberId</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.DepartmentLayoutRoomDataModel">
            <summary>
            Represents a company room document in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentLayoutRoomDataModel.mName">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentLayoutRoomDataModel.Name"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentLayoutRoomDataModel.mColor">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentLayoutRoomDataModel.Color"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentLayoutRoomDataModel.mNote">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentLayoutRoomDataModel.Note"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutRoomDataModel.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutRoomDataModel.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutRoomDataModel.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutRoomDataModel.ImageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutRoomDataModel.DisplayTheme">
            <summary>
            The display theme
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentLayoutRoomDataModel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.ConcurrentCollection`1">
            <summary>
            A collection that provides type safety 
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:MeetEdu.ConcurrentCollection`1.mLock">
            <summary>
            A lock used for providing safe access to the <see cref="F:MeetEdu.ConcurrentCollection`1.mList"/>
            </summary>
        </member>
        <member name="F:MeetEdu.ConcurrentCollection`1.mList">
            <summary>
            The list
            </summary>
        </member>
        <member name="P:MeetEdu.ConcurrentCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns></returns>
        </member>
        <member name="P:MeetEdu.ConcurrentCollection`1.Count">
            <summary>
            Gets the number of elements contained in the collection
            </summary>
        </member>
        <member name="P:MeetEdu.ConcurrentCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only
            </summary>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.Add(`0)">
            <summary>
            Adds an item to the collection
            </summary>
            <param name="item">The item</param>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds multiple item to the collection
            </summary>
            <param name="items">The items</param>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.Clear">
            <summary>
            Clears the collection
            </summary>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.Contains(`0)">
            <summary>
            Determines whether the collection contains the specific item
            </summary>
            <param name="item">The item</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the collection to an array
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied
            from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based
            indexing.
            </param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            NOTE: The enumerator from a shallow copy of the list is returned!
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item
            </summary>
            <param name="item">The item</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert</param>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Inserts the elements of a collection into the collection
            at the specified index.
            </summary>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <param name="collection">The collection whose elements should be inserted into the collection</param>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of elements from the collection
            </summary>
            <param name="index">The zero-based starting index of the range of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            NOTE: The enumerator from a shallow copy of the list is returned!
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.Reverse">
            <summary>
            Reverses the order of the elements in the entire collection
            </summary>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.Sort">
            <summary>
            Sorts the elements in the entire list using the default comparer
            </summary>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in the entire collection using the specified
            comparer
            </summary>
            <param name="comparer">
            The <see cref="T:System.Collections.Generic.IComparer`1"/> implementation to use when comparing
            elements, or null to use the default comparer
            </param>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.ToArray">
            <summary>
            Copies the elements of the collection to a new array
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.Exists(System.Predicate{`0})">
            <summary>
            Determines whether the collection contains elements that
            match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The delegate that defines the conditions of the elements to search for.</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.RemoveAll(System.Func{`0,System.Boolean})">
            <summary>
            Removes all the elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The delegate that defines the conditions of the elements to remove.</param>
            <returns>The number of elements removed from the collection</returns>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.Find(System.Func{`0,System.Boolean})">
            <summary>
            Searches for an element that matches the conditions defined by the specified
            predicate, and returns the first occurrence within the entire collection
            </summary>
            <param name="match">The delegate that defines the conditions of the element to search for</param>
            <returns>
            The first element that matches the conditions defined by the specified predicate,
            if found; otherwise, the default value for type <typeparamref name="T"/>.
            </returns>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.FindLast(System.Func{`0,System.Boolean})">
            <summary>
            Searches for an element that matches the conditions defined by the specified
            predicate, and returns the last occurrence within the entire collection
            </summary>
            <param name="match">The delegate that defines the conditions of the element to search for</param>
            <returns>
            The last element that matches the conditions defined by the specified predicate,
            if found; otherwise, the default value for type <typeparamref name="T"/>.
            </returns>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.FindAll(System.Func{`0,System.Boolean})">
            <summary>
            Retrieves all the elements that match the conditions defined by the specified
            predicate.
            </summary>
            <param name="match">The delegate that defines the conditions of the elements to search for.</param>
            <returns>
            A <see cref="T:System.Collections.Generic.List`1"/> containing all the elements that match the
            conditions defined by the specified predicate, if found; otherwise, an empty
            <see cref="T:System.Collections.Generic.List`1"/>
            </returns>
        </member>
        <member name="M:MeetEdu.ConcurrentCollection`1.ConvertAll``1(System.Func{`0,``0})">
            <summary>
            Converts the elements in the current collection to another type,
            and returns a list containing the converted elements
            </summary>
            <typeparam name="TOutput">The type of the elements of the target array.</typeparam>
            <param name="converter">A delegate that converts each element from one type to another type.</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.Failable">
            <summary>
            The default implementation of the <see cref="T:MeetEdu.IFailable"/> interface
            </summary>
        </member>
        <member name="F:MeetEdu.Failable.mException">
            <summary>
            The member of the <see cref="P:MeetEdu.Failable.Exception"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.Failable.Exception">
            <summary>
            The exception that was thrown
            </summary>
        </member>
        <member name="P:MeetEdu.Failable.ErrorType">
            <summary>
            The error type
            </summary>
        </member>
        <member name="P:MeetEdu.Failable.ErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="P:MeetEdu.Failable.IsSuccessful">
            <summary>
            A flag indicating whether the task was successful or not
            </summary>
        </member>
        <member name="P:MeetEdu.Failable.Success">
            <summary>
            The instance of the <see cref="T:MeetEdu.Failable"/> that indicates a successful operation
            </summary>
        </member>
        <member name="P:MeetEdu.Failable.OperationAbortedErrorMessage">
            <summary>
            Error message indicating that the operation was aborted
            </summary>
        </member>
        <member name="P:MeetEdu.Failable.OperationAborted">
            <summary>
            The instance of the <see cref="T:MeetEdu.Failable"/> that is used for indicating an operation
            that was aborted with a hidden error
            </summary>
        </member>
        <member name="M:MeetEdu.Failable.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.Failable.#ctor(System.Exception)">
            <summary>
            Exception based constructor
            </summary>
            <param name="ex">The exception</param>
        </member>
        <member name="M:MeetEdu.Failable.FromException(System.Exception)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.Failable"/> from the specified <paramref name="ex"/>
            </summary>
            <param name="ex">The exception</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.Failable.FromErrorMessage(System.String)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.Failable"/> from the specified <paramref name="errorMessage"/>
            </summary>
            <param name="errorMessage">The error message</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.Failable.FromResult``1(``0)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.Failable`1"/> that represents the specified <paramref name="result"/>
            </summary>
            <typeparam name="T">The type of the result</typeparam>
            <param name="result">The result</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.Failable.FromException``1(System.Exception)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.Failable`1"/> that represents the specified <paramref name="ex"/>
            </summary>
            <typeparam name="T">The type of the result</typeparam>
            <param name="ex">The exception</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.Failable.FromErrorMessage``1(System.String)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.Failable`1"/> that represents the specified <paramref name="errorMessage"/>
            </summary>
            <typeparam name="T">The type of the result</typeparam>
            <param name="errorMessage">The error message</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.Failable.FromAbortedOperation``1">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.Failable`1"/> that represents an aborted operation
            </summary>
            <typeparam name="T">The type of the result</typeparam>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.Failable.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.Failable.op_Implicit(System.String)~MeetEdu.Failable">
            <summary>
            Creates a <see cref="T:MeetEdu.Failable"/> using the specified string as its error message
            </summary>
            <param name="s">The string</param>
        </member>
        <member name="M:MeetEdu.Failable.op_Implicit(System.Exception)~MeetEdu.Failable">
            <summary>
            Creates a <see cref="T:MeetEdu.Failable"/> using the message of the specified ex and its inner exceptions
            as its error message
            </summary>
            <param name="ex">The exception</param>
        </member>
        <member name="T:MeetEdu.SuccessOnlyFailable">
            <summary>
            An internal implementation of the <see cref="T:MeetEdu.Failable"/> that always has
            a successful state
            </summary>
        </member>
        <member name="P:MeetEdu.SuccessOnlyFailable.ErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="M:MeetEdu.SuccessOnlyFailable.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.OperationAbortedOnlyFailable">
            <summary>
            An internal implementation of the <see cref="T:MeetEdu.Failable"/> that is used for 
            indicating an aborted operation
            </summary>
        </member>
        <member name="P:MeetEdu.OperationAbortedOnlyFailable.ErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="P:MeetEdu.OperationAbortedOnlyFailable.ErrorType">
            <summary>
            The error type
            </summary>
        </member>
        <member name="M:MeetEdu.OperationAbortedOnlyFailable.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.Failable`1">
            <summary>
            The default implementation of the <see cref="T:MeetEdu.IFailable`1"/> interface
            </summary>
            <typeparam name="TResult">The type of the result</typeparam>
        </member>
        <member name="F:MeetEdu.Failable`1.ExceptionMessage">
            <summary>
            The error message for the exception
            </summary>
        </member>
        <member name="F:MeetEdu.Failable`1.mResult">
            <summary>
            The member of the <see cref="P:MeetEdu.Failable`1.Result"/>
            </summary>
        </member>
        <member name="P:MeetEdu.Failable`1.Result">
            <summary>
            The result
            </summary>
        </member>
        <member name="P:MeetEdu.Failable`1.OperationAborted">
            <summary>
            The instance of the <see cref="T:MeetEdu.Failable`1"/> that is used for indicating an operation
            that was aborted with a hidden error
            </summary>
        </member>
        <member name="M:MeetEdu.Failable`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.Failable`1.#ctor(`0)">
            <summary>
            Result based constructor
            </summary>
            <param name="result">The result</param>
        </member>
        <member name="M:MeetEdu.Failable`1.#ctor(System.Exception)">
            <summary>
            Exception based constructor
            </summary>
            <param name="ex">The exception</param>
        </member>
        <member name="M:MeetEdu.Failable`1.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.Failable`1.op_Implicit(System.String)~MeetEdu.Failable{`0}">
            <summary>
            Creates a <see cref="T:MeetEdu.Failable`1"/> using the specified string as its error message
            </summary>
            <param name="s">The string</param>
        </member>
        <member name="M:MeetEdu.Failable`1.op_Implicit(System.Exception)~MeetEdu.Failable{`0}">
            <summary>
            Creates a <see cref="T:MeetEdu.Failable`1"/> using the message of the specified ex and its inner exceptions
            as its error message
            </summary>
            <param name="ex">The exception</param>
        </member>
        <member name="M:MeetEdu.Failable`1.op_Implicit(`0)~MeetEdu.Failable{`0}">
            <summary>
            Creates a <see cref="T:MeetEdu.Failable`1"/> using the specified result as its result
            </summary>
            <param name="result">The result</param>
        </member>
        <member name="T:MeetEdu.OperationAbortedOnlyFailable`1">
            <summary>
            An internal implementation of the <see cref="T:MeetEdu.Failable`1"/> that is used for 
            indicating an aborted operation
            </summary>
        </member>
        <member name="P:MeetEdu.OperationAbortedOnlyFailable`1.ErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="P:MeetEdu.OperationAbortedOnlyFailable`1.ErrorType">
            <summary>
            The error type
            </summary>
        </member>
        <member name="M:MeetEdu.OperationAbortedOnlyFailable`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.Billing">
            <summary>
            Represents a billing
            </summary>
        </member>
        <member name="F:MeetEdu.Billing.mEmail">
            <summary>
            The member of the <see cref="P:MeetEdu.Billing.Email"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.Billing.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:MeetEdu.Billing.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="M:MeetEdu.Billing.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.Location">
            <summary>
            Represents a location
            </summary>
        </member>
        <member name="F:MeetEdu.Location.mState">
            <summary>
            The member of the <see cref="P:MeetEdu.Location.State"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.Location.mCity">
            <summary>
            The member of the <see cref="P:MeetEdu.Location.City"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.Location.mPostcode">
            <summary>
            The member of the <see cref="P:MeetEdu.Location.Postcode"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.Location.mAddress">
            <summary>
            The member of the <see cref="P:MeetEdu.Location.Address"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.Location.mAddress2">
            <summary>
            The member of the <see cref="P:MeetEdu.Location.Address2"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.Location.Country">
            <summary>
            The country
            </summary>
        </member>
        <member name="P:MeetEdu.Location.State">
            <summary>
            The address street
            </summary>
        </member>
        <member name="P:MeetEdu.Location.City">
            <summary>
            The city
            </summary>
        </member>
        <member name="P:MeetEdu.Location.Postcode">
            <summary>
            The postal code
            </summary>
        </member>
        <member name="P:MeetEdu.Location.Address">
            <summary>
            The first address
            </summary>
        </member>
        <member name="P:MeetEdu.Location.Address2">
            <summary>
            The second address
            </summary>
        </member>
        <member name="P:MeetEdu.Location.Longitude">
            <summary>
            The longitude for the first address
            </summary>
        </member>
        <member name="P:MeetEdu.Location.Latitude">
            <summary>
            The latitude for the first address
            </summary>
        </member>
        <member name="M:MeetEdu.Location.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.Location.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.Shipping">
            <summary>
            Represents a shipping
            </summary>
        </member>
        <member name="F:MeetEdu.Shipping.mFirstName">
            <summary>
            The member of the <see cref="P:MeetEdu.Shipping.FirstName"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.Shipping.mLastName">
            <summary>
            The member of the <see cref="P:MeetEdu.Shipping.LastName"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.Shipping.FirstName">
            <summary>
            The first name
            </summary>
        </member>
        <member name="P:MeetEdu.Shipping.LastName">
            <summary>
            The last name
            </summary>
        </member>
        <member name="M:MeetEdu.Shipping.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.Shipping.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.OrderRule">
            <summary>
            Provides information related to an order rule
            </summary>
        </member>
        <member name="P:MeetEdu.OrderRule.OrderCondition">
            <summary>
            The order condition
            </summary>
        </member>
        <member name="P:MeetEdu.OrderRule.OrderBy">
            <summary>
            The order by target
            </summary>
        </member>
        <member name="M:MeetEdu.OrderRule.#ctor(MeetEdu.OrderCondition,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="orderCondition">The order condition</param>
            <param name="orderBy">The order by target</param>
        </member>
        <member name="M:MeetEdu.OrderRule.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.OrderRule.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <param name="format">
            The format to use. -or- A null reference (Nothing in Visual Basic) to use the
            default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.
            </param>
            <param name="formatProvider">
            The provider to use to format the value. -or- A null reference (Nothing in Visual
            Basic) to obtain the numeric format information from the current locale setting
            of the operating system.
            </param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.OrderRule.Parse(System.String,System.IFormatProvider)">
            <summary>
            Parses a string into a value.
            </summary>
            <param name="s">The string to parse.</param>
            <param name="provider">An object that provides culture-specific formatting information about s.</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.OrderRule.TryParse(System.String,System.IFormatProvider,MeetEdu.OrderRule@)">
            <summary>
            Tries to parse a string into a value.
            </summary>
            <param name="s">The string to parse.</param>
            <param name="provider">An object that provides culture-specific formatting information about <paramref name="s"/>.</param>
            <param name="result">
            When this method returns, contains the result of successfully parsing <paramref name="s"/> or an
            undefined value on failure.
            </param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.PhoneNumber">
            <summary>
            Represents a phone number
            </summary>
        </member>
        <member name="P:MeetEdu.PhoneNumber.CountryCode">
            <summary>
            The country code
            </summary>
        </member>
        <member name="P:MeetEdu.PhoneNumber.Phone">
            <summary>
            The phone
            </summary>
        </member>
        <member name="M:MeetEdu.PhoneNumber.#ctor(System.Int32,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="countryCode">The country code</param>
            <param name="phone">The phone number</param>
        </member>
        <member name="M:MeetEdu.PhoneNumber.Equals(System.Object)">
            <summary>
            Determines whether the specified <paramref name="obj"/> is equal to the current object
            </summary>
            <param name="obj">The object to check</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.PhoneNumber.Equals(MeetEdu.PhoneNumber)">
            <summary>
            Indicates whether the current object is equal to another object of the same type
            </summary>
            <param name="other">The other object</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.PhoneNumber.ToPhoneNumberString">
            <summary>
            Returns a string that contains both the country code and phone number.
            Ex.: 30 6969696969, 1 6969696969
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.PhoneNumber.ToE164PhoneNumberString">
            <summary>
            Returns a string that represents the E.164 phone number.
            Ex.: +30 6969696969, +16 969696969
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.PhoneNumber.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.PhoneNumber.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.PhoneNumber.op_Equality(MeetEdu.PhoneNumber,MeetEdu.PhoneNumber)">
            <summary>
            Determines whether two specified <see cref="T:MeetEdu.PhoneNumber"/>s have the same value
            </summary>
            <param name="obj1">The first phone number</param>
            <param name="obj2">The second phone number</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.PhoneNumber.op_Inequality(MeetEdu.PhoneNumber,MeetEdu.PhoneNumber)">
            <summary>
            Determines whether tow specified <see cref="T:MeetEdu.PhoneNumber"/>s have different values
            </summary>
            <param name="obj1">The first phone number</param>
            <param name="obj2">The second phone number</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.PhoneNumber.op_Implicit(MeetEdu.PhoneNumber)~System.String">
            <summary>
            Returns the string representation of the specified <paramref name="phoneNumber"/>
            </summary>
            <param name="phoneNumber">The phone number</param>
        </member>
        <member name="T:MeetEdu.ServiceCompaniesResult">
            <summary>
            A service with the related companies
            </summary>
        </member>
        <member name="F:MeetEdu.ServiceCompaniesResult.mName">
            <summary>
            The member of the <see cref="P:MeetEdu.ServiceCompaniesResult.Name"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.ServiceCompaniesResult.mServices">
            <summary>
            The member of the <see cref="P:MeetEdu.ServiceCompaniesResult.Services"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.ServiceCompaniesResult.Name">
            <summary>
            The Name
            </summary>
        </member>
        <member name="P:MeetEdu.ServiceCompaniesResult.Services">
            <summary>
            The services
            </summary>
        </member>
        <member name="M:MeetEdu.ServiceCompaniesResult.#ctor(System.String,System.Collections.Generic.IEnumerable{MeetEdu.AppointmentRuleEntity})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.ServiceCompaniesResult.ToString">
            <summary>
            A string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.VectorSource">
            <summary>
            Represents the source of a vector drawable
            </summary>
        </member>
        <member name="F:MeetEdu.VectorSource.mPathData">
            <summary>
            The member of the <see cref="P:MeetEdu.VectorSource.PathData"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.VectorSource.PathData">
            <summary>
            The path data of the icon
            </summary>
        </member>
        <member name="P:MeetEdu.VectorSource.UriSource">
            <summary>
            The Uri source
            </summary>
        </member>
        <member name="M:MeetEdu.VectorSource.#ctor">
            <summary>
            Internal constructor
            </summary>
        </member>
        <member name="M:MeetEdu.VectorSource.FromPathData(System.String)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.VectorSource"/> from the specified <paramref name="pathData"/>
            </summary>
            <param name="pathData">The path data</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.VectorSource.FromUriSource(System.Uri)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.VectorSource"/> from the specified <paramref name="uriSource"/>
            </summary>
            <param name="uriSource">The Uri source</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.VectorSource.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.VectorSource.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.VectorSource.Equals(MeetEdu.VectorSource)">
            <summary>
            Indicates whether the current object is equal to another object of the same type
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.VectorSource.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.VectorSource.op_Implicit(System.String)~MeetEdu.VectorSource">
            <summary>
            Create a vector source from the specified <paramref name="pathData"/>
            </summary>
            <param name="pathData">The path data</param>
        </member>
        <member name="M:MeetEdu.VectorSource.op_Implicit(System.Uri)~MeetEdu.VectorSource">
            <summary>
            Create a vector source from the specified <paramref name="uriSource"/>
            </summary>
            <param name="uriSource">The URI source</param>
        </member>
        <member name="T:MeetEdu.WeeklySchedule">
            <summary>
            The weekly schedule
            </summary>
        </member>
        <member name="F:MeetEdu.WeeklySchedule.mWorkHours">
            <summary>
            The member of the <see cref="P:MeetEdu.WeeklySchedule.WorkHours"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.WeeklySchedule.mNote">
            <summary>
            The member of the <see cref="P:MeetEdu.WeeklySchedule.Note"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.WeeklySchedule.WorkHours">
            <summary>
            The work hours
            </summary>
        </member>
        <member name="P:MeetEdu.WeeklySchedule.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="M:MeetEdu.WeeklySchedule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.Condition">
            <summary>
            Provides enumeration over the conditions
            </summary>
        </member>
        <member name="F:MeetEdu.Condition.AND">
            <summary>
            All the conditions must be satisfied
            </summary>
        </member>
        <member name="F:MeetEdu.Condition.OR">
            <summary>
            At least one condition must be satisfied
            </summary>
        </member>
        <member name="T:MeetEdu.CountryCode">
            <summary>
            The Alpha-2 country codes
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AD">
            <summary>
            Andorra
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AE">
            <summary>
            United Arab Emirates
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AF">
            <summary>
            Afghanistan
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AG">
            <summary>
            Antigua And Barbuda
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AI">
            <summary>
            Anguilla
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AL">
            <summary>
            Albania
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AM">
            <summary>
            Armenia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AN">
            <summary>
            Netherlands Antilles
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AO">
            <summary>
            Angola
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AQ">
            <summary>
            Antarctica
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AR">
            <summary>
            Argentina
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AS">
            <summary>
            American Samoa
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AT">
            <summary>
            Austria
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AU">
            <summary>
            Australia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AW">
            <summary>
            Aruba
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AX">
            <summary>
            Aland Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.AZ">
            <summary>
            Azerbaijan
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BA">
            <summary>
            Bosnia And Herzegovina
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BB">
            <summary>
            Barbados
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BD">
            <summary>
            Bangladesh
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BE">
            <summary>
            Belgium
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BF">
            <summary>
            Burkina Faso
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BG">
            <summary>
            Bulgaria
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BH">
            <summary>
            Bahrain
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BI">
            <summary>
            Burundi
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BJ">
            <summary>
            Benin
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BL">
            <summary>
            Saint Barthelemy
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BM">
            <summary>
            Bermuda
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BN">
            <summary>
            Brunei
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BO">
            <summary>
            Bolivia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BR">
            <summary>
            Brazil
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BS">
            <summary>
            Bahamas
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BT">
            <summary>
            Bhutan
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BV">
            <summary>
            Bouvet Island
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BW">
            <summary>
            Botswana
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BY">
            <summary>
            Belarus
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.BZ">
            <summary>
            Belize
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CA">
            <summary>
            Canada
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CC">
            <summary>
            Cocos Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CD">
            <summary>
            Democratic Republicofthe Congo
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CF">
            <summary>
            Central African Republic
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CG">
            <summary>
            Republicofthe Congo
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CH">
            <summary>
            Switzerland
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CI">
            <summary>
            Ivory Coast
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CK">
            <summary>
            Cook Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CL">
            <summary>
            Chile
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CM">
            <summary>
            Cameroon
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CN">
            <summary>
            China
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CO">
            <summary>
            Colombia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CR">
            <summary>
            Costa Rica
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CU">
            <summary>
            Cuba
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CV">
            <summary>
            Cape Verde
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CX">
            <summary>
            Christmas Island
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CY">
            <summary>
            Cyprus
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.CZ">
            <summary>
            Czech Republic
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.DE">
            <summary>
            Germany
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.DJ">
            <summary>
            Djibouti
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.DK">
            <summary>
            Denmark
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.DM">
            <summary>
            Dominica
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.DO">
            <summary>
            Dominican Republic
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.DZ">
            <summary>
            Algeria
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.EC">
            <summary>
            Ecuador
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.EE">
            <summary>
            Estonia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.EG">
            <summary>
            Egypt
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.EH">
            <summary>
            Western Sahara
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.ER">
            <summary>
            Eritrea
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.ES">
            <summary>
            Spain
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.ET">
            <summary>
            Ethiopia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.FI">
            <summary>
            Finland
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.FJ">
            <summary>
            Fiji
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.FK">
            <summary>
            Falkland Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.FM">
            <summary>
            Micronesia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.FO">
            <summary>
            Faroe Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.FR">
            <summary>
            France
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GA">
            <summary>
            Gabon
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GB">
            <summary>
            United Kingdom
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GD">
            <summary>
            Grenada
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GE">
            <summary>
            Georgia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GF">
            <summary>
            French Guiana
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GG">
            <summary>
            Guernsey
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GH">
            <summary>
            Ghana
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GI">
            <summary>
            Gibraltar
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GL">
            <summary>
            Greenland
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GM">
            <summary>
            Gambia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GN">
            <summary>
            Guinea
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GP">
            <summary>
            Guadeloupe
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GQ">
            <summary>
            Equatorial Guinea
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GR">
            <summary>
            Greece
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GS">
            <summary>
            South GeorgiaΑndthe South Sandwich Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GT">
            <summary>
            Guatemala
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GU">
            <summary>
            Guam
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GW">
            <summary>
            Guinea Bissau
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.GY">
            <summary>
            Guyana
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.HK">
            <summary>
            Hong Kong
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.HM">
            <summary>
            Heard IslandΑnd Mc Donald Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.HN">
            <summary>
            Honduras
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.HR">
            <summary>
            Croatia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.HT">
            <summary>
            Haiti
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.HU">
            <summary>
            Hungary
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.ID">
            <summary>
            Indonesia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.IE">
            <summary>
            Ireland
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.IL">
            <summary>
            Israel
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.IM">
            <summary>
            Isleof Man
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.IN">
            <summary>
            India
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.IO">
            <summary>
            British Indian Ocean Territory
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.IQ">
            <summary>
            Iraq
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.IR">
            <summary>
            Iran
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.IS">
            <summary>
            Iceland
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.IT">
            <summary>
            Italy
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.JE">
            <summary>
            Jersey
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.JM">
            <summary>
            Jamaica
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.JO">
            <summary>
            Jordan
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.JP">
            <summary>
            Japan
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.KE">
            <summary>
            Kenya
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.KG">
            <summary>
            Kyrgyzstan
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.KH">
            <summary>
            Cambodia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.KI">
            <summary>
            Kiribati
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.KM">
            <summary>
            Comoros
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.KN">
            <summary>
            Saint KittsΑnd Nevis
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.KP">
            <summary>
            North Korea
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.KR">
            <summary>
            South Korea
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.KW">
            <summary>
            Kuwait
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.KY">
            <summary>
            Cayman Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.KZ">
            <summary>
            Kazakhstan
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.LA">
            <summary>
            Laos
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.LB">
            <summary>
            Lebanon
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.LC">
            <summary>
            Saint Lucia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.LI">
            <summary>
            Liechtenstein
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.LK">
            <summary>
            Sri Lanka
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.LR">
            <summary>
            Liberia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.LS">
            <summary>
            Lesotho
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.LT">
            <summary>
            Lithuania
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.LU">
            <summary>
            Luxembourg
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.LV">
            <summary>
            Latvia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.LY">
            <summary>
            Libya
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MA">
            <summary>
            Morocco
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MC">
            <summary>
            Monaco
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MD">
            <summary>
            Moldova
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.ME">
            <summary>
            Montenegro
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MF">
            <summary>
            Saint Martin
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MG">
            <summary>
            Madagascar
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MH">
            <summary>
            Marshall Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MK">
            <summary>
            Macedonia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.ML">
            <summary>
            Mali
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MM">
            <summary>
            Myanmar
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MN">
            <summary>
            Mongolia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MO">
            <summary>
            Macau
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MP">
            <summary>
            Northern Mariana Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MQ">
            <summary>
            Martinique
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MR">
            <summary>
            Mauritania
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MS">
            <summary>
            Montserrat
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MT">
            <summary>
            Malta
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MU">
            <summary>
            Mauritius
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MV">
            <summary>
            Maldives
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MW">
            <summary>
            Malawi
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MX">
            <summary>
            Mexico
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MY">
            <summary>
            Malaysia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.MZ">
            <summary>
            Mozambique
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.NA">
            <summary>
            Namibia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.NC">
            <summary>
            New Caledonia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.NE">
            <summary>
            Niger
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.NF">
            <summary>
            Norfolk Island
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.NG">
            <summary>
            Nigeria
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.NI">
            <summary>
            Nicaragua
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.NL">
            <summary>
            Netherlands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.NO">
            <summary>
            Norway
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.NP">
            <summary>
            Nepal
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.NR">
            <summary>
            Nauru
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.NU">
            <summary>
            Niue
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.NZ">
            <summary>
            New Zealand
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.OM">
            <summary>
            Oman
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PA">
            <summary>
            Panama
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PE">
            <summary>
            Peru
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PF">
            <summary>
            French Polynesia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PG">
            <summary>
            Papua New Guinea
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PH">
            <summary>
            Philippines
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PK">
            <summary>
            Pakistan
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PL">
            <summary>
            Poland
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PM">
            <summary>
            Saint Pierre And Miquelon
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PN">
            <summary>
            Pitcairn
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PR">
            <summary>
            Puerto Rico
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PS">
            <summary>
            Palestine
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PT">
            <summary>
            Portugal
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PW">
            <summary>
            Palau
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.PY">
            <summary>
            Paraguay
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.QA">
            <summary>
            Qatar
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.RE">
            <summary>
            Reunion
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.RO">
            <summary>
            Romania
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.RS">
            <summary>
            Serbia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.RU">
            <summary>
            Russia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.RW">
            <summary>
            Rwanda
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SA">
            <summary>
            Saudi Arabia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SB">
            <summary>
            Solomon Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SC">
            <summary>
            Seychelles
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SD">
            <summary>
            Sudan
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SE">
            <summary>
            Sweden
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SG">
            <summary>
            Singapore
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SH">
            <summary>
            Saint Helena
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SI">
            <summary>
            Slovenia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SJ">
            <summary>
            Svalbard And Jan Mayen
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SK">
            <summary>
            Slovakia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SL">
            <summary>
            Sierra Leone
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SM">
            <summary>
            San Marino
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SN">
            <summary>
            Senegal
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SO">
            <summary>
            Somalia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SR">
            <summary>
            Suriname
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.ST">
            <summary>
            Sao Tome And Principe
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SV">
            <summary>
            El Salvador
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SY">
            <summary>
            Syria
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.SZ">
            <summary>
            Swaziland
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TC">
            <summary>
            Turks And Caicos Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TD">
            <summary>
            Chad
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TF">
            <summary>
            French Southern Territories
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TG">
            <summary>
            Togo
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TH">
            <summary>
            Thailand
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TJ">
            <summary>
            Tajikistan
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TK">
            <summary>
            Tokelau
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TL">
            <summary>
            East Timor
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TM">
            <summary>
            Turkmenistan
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TN">
            <summary>
            Tunisia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TO">
            <summary>
            Tonga
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TR">
            <summary>
            Turkey
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TT">
            <summary>
            Trinidad And Tobago
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TV">
            <summary>
            Tuvalu
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TW">
            <summary>
            Taiwan
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.TZ">
            <summary>
            Tanzania
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.UA">
            <summary>
            Ukraine
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.UG">
            <summary>
            Uganda
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.UM">
            <summary>
            United States Minor Outlying Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.US">
            <summary>
            United States
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.UY">
            <summary>
            Uruguay
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.UZ">
            <summary>
            Uzbekistan
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.VA">
            <summary>
            Vatican
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.VC">
            <summary>
            Saint Vincent and the Grenadines
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.VE">
            <summary>
            Venezuela
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.VG">
            <summary>
            British Virgin Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.VI">
            <summary>
            US Virgin Islands
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.VN">
            <summary>
            Vietnam
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.VU">
            <summary>
            Vanuatu
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.WF">
            <summary>
            WallisΑnd Futuna
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.WS">
            <summary>
            Samoa
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.YE">
            <summary>
            Yemen
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.YT">
            <summary>
            Mayotte
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.ZA">
            <summary>
            South Africa
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.ZM">
            <summary>
            Zambia
            </summary>
        </member>
        <member name="F:MeetEdu.CountryCode.ZW">
            <summary>
            Zimbabwe
            </summary>
        </member>
        <member name="T:MeetEdu.CustomerNoteType">
            <summary>
            Provides enumeration over the customer note types
            </summary>
        </member>
        <member name="F:MeetEdu.CustomerNoteType.Information">
            <summary>
            Informative note
            </summary>
        </member>
        <member name="F:MeetEdu.CustomerNoteType.Warning">
            <summary>
            Warning note
            </summary>
        </member>
        <member name="F:MeetEdu.CustomerNoteType.Issue">
            <summary>
            Issue note
            </summary>
        </member>
        <member name="T:MeetEdu.DepartmentType">
            <summary>
            Provides enumeration over the company types
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentType.Medicine">
            <summary>
            Medicine
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentType.Polytechnic">
            <summary>
            Polytechnic
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentType.Science">
            <summary>
            Science
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentType.Economics">
            <summary>
            Economics
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentType.Agriculture">
            <summary>
            Agriculture
            </summary>
        </member>
        <member name="T:MeetEdu.ErrorType">
            <summary>
            Provides enumeration over the error types
            </summary>
        </member>
        <member name="F:MeetEdu.ErrorType.Error">
            <summary>
            A standard error
            </summary>
        </member>
        <member name="F:MeetEdu.ErrorType.Warning">
            <summary>
            A warning
            </summary>
        </member>
        <member name="F:MeetEdu.ErrorType.Information">
            <summary>
            An informative message
            </summary>
        </member>
        <member name="F:MeetEdu.ErrorType.Hidden">
            <summary>
            An error that should get hidden
            </summary>
        </member>
        <member name="T:MeetEdu.OrderCondition">
            <summary>
            Provides enumeration for the order conditions
            </summary>
        </member>
        <member name="F:MeetEdu.OrderCondition.Ascending">
            <summary>
            Ascending sort order
            </summary>
        </member>
        <member name="F:MeetEdu.OrderCondition.Descending">
            <summary>
            Descending sort order
            </summary>
        </member>
        <member name="T:MeetEdu.RoomDisplayTheme">
            <summary>
            Provides enumeration over the room display theme
            </summary>
        </member>
        <member name="F:MeetEdu.RoomDisplayTheme.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:MeetEdu.RoomDisplayTheme.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:MeetEdu.RoomDisplayTheme.Center">
            <summary>
            Center
            </summary>
        </member>
        <member name="T:MeetEdu.SecretaryRole">
            <summary>
            Provides enumeration over the secretary roles
            </summary>
        </member>
        <member name="F:MeetEdu.SecretaryRole.Secretary">
            <summary>
            Secretary
            </summary>
        </member>
        <member name="F:MeetEdu.SecretaryRole.PostGraduateSecretary">
            <summary>
            Post graduate secretary
            </summary>
        </member>
        <member name="F:MeetEdu.SecretaryRole.UnderGraduateSecretary">
            <summary>
            Under graduate secretary
            </summary>
        </member>
        <member name="T:MeetEdu.SessionStatus">
            <summary>
            Provides enumerations over the <see cref="T:MeetEdu.SessionStatus"/>
            </summary>
        </member>
        <member name="F:MeetEdu.SessionStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:MeetEdu.SessionStatus.Completed">
            <summary>
            Completed
            </summary>
        </member>
        <member name="F:MeetEdu.SessionStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="T:MeetEdu.TransactionType">
            <summary>
            Provides enumerations over the <see cref="T:MeetEdu.TransactionType"/>
            </summary>
        </member>
        <member name="F:MeetEdu.TransactionType.Cash">
            <summary>
            Cash
            </summary>
        </member>
        <member name="F:MeetEdu.TransactionType.Card">
            <summary>
            Card
            </summary>
        </member>
        <member name="F:MeetEdu.TransactionType.PayPal">
            <summary>
            PayPal
            </summary>
        </member>
        <member name="T:MeetEdu.DayOfWeekTimeRange">
            <summary>
            Represents a time range of a specific week day
            </summary>
        </member>
        <member name="P:MeetEdu.DayOfWeekTimeRange.DayOfWeek">
            <summary>
            The day of week
            </summary>
        </member>
        <member name="P:MeetEdu.DayOfWeekTimeRange.Start">
            <summary>
            The start
            </summary>
        </member>
        <member name="P:MeetEdu.DayOfWeekTimeRange.End">
            <summary>
            The end
            </summary>
        </member>
        <member name="P:MeetEdu.DayOfWeekTimeRange.MeetEdu#IReadOnlyRangeable{System#TimeOnly}#Minimum">
            <summary>
            The minimum value
            </summary>
        </member>
        <member name="P:MeetEdu.DayOfWeekTimeRange.MeetEdu#IReadOnlyRangeable{System#TimeOnly}#Maximum">
            <summary>
            The maximum value
            </summary>
        </member>
        <member name="M:MeetEdu.DayOfWeekTimeRange.#ctor(System.DayOfWeek,System.TimeOnly,System.TimeOnly)">
            <summary>
            Default constructor
            </summary>
            <param name="dayOfWeek">The day of week</param>
            <param name="start">The first value</param>
            <param name="end">The second value</param>
        </member>
        <member name="M:MeetEdu.DayOfWeekTimeRange.Convert(System.Collections.Generic.IEnumerable{MeetEdu.DayOfWeekTimeRange})">
            <summary>
            Converts the specified <paramref name="values"/> to a <see cref="T:System.Collections.Generic.Dictionary`2"/>
            that maps the <see cref="T:System.DayOfWeek"/> values with the related <see cref="T:MeetEdu.TimeRange"/>s
            </summary>
            <param name="values">The values</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DayOfWeekTimeRange.Convert(System.Collections.Generic.IReadOnlyDictionary{System.DayOfWeek,System.Collections.Generic.IEnumerable{MeetEdu.TimeRange}})">
            <summary>
            Converts a dictionary that maps the <see cref="T:System.DayOfWeek"/> values with the related <see cref="T:MeetEdu.TimeRange"/>s
            to a collection of <see cref="T:MeetEdu.DayOfWeekTimeRange"/>s
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.DaysBetweenSessionsRange">
            <summary>
            Represents a number of days between sessions range
            </summary>
        </member>
        <member name="P:MeetEdu.DaysBetweenSessionsRange.Minimum">
            <summary>
            The minimum value
            </summary>
        </member>
        <member name="P:MeetEdu.DaysBetweenSessionsRange.Maximum">
            <summary>
            The maximum value
            </summary>
        </member>
        <member name="M:MeetEdu.DaysBetweenSessionsRange.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Default constructor
            </summary>
            <param name="value1">The first value</param>
            <param name="value2">The second value</param>
        </member>
        <member name="T:MeetEdu.DurationRange">
            <summary>
            Represents a duration range
            </summary>
        </member>
        <member name="P:MeetEdu.DurationRange.Minimum">
            <summary>
            The minimum value
            </summary>
        </member>
        <member name="P:MeetEdu.DurationRange.Maximum">
            <summary>
            The maximum value
            </summary>
        </member>
        <member name="M:MeetEdu.DurationRange.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>
            Default constructor
            </summary>
            <param name="value1">The first value</param>
            <param name="value2">The second value</param>
        </member>
        <member name="T:MeetEdu.PriceRange">
            <summary>
            Represents a price range
            </summary>
        </member>
        <member name="P:MeetEdu.PriceRange.Minimum">
            <summary>
            The minimum value
            </summary>
        </member>
        <member name="P:MeetEdu.PriceRange.Maximum">
            <summary>
            The maximum value
            </summary>
        </member>
        <member name="M:MeetEdu.PriceRange.#ctor(System.Double,System.Double)">
            <summary>
            Default constructor
            </summary>
            <param name="value1">The first value</param>
            <param name="value2">The second value</param>
        </member>
        <member name="T:MeetEdu.SessionsRange">
            <summary>
            Represents a number of sessions range
            </summary>
        </member>
        <member name="P:MeetEdu.SessionsRange.Minimum">
            <summary>
            The minimum value
            </summary>
        </member>
        <member name="P:MeetEdu.SessionsRange.Maximum">
            <summary>
            The maximum value
            </summary>
        </member>
        <member name="M:MeetEdu.SessionsRange.#ctor(System.UInt32,System.UInt32)">
            <summary>
            Default constructor
            </summary>
            <param name="value1">The first value</param>
            <param name="value2">The second value</param>
        </member>
        <member name="T:MeetEdu.TimeRange">
            <summary>
            Represents a time range
            </summary>
        </member>
        <member name="P:MeetEdu.TimeRange.Start">
            <summary>
            The start
            </summary>
        </member>
        <member name="P:MeetEdu.TimeRange.End">
            <summary>
            The end
            </summary>
        </member>
        <member name="P:MeetEdu.TimeRange.MeetEdu#IReadOnlyRangeable{System#TimeOnly}#Minimum">
            <summary>
            The minimum value
            </summary>
        </member>
        <member name="P:MeetEdu.TimeRange.MeetEdu#IReadOnlyRangeable{System#TimeOnly}#Maximum">
            <summary>
            The maximum value
            </summary>
        </member>
        <member name="M:MeetEdu.TimeRange.#ctor(System.TimeOnly,System.TimeOnly)">
            <summary>
            Default constructor
            </summary>
            <param name="value1">The first value</param>
            <param name="value2">The second value</param>
        </member>
        <member name="T:MeetEdu.MeetEduDbMapper">
            <summary>
            Global access points for the MeetEdu application database 
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.Signature">
            <summary>
            The MeetEdu signature used for identifying the MeetEdu entities
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.UniversitiesCollectionName">
            <summary>
            The universities collection name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.UniversityLabelsCollectionName">
            <summary>
            The university labels collection name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.DepartmentsCollectionName">
            <summary>
            The departments collection name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.DepartmentLabelsCollectionName">
            <summary>
            The department labels collection name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.DepartmentContactMessagesCollectionName">
            <summary>
            The department contact collection name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.DepartmentLayoutsCollectionName">
            <summary>
            The department layouts collection name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.AppointmentRulesCollectionName">
            <summary>
            The appointment templates collection name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.AppointmentsCollectionName">
            <summary>
            The appointments collection name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.UsersCollectionName">
            <summary>
            The users collection name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.ProfessorsCollectionName">
            <summary>
            The professors collection name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.SecretariesCollectionName">
            <summary>
            The secretaries collection name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.MembersCollectionName">
            <summary>
            The members collection name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.MemberSavedDepartmentsCollectionName">
            <summary>
            The member saved departments collection name
            </summary>
        </member>
        <member name="F:MeetEdu.MeetEduDbMapper.MemberSavedProfessorsCollectionName">
            <summary>
            The member saved professors collection name
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.Universities">
            <summary>
            The universities collection
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.UniversityLabels">
            <summary>
            The university labels collection
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.Departments">
            <summary>
            The departments collection
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.DepartmentLabels">
            <summary>
            The department labels collection
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.DepartmentLayouts">
            <summary>
            The department layouts collection
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.DepartmentContactMessages">
            <summary>
            The department contact messages collection
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.AppointmentRules">
            <summary>
            The appointment templates collection
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.Appointments">
            <summary>
            The appointments collection
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.Users">
            <summary>
            The users collection
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.Members">
            <summary>
            The members collection
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.MemberSavedDepartments">
            <summary>
            The member saved departments collection
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.MemberSavedProfessors">
            <summary>
            The member saved departments collection
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.Professors">
            <summary>
            The professors collection
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduDbMapper.Secretaries">
            <summary>
            The secretaries collection
            </summary>
        </member>
        <member name="T:MeetEdu.DI">
            <summary>
            The default application services that should be available everywhere in the application
            </summary>
        </member>
        <member name="F:MeetEdu.DI.mDatabase">
            <summary>
            The member of the <see cref="P:MeetEdu.DI.Database"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DI.mMapper">
            <summary>
            The member of the <see cref="P:MeetEdu.DI.Mapper"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.DI.Database">
            <summary>
            The database context
            </summary>
        </member>
        <member name="P:MeetEdu.DI.Mapper">
            <summary>
            The mapper
            </summary>
        </member>
        <member name="P:MeetEdu.DI.Provider">
            <summary>
            The dependency injection service provider
            </summary>
        </member>
        <member name="P:MeetEdu.DI.AccountsRepository">
            <summary>
            The accounts manager
            </summary>
        </member>
        <member name="P:MeetEdu.DI.UsersRepository">
            <summary>
            The users manager
            </summary>
        </member>
        <member name="P:MeetEdu.DI.SecretariesRepository">
            <summary>
            The secretaries manager
            </summary>
        </member>
        <member name="P:MeetEdu.DI.ProfessorsRepository">
            <summary>
            The professors manager
            </summary>
        </member>
        <member name="P:MeetEdu.DI.MembersRepository">
            <summary>
            The members manager
            </summary>
        </member>
        <member name="P:MeetEdu.DI.UniversitiesRepository">
            <summary>
            The universities manager
            </summary>
        </member>
        <member name="P:MeetEdu.DI.DepartmentsRepository">
            <summary>
            The departments manager
            </summary>
        </member>
        <member name="P:MeetEdu.DI.AppointmentsRepository">
            <summary>
            The appointments manager
            </summary>
        </member>
        <member name="M:MeetEdu.DI.GetRequiredService``1(System.Action{``0})">
            <summary>
            Gets the requested service from the service provider
            </summary>
            <typeparam name="TService">
            The type of the service.
            NOTE: Some services require a different approach when retrieving them.
                  For example, some services , in order to function properly, require
                  some variables that their default parameterless constructors can't set.
                  In that case, use the methods located in the DI in their own library!
            </typeparam>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.AppointmentEntity">
            <summary>
            Represents an appointment document in the MongoDB
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentEntity.ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentEntity.RuleId">
            <summary>
            The appointment rule id
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentEntity.Date">
            <summary>
            The date
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentEntity.TimeStart">
            <summary>
            The time that the appointment begins
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentEntity.TimeEnd">
            <summary>
            The time that the appointment ends
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentEntity.IsCanceled">
            <summary>
            A flag indicating whether the subscription was canceled or not
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentEntity.DateCanceled">
            <summary>
            The date the customer subscription was canceled
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentEntity.IsRemote">
            <summary>
            A flag indicating whether it is remote or not
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentEntity.Rule">
            <summary>
            The rule
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentEntity.Professor">
            <summary>
            The professor
            </summary>
        </member>
        <member name="M:MeetEdu.AppointmentEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.AppointmentEntity.FromRequestModelAsync(MeetEdu.AppointmentRequestModel)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.AppointmentEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.AppointmentEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.AppointmentResponseModel"/> from the current <see cref="T:MeetEdu.AppointmentEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.AppointmentEntity.ToEmbeddedEntity">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.EmbeddedAppointmentEntity"/> from the current <see cref="T:MeetEdu.AppointmentEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EmbeddedAppointmentEntity">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.AppointmentEntity"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentEntity.ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentEntity.RuleId">
            <summary>
            The appointment rule id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentEntity.Date">
            <summary>
            The date
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentEntity.TimeStart">
            <summary>
            The time that the appointment begins
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentEntity.TimeEnd">
            <summary>
            The time that the appointment ends
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentEntity.IsCanceled">
            <summary>
            A flag indicating whether the subscription was canceled or not
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentEntity.IsRemote">
            <summary>
            A flag indicating whether it is remote or not
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentEntity.Rule">
            <summary>
            The rule
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedAppointmentEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.AppointmentRuleEntity">
            <summary>
            Represents an appointment template document in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.AppointmentRuleEntity.mDescription">
            <summary>
            The member of the <see cref="P:MeetEdu.AppointmentRuleEntity.Description"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.AppointmentRuleEntity.mNote">
            <summary>
            The member of the <see cref="P:MeetEdu.AppointmentRuleEntity.Note"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleEntity.ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleEntity.HasRemoteOption">
            <summary>
            A flag indicating whether it has a remote option or not
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleEntity.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleEntity.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentRuleEntity.Duration">
            <summary>
            The duration
            </summary>
        </member>
        <member name="M:MeetEdu.AppointmentRuleEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.AppointmentRuleEntity.FromRequestModel(MeetEdu.AppointmentRuleRequestModel)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.AppointmentRuleEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.AppointmentRuleEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.AppointmentRuleResponseModel"/> from the current <see cref="T:MeetEdu.AppointmentRuleEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.AppointmentRuleEntity.ToEmbeddedEntity">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.EmbeddedAppointmentRuleEntity"/> from the current <see cref="T:MeetEdu.AppointmentRuleEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EmbeddedAppointmentRuleEntity">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.AppointmentRuleEntity"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentRuleEntity.ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentRuleEntity.HasRemoteOption">
            <summary>
            A flag indicating whether it has a remote option or not
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedAppointmentRuleEntity.Duration">
            <summary>
            The duration
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedAppointmentRuleEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.BaseEntity">
            <summary>
            The base for a document in the MongoDB
            </summary>
        </member>
        <member name="P:MeetEdu.BaseEntity.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="M:MeetEdu.BaseEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.EmbeddedBaseEntity">
            <summary>
            The base for all the embedded entities
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedBaseEntity.Source">
            <summary>
            The id of the entity that was used for creating the current 
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedBaseEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.DateEntity">
            <summary>
            The date entity
            </summary>
        </member>
        <member name="P:MeetEdu.DateEntity.DateCreated">
            <summary>
            The creation date
            </summary>
        </member>
        <member name="P:MeetEdu.DateEntity.DateModified">
            <summary>
            The last modification date
            </summary>
        </member>
        <member name="M:MeetEdu.DateEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.DepartmentContactMessageEntity">
            <summary>
            Represents a department contact message document in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentContactMessageEntity.mFirstName">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentContactMessageEntity.FirstName"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentContactMessageEntity.mLastName">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentContactMessageEntity.LastName"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentContactMessageEntity.mMessage">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentContactMessageEntity.Message"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentContactMessageEntity.mEmail">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentContactMessageEntity.Email"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageEntity.DepartmentId">
            <summary>
            The department id
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageEntity.MemberId">
            <summary>
            The member id
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageEntity.FirstName">
            <summary>
            The first name
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageEntity.LastName">
            <summary>
            The last name
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageEntity.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageEntity.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentContactMessageEntity.Message">
            <summary>
            The message
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentContactMessageEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentContactMessageEntity.FromRequestModel(MeetEdu.DepartmentContactMessageRequestModel,MongoDB.Bson.ObjectId)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.DepartmentContactMessageEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <param name="departmentId">The department id</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentContactMessageEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.DepartmentContactMessageResponseModel"/> from the current <see cref="T:MeetEdu.DepartmentContactMessageEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentContactMessageEntity.ToEmbeddedEntity">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.EmbeddedDepartmentContactMessageEntity"/> from the current <see cref="T:MeetEdu.DepartmentContactMessageEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EmbeddedDepartmentContactMessageEntity">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.DepartmentContactMessageEntity"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedDepartmentContactMessageEntity.mEmail">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedDepartmentContactMessageEntity.Email"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentContactMessageEntity.DepartmentId">
            <summary>
            The company id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentContactMessageEntity.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentContactMessageEntity.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedDepartmentContactMessageEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.DepartmentEntity">
            <summary>
            Represents a department document in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentEntity.mNote">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentEntity.Note"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentEntity.mDescription">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentEntity.Description"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentEntity.mFields">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentEntity.Fields"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentEntity.mLabels">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentEntity.Labels"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentEntity.UniversityId">
            <summary>
            The university id
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentEntity.Category">
            <summary>
            The category
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentEntity.Fields">
            <summary>
            The fields of study
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentEntity.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentEntity.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentEntity.TotalStaffMembers">
            <summary>
            The number of staff members
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentEntity.WorkHours">
            <summary>
            The work hours
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentEntity.ImageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentEntity.Location">
            <summary>
            The location
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentEntity.Billing">
            <summary>
            The billing information
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentEntity.Shipping">
            <summary>
            The shipping information
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentEntity.Labels">
            <summary>
            The labels
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentEntity.FromRequestModel(MeetEdu.DepartmentRequestModel)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.DepartmentEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.DepartmentResponseModel"/> from the current <see cref="T:MeetEdu.DepartmentEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentEntity.UpdateNonAutoMapperValues(MeetEdu.DepartmentRequestModel,MeetEdu.DepartmentEntity)">
            <summary>
            Updates the values of the specified <paramref name="entity"/> with the values of the specified <paramref name="model"/>.
            NOTE: This method only affects the properties that can't be mapped by the <see cref="T:AutoMapper.Mapper"/> and are not null!
            </summary>
            <param name="model">The model</param>
            <param name="entity">The entity</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentEntity.ToEmbeddedEntity">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.EmbeddedDepartmentEntity"/> from the current <see cref="T:MeetEdu.DepartmentEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EmbeddedDepartmentEntity">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.DepartmentEntity"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentEntity.UniversityId">
            <summary>
            The university id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentEntity.TotalStaffMembers">
            <summary>
            The number of staff members
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentEntity.ImageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedDepartmentEntity.Location">
            <summary>
            The location
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedDepartmentEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.DepartmentLayoutEntity">
            <summary>
            Represents a company layout document in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentLayoutEntity.mDescription">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentLayoutEntity.Description"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.DepartmentLayoutEntity.mRooms">
            <summary>
            The member of the <see cref="P:MeetEdu.DepartmentLayoutEntity.Rooms"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutEntity.DepartmentId">
            <summary>
            The company id
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutEntity.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentLayoutEntity.Rooms">
            <summary>
            The rooms
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentLayoutEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentLayoutEntity.FromRequestModel(MeetEdu.DepartmentLayoutRequestModel,MongoDB.Bson.ObjectId)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.DepartmentLayoutEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <param name="companyId">The company id</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentLayoutEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.DepartmentLayoutResponseModel"/> from the current <see cref="T:MeetEdu.DepartmentLayoutEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.LabelEntity">
            <summary>
            Represents a label document in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.LabelEntity.mDescription">
            <summary>
            The member of the <see cref="P:MeetEdu.LabelEntity.Description"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.LabelEntity.DepartmentId">
            <summary>
            The company id
            </summary>
        </member>
        <member name="P:MeetEdu.LabelEntity.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="M:MeetEdu.LabelEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.LabelEntity.FromRequestModel(MeetEdu.LabelRequestModel,MongoDB.Bson.ObjectId)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.LabelEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <param name="companyId">The company id</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.LabelEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.LabelResponseModel"/> from the current <see cref="T:MeetEdu.LabelEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.LabelEntity.ToEmbeddedEntity">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.EmbeddedLabelEntity"/> from the current <see cref="T:MeetEdu.LabelEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EmbeddedLabelEntity">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.LabelEntity"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedLabelEntity.DepartmentId">
            <summary>
            The company id
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedLabelEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.MemberSavedDepartmentEntity">
            <summary>
            Only entity
            </summary>
        </member>
        <member name="P:MeetEdu.MemberSavedDepartmentEntity.DepartmentId">
            <summary>
            The company id
            </summary>
        </member>
        <member name="P:MeetEdu.MemberSavedDepartmentEntity.MemberId">
            <summary>
            The member id
            </summary>
        </member>
        <member name="M:MeetEdu.MemberSavedDepartmentEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.MemberSavedProfessorEntity">
            <summary>
            Only entity
            </summary>
        </member>
        <member name="P:MeetEdu.MemberSavedProfessorEntity.ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="P:MeetEdu.MemberSavedProfessorEntity.MemberId">
            <summary>
            The member id
            </summary>
        </member>
        <member name="M:MeetEdu.MemberSavedProfessorEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.StandardEntity">
            <summary>
            The standard entity
            </summary>
        </member>
        <member name="F:MeetEdu.StandardEntity.mName">
            <summary>
            The member of the <see cref="P:MeetEdu.StandardEntity.Name"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.StandardEntity.mColor">
            <summary>
            The member of the <see cref="P:MeetEdu.StandardEntity.Color"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.StandardEntity.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:MeetEdu.StandardEntity.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="M:MeetEdu.StandardEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.StandardEntity.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EmbeddedStandardEntity">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.StandardEntity"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedStandardEntity.mName">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedStandardEntity.Name"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedStandardEntity.mColor">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedStandardEntity.Color"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedStandardEntity.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedStandardEntity.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedStandardEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedStandardEntity.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.UniversityEntity">
            <summary>
            Represents a university document in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.UniversityEntity.mLabels">
            <summary>
            The member of the <see cref="P:MeetEdu.UniversityEntity.Labels"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.UniversityEntity.ImageUrl">
            <summary>
            The image
            </summary>
        </member>
        <member name="P:MeetEdu.UniversityEntity.Labels">
            <summary>
            The labels
            </summary>
        </member>
        <member name="M:MeetEdu.UniversityEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.UniversityEntity.FromRequestModel(MeetEdu.UniversityRequestModel)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.UniversityEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.UniversityEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.UniversityResponseModel"/> from the current <see cref="T:MeetEdu.UniversityEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.UniversityEntity.ToEmbeddedEntity">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.EmbeddedUniversityEntity"/> from the current <see cref="T:MeetEdu.UniversityEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EmbeddedUniversityEntity">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.UniversityEntity"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedUniversityEntity.ImageUrl">
            <summary>
            The image
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedUniversityEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.MemberEntity">
            <summary>
            Represents a member document in the MongoDB
            </summary>
        </member>
        <member name="P:MeetEdu.MemberEntity.UserId">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:MeetEdu.MemberEntity.TotalAppointments">
            <summary>
            The total number of appointments
            </summary>
        </member>
        <member name="P:MeetEdu.MemberEntity.TotalSavedDepartments">
            <summary>
            The total number of saved companies
            </summary>
        </member>
        <member name="P:MeetEdu.MemberEntity.TotalSavedProfessors">
            <summary>
            The total number of saved professors
            </summary>
        </member>
        <member name="P:MeetEdu.MemberEntity.User">
            <summary>
            The user
            </summary>
        </member>
        <member name="M:MeetEdu.MemberEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.MemberEntity.FromRequestModelAsync(MeetEdu.MemberRequestModel)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.MemberEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MemberEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.MemberResponseModel"/> from the current <see cref="T:MeetEdu.MemberEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MemberEntity.UpdateNonAutoMapperValues(MeetEdu.MemberRequestModel,MeetEdu.MemberEntity)">
            <summary>
            Updates the values of the specified <paramref name="entity"/> with the values of the specified <paramref name="model"/>.
            NOTE: This method only affects the properties that can't be mapped by the <see cref="T:AutoMapper.Mapper"/> and are not null!
            </summary>
            <param name="model">The model</param>
            <param name="entity">The entity</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MemberEntity.ToEmbeddedEntity">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.EmbeddedMemberEntity"/> from the current <see cref="T:MeetEdu.MemberEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EmbeddedMemberEntity">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.MemberEntity"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedMemberEntity.UserId">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedMemberEntity.User">
            <summary>
            The user
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedMemberEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.ProfessorEntity">
            <summary>
            Represents a professor document in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.ProfessorEntity.mField">
            <summary>
            The member of the <see cref="P:MeetEdu.ProfessorEntity.Field"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.ProfessorEntity.mResearchInterests">
            <summary>
            The member of the <see cref="P:MeetEdu.ProfessorEntity.ResearchInterests"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.ProfessorEntity.mWebsites">
            <summary>
            The member of the <see cref="P:MeetEdu.ProfessorEntity.Websites"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.ProfessorEntity.Websites">
            <summary>
            The personal websites 
            </summary>
        </member>
        <member name="P:MeetEdu.ProfessorEntity.Field">
            <summary>
            The field of study
            </summary>
        </member>
        <member name="P:MeetEdu.ProfessorEntity.ResearchInterests">
            <summary>
            The research interests
            </summary>
        </member>
        <member name="M:MeetEdu.ProfessorEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.ProfessorEntity.FromRequestModelAsync(MeetEdu.ProfessorRequestModel)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.ProfessorEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ProfessorEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.ProfessorResponseModel"/> from the current <see cref="T:MeetEdu.ProfessorEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ProfessorEntity.ToEmbeddedEntity">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.EmbeddedProfessorEntity"/> from the current <see cref="T:MeetEdu.ProfessorEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EmbeddedProfessorEntity">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.ProfessorEntity"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedProfessorEntity.mField">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedProfessorEntity.Field"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedProfessorEntity.Field">
            <summary>
            The field of study
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedProfessorEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.SecretaryEntity">
            <summary>
            Represents a secretary document in the MongoDB
            </summary>
        </member>
        <member name="P:MeetEdu.SecretaryEntity.Role">
            <summary>
            The role
            </summary>
        </member>
        <member name="M:MeetEdu.SecretaryEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.SecretaryEntity.FromRequestModelAsync(MeetEdu.SecretaryRequestModel)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.SecretaryEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.SecretaryEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.SecretaryResponseModel"/> from the current <see cref="T:MeetEdu.SecretaryEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.SecretaryEntity.ToEmbeddedEntity">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.EmbeddedSecretaryEntity"/> from the current <see cref="T:MeetEdu.SecretaryEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EmbeddedSecretaryEntity">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.SecretaryEntity"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedSecretaryEntity.Role">
            <summary>
            The role
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedSecretaryEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.StaffMemberEntity">
            <summary>
            Represents a staff member document in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.StaffMemberEntity.mQuote">
            <summary>
            The member of the <see cref="P:MeetEdu.StaffMemberEntity.Quote"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.StaffMemberEntity.UserId">
            <summary>
            The user id
            </summary>
        </member>
        <member name="P:MeetEdu.StaffMemberEntity.DepartmentId">
            <summary>
            The department id
            </summary>
        </member>
        <member name="P:MeetEdu.StaffMemberEntity.Quote">
            <summary>
            The quote
            </summary>
        </member>
        <member name="P:MeetEdu.StaffMemberEntity.WeeklySchedule">
            <summary>
            The weekly schedule
            </summary>
        </member>
        <member name="P:MeetEdu.StaffMemberEntity.User">
            <summary>
            The user
            </summary>
        </member>
        <member name="M:MeetEdu.StaffMemberEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.EmbeddedStaffMemberEntity">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.StaffMemberEntity"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedStaffMemberEntity.UserId">
            <summary>
            The user id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedStaffMemberEntity.DepartmentId">
            <summary>
            The company id
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedStaffMemberEntity.WeeklySchedule">
            <summary>
            The weekly schedule
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedStaffMemberEntity.User">
            <summary>
            The user
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedStaffMemberEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.UserEntity">
            <summary>
            Represents a user document in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.UserEntity.mFirstName">
            <summary>
            The member of the <see cref="P:MeetEdu.UserEntity.FirstName"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.UserEntity.mLastName">
            <summary>
            The member of the <see cref="P:MeetEdu.UserEntity.LastName"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.UserEntity.mUsername">
            <summary>
            The member of the <see cref="P:MeetEdu.UserEntity.Username"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.UserEntity.mPasswordHash">
            <summary>
            The member of the <see cref="P:MeetEdu.UserEntity.PasswordHash"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.UserEntity.mEmail">
            <summary>
            The member of the <see cref="P:MeetEdu.UserEntity.Email"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.UserEntity.Username">
            <summary>
            The username
            </summary>
        </member>
        <member name="P:MeetEdu.UserEntity.FirstName">
            <summary>
            The first name
            </summary>
        </member>
        <member name="P:MeetEdu.UserEntity.LastName">
            <summary>
            The last name
            </summary>
        </member>
        <member name="P:MeetEdu.UserEntity.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:MeetEdu.UserEntity.PasswordHash">
            <summary>
            Gets or sets a salted and hashed representation of the password for this user.
            </summary>
        </member>
        <member name="P:MeetEdu.UserEntity.IsEmailConfirmed">
            <summary>
            A flag indicating whether the email is confirmed or not
            </summary>
        </member>
        <member name="P:MeetEdu.UserEntity.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="P:MeetEdu.UserEntity.ImageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="P:MeetEdu.UserEntity.DateOfBirth">
            <summary>
            The birthday
            </summary>
        </member>
        <member name="P:MeetEdu.UserEntity.Shipping">
            <summary>
            The shipping information
            </summary>
        </member>
        <member name="P:MeetEdu.UserEntity.Billing">
            <summary>
            The billing information
            </summary>
        </member>
        <member name="P:MeetEdu.UserEntity.Location">
            <summary>
            The location
            </summary>
        </member>
        <member name="M:MeetEdu.UserEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.UserEntity.FromRequestModel(MeetEdu.UserRequestModel)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.UserEntity"/> from the specified <paramref name="model"/>
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.UserEntity.ToResponseModel">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.UserResponseModel"/> from the current <see cref="T:MeetEdu.UserEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.UserEntity.ToEmbeddedEntity">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.EmbeddedUserEntity"/> from the current <see cref="T:MeetEdu.UserEntity"/>
            </summary>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EmbeddedUserEntity">
            <summary>
            A minimal version of the <see cref="T:MeetEdu.UserEntity"/> that contains the fields that are 
            more frequently used when embedding documents in the MongoDB
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedUserEntity.mFirstName">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedUserEntity.FirstName"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedUserEntity.mLastName">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedUserEntity.LastName"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedUserEntity.mUsername">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedUserEntity.Username"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.EmbeddedUserEntity.mEmail">
            <summary>
            The member of the <see cref="P:MeetEdu.EmbeddedUserEntity.Email"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedUserEntity.Username">
            <summary>
            The username
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedUserEntity.FirstName">
            <summary>
            The first name
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedUserEntity.LastName">
            <summary>
            The last name
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedUserEntity.ImageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedUserEntity.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedUserEntity.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="P:MeetEdu.EmbeddedUserEntity.Location">
            <summary>
            The location
            </summary>
        </member>
        <member name="M:MeetEdu.EmbeddedUserEntity.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.APIArgsExtensions">
            <summary>
            Extension methods for <see cref="T:MeetEdu.APIArgs"/>
            </summary>
        </member>
        <member name="M:MeetEdu.APIArgsExtensions.CreateFilters``1(MeetEdu.StafMemberAPIArgs)">
            <summary>
            Creates the filters for the specified <paramref name="args"/>
            </summary>
            <typeparam name="T">The document type</typeparam>
            <param name="args">The arguments</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.APIArgsExtensions.CreateFilters(MeetEdu.DepartmentAPIArgs)">
            <summary>
            Creates the filters for the specified <paramref name="args"/>
            </summary>
            <param name="args">The arguments</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.APIArgsExtensions.AggregateFilters``1(System.Collections.Generic.List{MongoDB.Driver.FilterDefinition{``0}})">
            <summary>
            Combines the specified <paramref name="filters"/>
            </summary>
            <typeparam name="T">The document type</typeparam>
            <param name="filters">The filters</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.ExceptionExtensions">
            <summary>
            Extension methods for <see cref="T:System.Exception"/>
            </summary>
        </member>
        <member name="M:MeetEdu.ExceptionExtensions.AggregateExceptionMessages(System.Exception)">
            <summary>
            Aggregates the <see cref="P:System.Exception.Message"/> in the <paramref name="exception"/> exception stack trace
            </summary>
            <param name="exception">The exception</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.ExpressionExtensions">
            <summary>
            Extension methods for <see cref="T:System.Linq.Expressions.Expression"/>s
            </summary>
        </member>
        <member name="M:MeetEdu.ExpressionExtensions.GetPropertyInfo``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Used for analyzing an expression like x => x.Property and returning the
            <see cref="T:System.Reflection.PropertyInfo"/> of the accessed property.
            </summary>
            <typeparam name="TSource">The type of the container of the property</typeparam>
            <typeparam name="TProperty">The type of the target property</typeparam>
            <param name="propertyExpression">The expression targeting the property</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ExpressionExtensions.GetPropertyInfo``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Used for analyzing an expression like () => SomeInstance.Property and returning the
            <see cref="T:System.Reflection.PropertyInfo"/> of the accessed property.
            </summary>
            <typeparam name="TProperty">The type of the target property</typeparam>
            <param name="propertyExpression">The expression targeting the property</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ExpressionExtensions.GetMemberExpression(System.Linq.Expressions.Expression)">
            <summary>
            Returns the <see cref="T:System.Linq.Expressions.MemberExpression"/> from the specified <paramref name="expression"/>
            </summary>
            <param name="expression">The expression</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.IEnumerableExtensions">
            <summary>
            Extension methods associated with <see cref="T:System.Collections.IEnumerable"/> and <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </summary>
        </member>
        <member name="M:MeetEdu.IEnumerableExtensions.IsNullOrEmpty(System.Collections.IEnumerable)">
            <summary>
            Checks if the specified <paramref name="enumerable"/> is null or 
            if it doesn't have any items.
            </summary>
            <param name="enumerable">The enumerable</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.IEnumerableExtensions.AggregateString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Func{System.String,System.String,System.String})">
            <summary>
            Aggregates the specified <paramref name="source"/> into a <see cref="T:System.String"/>
            </summary>
            <typeparam name="T">The type of the items</typeparam>
            <param name="source">The source</param>
            <param name="extractor">The string extractor that is used to convert an item to a string</param>
            <param name="func">Delegate that places the extracted strings in order</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.IEnumerableExtensions.AggregateString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)">
            <summary>
            Aggregates the specified <paramref name="source"/> into a <see cref="T:System.String"/>
            </summary>
            <typeparam name="T">The type of the items</typeparam>
            <param name="source">The source</param>
            <param name="extractor">The string extractor that is used to convert an item to a string</param>
            <param name="separator">The separator</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.IEnumerableExtensions.AggregateString``1(System.Collections.Generic.IEnumerable{``0},System.Func{System.String,System.String,System.String})">
            <summary>
            Aggregates the specified <paramref name="source"/> into a <see cref="T:System.String"/>.
            NOTE: This method converts the items of the <paramref name="source"/> to <see cref="T:System.String"/>
                  using the <see cref="M:System.Object.ToString"/> method!
            </summary>
            <typeparam name="T">The type of the items</typeparam>
            <param name="source">The source</param>
            <param name="func">Delegate that places the extracted strings in order</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.IEnumerableExtensions.AggregateString``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Aggregates the specified <paramref name="source"/> into a <see cref="T:System.String"/>.
            NOTE: This method converts the items of the <paramref name="source"/> to <see cref="T:System.String"/>
                  using the <see cref="M:System.Object.ToString"/> method!
            NOTE: This method uses ", " as the items separator!
            </summary>
            <typeparam name="T">The type of the items</typeparam>
            <param name="source">The source</param>
            <param name="separator">The separator</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.IMongoQueryableExtensions">
            <summary>
            Extension methods for <see cref="T:MongoDB.Driver.Linq.IMongoQueryable`1"/>
            </summary>
        </member>
        <member name="M:MeetEdu.IMongoQueryableExtensions.OrderBy``1(MongoDB.Driver.Linq.IMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MeetEdu.OrderCondition)">
            <summary>
            Sorts the elements of a sequence
            </summary>
            <typeparam name="T">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to order.</param>
            <param name="keySelector">A function to extract a key from an element.</param>
            <param name="orderCondition">The order condition.</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.IOrderedMongoQueryableExtensions">
            <summary>
            Extension methods for <see cref="T:MongoDB.Driver.Linq.IOrderedMongoQueryable`1"/>
            </summary>
        </member>
        <member name="M:MeetEdu.IOrderedMongoQueryableExtensions.ThenBy``1(MongoDB.Driver.Linq.IOrderedMongoQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},MeetEdu.OrderCondition)">
            <summary>
            Performs a subsequent ordering of the elements
            </summary>
            <typeparam name="T">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to order.</param>
            <param name="keySelector">A function to extract a key from an element.</param>
            <param name="orderCondition">The order condition,</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.IServiceCollectionExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>
            </summary>
        </member>
        <member name="F:MeetEdu.IServiceCollectionExtensions.EntityToDTONamespaceMaps">
            <summary>
            The maps of the namespaces between the entities and the DTOs
            </summary>
        </member>
        <member name="M:MeetEdu.IServiceCollectionExtensions.AddMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the pre-configured <see cref="T:AutoMapper.Mapper"/> in the <paramref name="services"/>
            </summary>
            <param name="services">The services</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EntityToDTONamespaceMap">
            <summary>
            The map from entities to data transfer objects
            </summary>
        </member>
        <member name="P:MeetEdu.EntityToDTONamespaceMap.EntityNamespace">
            <summary>
            The namespace of the entity
            </summary>
        </member>
        <member name="P:MeetEdu.EntityToDTONamespaceMap.DTONamespace">
            <summary>
            The namespace of the DTO
            </summary>
        </member>
        <member name="M:MeetEdu.EntityToDTONamespaceMap.#ctor(System.String,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="entityNamespace">The namespace of the entity</param>
            <param name="dtoNamespace">The namespace of the DTO</param>
        </member>
        <member name="T:MeetEdu.StringExtensions">
            <summary>
            Extension methods for strings
            </summary>
        </member>
        <member name="M:MeetEdu.StringExtensions.ToObjectId(System.String)">
            <summary>
            Converts the specified <paramref name="s"/> to an <see cref="T:MongoDB.Bson.ObjectId"/>
            </summary>
            <param name="s">The string to convert</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.Helpers.ControllerHelpers">
            <summary>
            Helper methods for <see cref="T:Microsoft.AspNetCore.Mvc.Controller"/>s
            </summary>
        </member>
        <member name="M:MeetEdu.Helpers.ControllerHelpers.GetManyAsync``2(MongoDB.Driver.IMongoCollection{``1},System.Func{``1,``0},MongoDB.Driver.FilterDefinition{``1},MeetEdu.APIArgs,System.Threading.CancellationToken,System.Linq.Expressions.Expression{System.Func{``1,System.Object}},MeetEdu.OrderCondition)">
            <summary>
            Get many 
            </summary>
            <typeparam name="TResponse">The type of the response model</typeparam>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="projector">The projector</param>
            <param name="filter">The filter</param>
            <param name="orderCondition">Indicates whether the order is ascending or descending</param>
            <param name="orderSelector">The order selector</param>
            <param name="args">The args</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.Helpers.ControllerHelpers.GetAsync``2(MongoDB.Driver.IMongoCollection{``1},System.Func{``1,``0},MongoDB.Driver.FilterDefinition{``1},System.Threading.CancellationToken,System.Linq.Expressions.Expression{System.Func{``1,System.Object}},MeetEdu.OrderCondition)">
            <summary>
            Get one 
            </summary>
            <typeparam name="TResponse">The type of the response model</typeparam>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="projector">The projector</param>
            <param name="filter">The filter</param>
            <param name="orderSelector"></param>
            <param name="orderCondition">Indicates whether the order is ascending or descending</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.Helpers.ControllerHelpers.GetAsync``2(MongoDB.Driver.IMongoCollection{``1},System.Func{``1,``0},System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}},System.Threading.CancellationToken,System.Linq.Expressions.Expression{System.Func{``1,System.Object}},MeetEdu.OrderCondition)">
            <summary>
            Get one 
            </summary>
            <typeparam name="TResponse">The type of the response model</typeparam>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="projector">The projector</param>
            <param name="filter">The filter</param>
            <param name="orderSelector"></param>
            <param name="orderCondition">Indicates whether the order is ascending or descending</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.EntityHelpers">
            <summary>
            Helper methods for entities
            </summary>
        </member>
        <member name="F:MeetEdu.EntityHelpers.mTypeToIdentifiablePropertiesMapper">
            <summary>
            Maps a <see cref="P:System.Type.FullName"/> that implements the <see cref="T:MeetEdu.IDepartmentIdentifiable"/> to information related to its <see cref="T:MeetEdu.IDepartmentIdentifiable"/> sub properties
            </summary>
        </member>
        <member name="M:MeetEdu.EntityHelpers.GetUserAsync(System.String)">
            <summary>
            Gets the user that has the specified <paramref name="userId"/> and return the <see cref="T:MeetEdu.EmbeddedUserEntity"/>
            </summary>
            <param name="userId">The user id</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.EntityHelpers.FromRequestModel``1(System.Object)">
            <summary>
            Creates and returns an entity of the specified type using the specified
            <paramref name="model"/>
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.EntityHelpers.FromRequestModel``1(System.Object,System.Action{``0})">
            <summary>
            Creates and returns an entity of the specified type using the specified
            <paramref name="model"/>
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="model">The model</param>
            <param name="action">The action</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.EntityHelpers.FromRequestModel``1(System.Object,MongoDB.Bson.ObjectId)">
            <summary>
            Creates and returns an entity of the specified type using the specified
            <paramref name="model"/>
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="model">The model</param>
            <param name="companyId">The company id</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.EntityHelpers.FromRequestModelAsync``2(``1,System.Func{``1,``0,System.Threading.Tasks.Task})">
            <summary>
            Creates and returns an entity of the specified type using the specified
            <paramref name="model"/>
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <typeparam name="TRequestModel">The type of the request model</typeparam>
            <param name="model">The type of the model</param>
            <param name="updateNonAutoMapperValues">
            Updates the values of the entity with the values of the specified <paramref name="model"/>.
            NOTE: This method only affects the properties that can't be mapped by the <see cref="T:AutoMapper.Mapper"/> and are not null!
            </param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.EntityHelpers.FromRequestModelAsync``2(``1,MongoDB.Bson.ObjectId,System.Func{``1,``0,MongoDB.Bson.ObjectId,System.Threading.Tasks.Task})">
            <summary>
            Creates and returns an entity of the specified type using the specified
            <paramref name="model"/>
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <typeparam name="TRequestModel">The type of the request model</typeparam>
            <param name="model">The type of the model</param>
            <param name="companyId">The company id</param>
            <param name="updateNonAutoMapperValues">
            Updates the values of the entity with the values of the specified <paramref name="model"/>.
            NOTE: This method only affects the properties that can't be mapped by the <see cref="T:AutoMapper.Mapper"/> and are not null!
            </param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.EntityHelpers.ToResponseModel``1(MeetEdu.BaseEntity)">
            <summary>
            Creates and returns a response model of a specified type using the specified <paramref name="entity"/>
            </summary>
            <typeparam name="TResponseModel">The type of the response model</typeparam>
            <param name="entity">The entity</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.EntityHelpers.ToEmbeddedEntity``1(MeetEdu.BaseEntity)">
            <summary>
            Creates and returns an embedded entity from the specified <paramref name="entity"/>
            </summary>
            <typeparam name="TEmbeddedEntity">The type of the embedded entity</typeparam>
            <param name="entity">The entity</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.EntityHelpers.UpdateNonAutoMapperValueAsync``3(``0,``1,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,System.Nullable{MongoDB.Bson.ObjectId}}},MongoDB.Driver.Linq.IMongoQueryable{``2},System.Action{``1,``2})">
            <summary>
            Updates the property of the entity selected by the specified <paramref name="entityDocumentPropertySelector"/>
            with a value retrieved using the specified <paramref name="queryable"/> along with the id provided by the value
            of the property selected by the specified <paramref name="modelIdPropertySelector"/>. If no value was retrieved 
            by the queryable null is set, otherwise the <see cref="T:MongoDB.Bson.ObjectId"/> that was used for retrieving the
            value
            </summary>
            <typeparam name="TRequestModel">The type of the request model</typeparam>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <typeparam name="TSourceEntity">The type of the entities that will be searched</typeparam>
            <param name="model">The model</param>
            <param name="entity">The entity</param>
            <param name="modelIdPropertySelector">Selects the id property of the <typeparamref name="TRequestModel"/></param>
            <param name="entityDocumentPropertySelector">Selects the document property of the <typeparamref name="TEntity"/></param>
            <param name="queryable">The queryable</param>
            <param name="updateAction">Further updates the entity</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.EntityHelpers.UpdateNonAutoMapperValueAsync``4(``0,``1,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,``3}},MongoDB.Driver.Linq.IMongoQueryable{``2},System.Func{``2,``3},System.Action{``1,``2})">
            <summary>
            Updates the property of the entity selected by the specified <paramref name="entityDocumentPropertySelector"/>
            with a value retrieved using the specified <paramref name="queryable"/> along with the id provided by the value
            of the property selected by the specified <paramref name="modelIdPropertySelector"/>
            </summary>
            <typeparam name="TRequestModel">The type of the request model</typeparam>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <typeparam name="TSourceEntity">The type of the entities that will be searched</typeparam>
            <typeparam name="TEmbeddedEntity">
            The type of the entity that should be created by the <typeparamref name="TSourceEntity"/> and
            placed as the value of the property of the <typeparamref name="TEntity"/>
            </typeparam>
            <param name="model">The model</param>
            <param name="entity">The entity</param>
            <param name="modelIdPropertySelector">Selects the id property of the <typeparamref name="TRequestModel"/></param>
            <param name="entityDocumentPropertySelector">Selects the document property of the <typeparamref name="TEntity"/></param>
            <param name="queryable">The queryable</param>
            <param name="projection">Creates and returns the embedded entity from the source entity</param>
            <param name="updateAction">Further updates the entity</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.EntityHelpers.UpdateNonAutoMapperEnumerableValueAsync``4(``0,``1,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{System.String}}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``3}}},MongoDB.Driver.Linq.IMongoQueryable{``2},System.Func{``2,``3})">
            <summary>
            Updates the property of the entity selected by the specified <paramref name="entityDocumentsPropertySelector"/>
            with a value retrieved using the specified <paramref name="queryable"/> along with the ids provided by the value
            of the property selected by the specified <paramref name="modelIdsPropertySelector"/>
            </summary>
            <typeparam name="TRequestModel">The type of the request model</typeparam>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <typeparam name="TSourceEntity">The type of the entities that will be searched</typeparam>
            <typeparam name="TEmbeddedEntity">
            The type of the entity that should be created by the <typeparamref name="TSourceEntity"/> and
            placed as the value of the property of the <typeparamref name="TEntity"/>
            </typeparam>
            <param name="model">The model</param>
            <param name="entity">The entity</param>
            <param name="modelIdsPropertySelector">Selects the ids property of the <typeparamref name="TRequestModel"/></param>
            <param name="entityDocumentsPropertySelector">Selects the documents property of the <typeparamref name="TEntity"/></param>
            <param name="queryable">The queryable</param>
            <param name="projection">Creates and returns the embedded entity from the source entity</param>
            <returns></returns>
        </member>
        <member name="P:MeetEdu.EntityHelpers.CompanyEntityCompanyIdentifiablePropertiesInformationDataModel.Type">
            <summary>
            The parent type that implements the <see cref="T:MeetEdu.IDepartmentIdentifiable"/>
            </summary>
        </member>
        <member name="P:MeetEdu.EntityHelpers.CompanyEntityCompanyIdentifiablePropertiesInformationDataModel.CompanyIdentifiableProperties">
            <summary>
            The properties of the <see cref="P:MeetEdu.EntityHelpers.CompanyEntityCompanyIdentifiablePropertiesInformationDataModel.Type"/> that implement the <see cref="T:MeetEdu.IDepartmentIdentifiable"/>
            </summary>
        </member>
        <member name="P:MeetEdu.EntityHelpers.CompanyEntityCompanyIdentifiablePropertiesInformationDataModel.EnumerableCompanyIdentifiableProperties">
            <summary>
            The enumerable properties of the <see cref="P:MeetEdu.EntityHelpers.CompanyEntityCompanyIdentifiablePropertiesInformationDataModel.Type"/> whose generic type implement the <see cref="T:MeetEdu.IDepartmentIdentifiable"/>
            </summary>
        </member>
        <member name="M:MeetEdu.EntityHelpers.CompanyEntityCompanyIdentifiablePropertiesInformationDataModel.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo},System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo})">
            <summary>
            Default constructor
            </summary>
            <param name="type">The parent type that implements the <see cref="T:MeetEdu.IDepartmentIdentifiable"/></param>
            <param name="companyIdentifiableProperties">The properties of the <see cref="P:MeetEdu.EntityHelpers.CompanyEntityCompanyIdentifiablePropertiesInformationDataModel.Type"/> that implement the <see cref="T:MeetEdu.IDepartmentIdentifiable"/></param>
            <param name="enumerableCompanyIdentifiableProperties">The enumerable properties of the <see cref="P:MeetEdu.EntityHelpers.CompanyEntityCompanyIdentifiablePropertiesInformationDataModel.Type"/> whose generic type implement the <see cref="T:MeetEdu.IDepartmentIdentifiable"/></param>
        </member>
        <member name="T:MeetEdu.IFailableHelpers">
            <summary>
            Helper methods for <see cref="T:MeetEdu.IFailable"/>
            </summary>
        </member>
        <member name="M:MeetEdu.IFailableHelpers.GetStringRepresentation(MeetEdu.IFailable)">
            <summary>
            Gets the string representation of the specified <paramref name="failable"/>
            </summary>
            <param name="failable">The failable</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.IFailableHelpers.GetStringRepresentation``1(MeetEdu.IFailable{``0})">
            <summary>
            Gets the string representation of the specified <paramref name="failable"/>
            </summary>
            <param name="failable">The failable</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.RepositoryHelpers">
            <summary>
            Helper Methods for the repositories
            </summary>
        </member>
        <member name="M:MeetEdu.RepositoryHelpers.AddAsync``1(MongoDB.Driver.IMongoCollection{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Adds the specified <paramref name="entity"/> to the specified <paramref name="collection"/>
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="entity">The entity</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.RepositoryHelpers.AddRangeAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Collections.Generic.IEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Adds the specified <paramref name="entities"/> to the specified <paramref name="collection"/>
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="entities">The entity</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.RepositoryHelpers.FirstOrDefaultAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the first document that matches the requirements and null if none is found
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="filter">The filter expression</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.RepositoryHelpers.FirstOrDefaultAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Returns the first document that matches the requirements and null if none is found
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="id">The id of the document</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.RepositoryHelpers.FirstAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the first document that matches the requirements
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="filter">The filter expression</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.RepositoryHelpers.FirstAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Returns the first document that matches the requirements and null if none is found
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="id">The id of the document</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.RepositoryHelpers.SelectAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the documents that match the requirements and null if none is found
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="filter">The filter</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.RepositoryHelpers.AnyAsync``1(MongoDB.Driver.IMongoCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
            Returns the first document that matches the requirements and throws a <see cref="T:System.InvalidOperationException"/> if none is found
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="filter">The filter expression</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.RepositoryHelpers.AnyAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Returns the first document that matches the requirements and throws a <see cref="T:System.InvalidOperationException"/> if none is found
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="id">The id of the document</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.RepositoryHelpers.UpdateAsync``1(MongoDB.Driver.IMongoCollection{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Updates the specified <paramref name="entity"/> while keeping its id the same.
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="entity">The new updated document</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.RepositoryHelpers.UpdateAsync``2(MongoDB.Driver.IMongoCollection{``0},MongoDB.Bson.ObjectId,``1,System.Threading.CancellationToken)">
            <summary>
            Updates the <typeparamref name="TEntity"/> with the specified <paramref name="id"/>
            </summary>
            <param name="collection">The collection</param>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.RepositoryHelpers.DeleteAsync``1(MongoDB.Driver.IMongoCollection{``0},MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Deletes the entity with the specified <paramref name="id"/> from the collection.
            </summary>
            <typeparam name="TEntity">The type of the entity</typeparam>
            <param name="collection">The collection</param>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.IAddressable">
            <summary>
            Provides abstractions for an object that has an address
            </summary>
        </member>
        <member name="P:MeetEdu.IAddressable.Address">
            <summary>
            The email
            </summary>
        </member>
        <member name="P:MeetEdu.IAddressable.Longitude">
            <summary>
            The longitude
            </summary>
        </member>
        <member name="P:MeetEdu.IAddressable.Latitude">
            <summary>
            The latitude
            </summary>
        </member>
        <member name="T:MeetEdu.IColorable">
            <summary>
            Provides abstractions for a model that provides a color
            </summary>
        </member>
        <member name="P:MeetEdu.IColorable.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="T:MeetEdu.IConditionable">
            <summary>
            Provides abstractions for an object with an assignable logical condition state
            </summary>
        </member>
        <member name="P:MeetEdu.IConditionable.Condition">
            <summary>
            The condition.
            </summary>
        </member>
        <member name="P:MeetEdu.IConditionable.MeetEdu#IReadOnlyConditionable#Condition">
            <summary>
            The condition.
            </summary>
        </member>
        <member name="T:MeetEdu.IReadOnlyConditionable">
            <summary>
            Provides abstractions for an object with a logical condition state
            </summary>
        </member>
        <member name="P:MeetEdu.IReadOnlyConditionable.Condition">
            <summary>
            The condition.
            </summary>
        </member>
        <member name="T:MeetEdu.ICustomerIdentifiable">
            <summary>
            Provides abstractions for an object that has a customer id
            </summary>
        </member>
        <member name="P:MeetEdu.ICustomerIdentifiable.CustomerId">
            <summary>
            The customer id
            </summary>
        </member>
        <member name="T:MeetEdu.ICustomerIdentifiable`1">
            <summary>
            Provides abstractions for an object that has a customer id
            </summary>
        </member>
        <member name="P:MeetEdu.ICustomerIdentifiable`1.CustomerId">
            <summary>
            The customer id
            </summary>
        </member>
        <member name="P:MeetEdu.ICustomerIdentifiable`1.MeetEdu#ICustomerIdentifiable#CustomerId">
            <summary>
            The customer id
            </summary>
        </member>
        <member name="T:MeetEdu.IDateCreatable">
            <summary>
            Provides abstractions for an object that has can be marked as created at a specific date
            </summary>
        </member>
        <member name="P:MeetEdu.IDateCreatable.DateCreated">
            <summary>
            The creation date
            </summary>
        </member>
        <member name="P:MeetEdu.IDateCreatable.MeetEdu#IReadOnlyDateCreatable#DateCreated">
            <summary>
            The creation date
            </summary>
        </member>
        <member name="T:MeetEdu.IReadOnlyDateCreatable">
            <summary>
            Provides abstractions for an object that has a creation date
            </summary>
        </member>
        <member name="P:MeetEdu.IReadOnlyDateCreatable.DateCreated">
            <summary>
            The creation date
            </summary>
        </member>
        <member name="T:MeetEdu.IDepartmentIdentifiable">
            <summary>
            Provides abstractions for an object that has a department id
            </summary>
        </member>
        <member name="P:MeetEdu.IDepartmentIdentifiable.DepartmentId">
            <summary>
            The department id
            </summary>
        </member>
        <member name="T:MeetEdu.IDepartmentIdentifiable`1">
            <summary>
            Provides abstractions for an object that has a department id
            </summary>
        </member>
        <member name="P:MeetEdu.IDepartmentIdentifiable`1.DepartmentId">
            <summary>
            The department id
            </summary>
        </member>
        <member name="P:MeetEdu.IDepartmentIdentifiable`1.MeetEdu#IDepartmentIdentifiable#DepartmentId">
            <summary>
            The company id
            </summary>
        </member>
        <member name="T:MeetEdu.IDescriptable">
            <summary>
            Provides abstractions for an object that has a description
            </summary>
        </member>
        <member name="P:MeetEdu.IDescriptable.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="T:MeetEdu.IEmailable">
            <summary>
            Provides abstractions for an object that has an assignable email
            </summary>
        </member>
        <member name="P:MeetEdu.IEmailable.Email">
            <summary>
            The email
            </summary>
        </member>
        <member name="T:MeetEdu.IFailable">
            <summary>
            Provides abstractions for an object that can fail its task
            </summary>
        </member>
        <member name="P:MeetEdu.IFailable.Success">
            <summary>
            The instance of the <see cref="T:MeetEdu.IFailable"/> that indicates a successful operation
            </summary>
        </member>
        <member name="P:MeetEdu.IFailable.OperationAborted">
            <summary>
            The instance of the <see cref="T:MeetEdu.IFailable"/> that is used for indicating an operation
            that was aborted with a hidden error
            </summary>
        </member>
        <member name="P:MeetEdu.IFailable.Exception">
            <summary>
            The exception that was thrown
            </summary>
        </member>
        <member name="P:MeetEdu.IFailable.ErrorType">
            <summary>
            The error type
            </summary>
        </member>
        <member name="P:MeetEdu.IFailable.ErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="P:MeetEdu.IFailable.IsSuccessful">
            <summary>
            A flag indicating whether the task was successful or not
            </summary>
        </member>
        <member name="M:MeetEdu.IFailable.FromException(System.Exception)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.IFailable"/> from the specified <paramref name="ex"/>
            </summary>
            <param name="ex">The exception</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.IFailable.FromErrorMessage(System.String)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.IFailable"/> from the specified <paramref name="errorMessage"/>
            </summary>
            <param name="errorMessage">The error message</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.IFailable.FromResult``1(``0)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.IFailable`1"/> that represents the specified <paramref name="result"/>
            </summary>
            <typeparam name="T">The type of the result</typeparam>
            <param name="result">The result</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.IFailable.FromException``1(System.Exception)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.IFailable`1"/> that represents the specified <paramref name="ex"/>
            </summary>
            <typeparam name="T">The type of the result</typeparam>
            <param name="ex">The exception</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.IFailable.FromErrorMessage``1(System.String)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.Failable`1"/> that represents the specified <paramref name="errorMessage"/>
            </summary>
            <typeparam name="T">The type of the result</typeparam>
            <param name="errorMessage">The error message</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.IFailable.FromAbortedOperation``1">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.IFailable`1"/> that represents an aborted operation
            </summary>
            <typeparam name="T">The type of the result</typeparam>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.IFailable`1">
            <summary>
            A <see cref="T:MeetEdu.IFailable"/> that contains a result
            </summary>
            <typeparam name="TResult">The type of the result</typeparam>
        </member>
        <member name="P:MeetEdu.IFailable`1.OperationAborted">
            <summary>
            The instance of the <see cref="T:MeetEdu.IFailable`1"/> that is used for indicating an operation
            that was aborted with a hidden error
            </summary>
        </member>
        <member name="P:MeetEdu.IFailable`1.Result">
            <summary>
            The result
            </summary>
        </member>
        <member name="T:MeetEdu.IIdentifiable">
            <summary>
            Provides abstractions for an object that can be identified
            </summary>
        </member>
        <member name="P:MeetEdu.IIdentifiable.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="T:MeetEdu.IIdentifiable`1">
            <summary>
            Provides abstractions for an object that can be identified
            </summary>
            <typeparam name="T">The type of the key</typeparam>
        </member>
        <member name="P:MeetEdu.IIdentifiable`1.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="P:MeetEdu.IIdentifiable`1.MeetEdu#IIdentifiable#Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="T:MeetEdu.ISourceIdentifiable">
            <summary>
            Provides abstractions for an object that has a source and an id
            </summary>
        </member>
        <member name="P:MeetEdu.ISourceIdentifiable.Source">
            <summary>
            The <see cref="P:MeetEdu.IIdentifiable.Id"/> of the object that was used for creating the embedded object
            </summary>
        </member>
        <member name="T:MeetEdu.ISourceIdentifiable`1">
            <summary>
            Provides abstractions for an object that has a source and an id
            </summary>
        </member>
        <member name="P:MeetEdu.ISourceIdentifiable`1.Source">
            <summary>
            The <see cref="P:MeetEdu.IIdentifiable.Id"/> of the object that was used for creating the embedded object
            </summary>
        </member>
        <member name="P:MeetEdu.ISourceIdentifiable`1.MeetEdu#ISourceIdentifiable#Source">
            <summary>
            The <see cref="P:MeetEdu.IIdentifiable.Id"/> of the object that was used for creating the embedded object
            </summary>
        </member>
        <member name="T:MeetEdu.IEmbeddableIdentifiable">
            <summary>
            Provides abstractions for an object that has a source and an id
            </summary>
        </member>
        <member name="T:MeetEdu.IEmbeddableIdentifiable`1">
            <summary>
            Provides abstractions for an object that has a source and an id
            </summary>
        </member>
        <member name="T:MeetEdu.IImageable">
            <summary>
            Provides abstractions for a model that provides URL for accessing an image
            </summary>
        </member>
        <member name="P:MeetEdu.IImageable.ImageUrl">
            <summary>
            The image URL
            </summary>
        </member>
        <member name="T:MeetEdu.IIncludable`1">
            <summary>
            Provides abstractions for an object that can include or exclude other objects based on identifiers
            </summary>
        </member>
        <member name="P:MeetEdu.IIncludable`1.Include">
            <summary>
            Limit the result set by including only resource with specific ids
            </summary>
        </member>
        <member name="P:MeetEdu.IIncludable`1.Exclude">
            <summary>
            Limit the result set by excluding resource with specific ids
            </summary>
        </member>
        <member name="P:MeetEdu.IIncludable`1.MeetEdu#IReadOnlyIncludable{T}#Include">
            <summary>
            Limit the result set by including only resource with specific ids
            </summary>
        </member>
        <member name="P:MeetEdu.IIncludable`1.MeetEdu#IReadOnlyIncludable{T}#Exclude">
            <summary>
            Limit the result set by excluding resource with specific ids
            </summary>
        </member>
        <member name="T:MeetEdu.IReadOnlyIncludable`1">
            <summary>
            Provides abstractions for an object that can include or exclude other objects based on identifiers
            </summary>
        </member>
        <member name="P:MeetEdu.IReadOnlyIncludable`1.Include">
            <summary>
            Limit the result set by including only resource with specific ids
            </summary>
        </member>
        <member name="P:MeetEdu.IReadOnlyIncludable`1.Exclude">
            <summary>
            Limit the result set by excluding resource with specific ids
            </summary>
        </member>
        <member name="T:MeetEdu.IMemberIdentifiable">
            <summary>
            Provides abstractions for an object that has a member id
            </summary>
        </member>
        <member name="P:MeetEdu.IMemberIdentifiable.MemberId">
            <summary>
            The member id
            </summary>
        </member>
        <member name="T:MeetEdu.IMemberIdentifiable`1">
            <summary>
            Provides abstractions for an object that has a member id
            </summary>
        </member>
        <member name="P:MeetEdu.IMemberIdentifiable`1.MemberId">
            <summary>
            The member id
            </summary>
        </member>
        <member name="P:MeetEdu.IMemberIdentifiable`1.MeetEdu#IMemberIdentifiable#MemberId">
            <summary>
            The member id
            </summary>
        </member>
        <member name="T:MeetEdu.INameable">
            <summary>
            Provides abstractions for a model that provides a name
            </summary>
        </member>
        <member name="P:MeetEdu.INameable.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="T:MeetEdu.INoteable">
            <summary>
            Provides abstractions for an object that can be noted
            </summary>
        </member>
        <member name="P:MeetEdu.INoteable.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="P:MeetEdu.INoteable.MeetEdu#IReadOnlyNoteable#Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="T:MeetEdu.IReadOnlyNoteable">
            <summary>
            Provides abstractions for an object with a note
            </summary>
        </member>
        <member name="P:MeetEdu.IReadOnlyNoteable.Note">
            <summary>
            The note
            </summary>
        </member>
        <member name="T:MeetEdu.IOffsetable">
            <summary>
            Provides abstractions for an object that can set its offset
            </summary>
        </member>
        <member name="P:MeetEdu.IOffsetable.Offset">
            <summary>
            The offset
            </summary>
        </member>
        <member name="P:MeetEdu.IOffsetable.MeetEdu#IReadOnlyOffsetable#Offset">
            <summary>
            The offset
            </summary>
        </member>
        <member name="T:MeetEdu.IReadOnlyOffsetable">
            <summary>
            Provides abstractions for an object with an offset
            </summary>
        </member>
        <member name="P:MeetEdu.IReadOnlyOffsetable.Offset">
            <summary>
            The offset
            </summary>
        </member>
        <member name="T:MeetEdu.IOrderable">
            <summary>
            Provides abstractions for an object that has assignable ordering rules
            </summary>
        </member>
        <member name="P:MeetEdu.IOrderable.Rules">
            <summary>
            The ordering rules
            </summary>
        </member>
        <member name="P:MeetEdu.IOrderable.MeetEdu#IReadOnlyOrderable#Rules">
            <summary>
            The ordering rules
            </summary>
        </member>
        <member name="T:MeetEdu.IReadOnlyOrderable">
            <summary>
            Provides abstractions for an object with ordering rules
            </summary>
        </member>
        <member name="P:MeetEdu.IReadOnlyOrderable.Rules">
            <summary>
            The order rules
            </summary>
        </member>
        <member name="T:MeetEdu.IPaginatable">
            <summary>
            Provides abstractions for an object that provides assignable pagination information
            </summary>
        </member>
        <member name="P:MeetEdu.IPaginatable.Page">
            <summary>
            The index of the page starting from 0.
            </summary>
        </member>
        <member name="P:MeetEdu.IPaginatable.PerPage">
            <summary>
            Maximum number of items to be returned in result set.
            </summary>
        </member>
        <member name="P:MeetEdu.IPaginatable.MeetEdu#IReadOnlyPaginatable#Page">
            <summary>
            The index of the page starting from 0.
            </summary>
        </member>
        <member name="P:MeetEdu.IPaginatable.MeetEdu#IReadOnlyPaginatable#PerPage">
            <summary>
            Maximum number of items to be returned in result set.
            </summary>
        </member>
        <member name="T:MeetEdu.IReadOnlyPaginatable">
            <summary>
            Provides abstractions for an object that contains pagination information
            </summary>
        </member>
        <member name="P:MeetEdu.IReadOnlyPaginatable.Page">
            <summary>
            The index of the page starting from 0.
            </summary>
        </member>
        <member name="P:MeetEdu.IReadOnlyPaginatable.PerPage">
            <summary>
            Maximum number of items to be returned in result set.
            </summary>
        </member>
        <member name="T:MeetEdu.IParentable`1">
            <summary>
            Provides abstractions for an object that has an assignable parent
            </summary>
        </member>
        <member name="P:MeetEdu.IParentable`1.Parent">
            <summary>
            The parent
            </summary>
        </member>
        <member name="P:MeetEdu.IParentable`1.MeetEdu#IReadOnlyParentable{T}#Parent">
            <summary>
            The parent
            </summary>
        </member>
        <member name="T:MeetEdu.IReadOnlyParentable`1">
            <summary>
            Provides abstractions for an object with a parent
            </summary>
        </member>
        <member name="P:MeetEdu.IReadOnlyParentable`1.Parent">
            <summary>
            The parent
            </summary>
        </member>
        <member name="T:MeetEdu.IPayable">
            <summary>
            Provides abstractions for an object that has assignable values that
            represent a payment
            </summary>
        </member>
        <member name="P:MeetEdu.IPayable.Amount">
            <summary>
            The amount
            </summary>
        </member>
        <member name="P:MeetEdu.IPayable.MeetEdu#IReadOnlyPayable#Amount">
            <summary>
            The amount
            </summary>
        </member>
        <member name="T:MeetEdu.IReadOnlyPayable">
            <summary>
            Provides abstractions for an object that has values that
            represent a payment
            </summary>
        </member>
        <member name="P:MeetEdu.IReadOnlyPayable.Amount">
            <summary>
            The amount
            </summary>
        </member>
        <member name="T:MeetEdu.IPhoneable">
            <summary>
            Provides abstractions for an object that has an assignable phone number
            </summary>
        </member>
        <member name="P:MeetEdu.IPhoneable.PhoneNumber">
            <summary>
            The phone number
            </summary>
        </member>
        <member name="T:MeetEdu.IProfessorIdentifiable">
            <summary>
            Provides abstractions for an object that has a professor id
            </summary>
        </member>
        <member name="P:MeetEdu.IProfessorIdentifiable.ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="T:MeetEdu.IProfessorIdentifiable`1">
            <summary>
            Provides abstractions for an object that has a professor id
            </summary>
        </member>
        <member name="P:MeetEdu.IProfessorIdentifiable`1.ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="P:MeetEdu.IProfessorIdentifiable`1.MeetEdu#IProfessorIdentifiable#ProfessorId">
            <summary>
            The professor id
            </summary>
        </member>
        <member name="T:MeetEdu.IReadOnlyRangeable`1">
            <summary>
            Provides abstractions for an object that has values that define a range
            </summary>
            <typeparam name="T">The type of the values</typeparam>
        </member>
        <member name="P:MeetEdu.IReadOnlyRangeable`1.Minimum">
            <summary>
            The minimum value
            </summary>
        </member>
        <member name="P:MeetEdu.IReadOnlyRangeable`1.Maximum">
            <summary>
            The maximum value
            </summary>
        </member>
        <member name="T:MeetEdu.ITotalDescriptable">
            <summary>
            Provides abstractions for an object that has a description and a small description
            </summary>
        </member>
        <member name="P:MeetEdu.ITotalDescriptable.SmallDescription">
            <summary>
            The small description
            </summary>
        </member>
        <member name="T:MeetEdu.IUniversityIdentifiable">
            <summary>
            Provides abstractions for an object that has a university id
            </summary>
        </member>
        <member name="P:MeetEdu.IUniversityIdentifiable.UniversityId">
            <summary>
            The university id
            </summary>
        </member>
        <member name="T:MeetEdu.IUniversityIdentifiable`1">
            <summary>
            Provides abstractions for an object that has a university id
            </summary>
        </member>
        <member name="P:MeetEdu.IUniversityIdentifiable`1.UniversityId">
            <summary>
            The university id
            </summary>
        </member>
        <member name="P:MeetEdu.IUniversityIdentifiable`1.MeetEdu#IUniversityIdentifiable#UniversityId">
            <summary>
            The company id
            </summary>
        </member>
        <member name="T:MeetEdu.IUserIdentifiable">
            <summary>
            Provides abstractions for an object that has a user id
            </summary>
        </member>
        <member name="P:MeetEdu.IUserIdentifiable.UserId">
            <summary>
            The user id
            </summary>
        </member>
        <member name="T:MeetEdu.IUserIdentifiable`1">
            <summary>
            Provides abstractions for an object that has a user id
            </summary>
        </member>
        <member name="P:MeetEdu.IUserIdentifiable`1.UserId">
            <summary>
            The user id
            </summary>
        </member>
        <member name="P:MeetEdu.IUserIdentifiable`1.MeetEdu#IUserIdentifiable#UserId">
            <summary>
            The user id
            </summary>
        </member>
        <member name="T:MeetEdu.IVectorImageable">
            <summary>
            Provides abstractions for an object that presents a vector image
            </summary>
        </member>
        <member name="P:MeetEdu.IVectorImageable.VectorSource">
            <summary>
            The source of the image
            </summary>
        </member>
        <member name="T:MeetEdu.IIconPathDatable">
            <summary>
            Provides abstractions for an object that presents an icon path
            </summary>
        </member>
        <member name="P:MeetEdu.IIconPathDatable.IconPathData">
            <summary>
            The icon path data
            </summary>
        </member>
        <member name="T:MeetEdu.Pages.ErrorModel">
            <summary>
            The error model
            </summary>
        </member>
        <member name="P:MeetEdu.Pages.ErrorModel.RequestId">
            <summary>
            The request id
            </summary>
        </member>
        <member name="P:MeetEdu.Pages.ErrorModel.ShowRequestId">
            <summary>
            A flag indicating whether the request id is visible or not
            </summary>
        </member>
        <member name="F:MeetEdu.Pages.ErrorModel._logger">
            <summary>
            The logger
            </summary>
        </member>
        <member name="M:MeetEdu.Pages.ErrorModel.#ctor(Microsoft.Extensions.Logging.ILogger{MeetEdu.Pages.ErrorModel})">
            <summary>
            Default constructor
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:MeetEdu.Pages.ErrorModel.OnGet">
            <summary>
            On get
            </summary>
        </member>
        <member name="T:MeetEdu.Index">
            <summary>
            The main page
            </summary>
        </member>
        <member name="P:MeetEdu.Index.SearchText">
            <summary>
            The search text
            </summary>
        </member>
        <member name="M:MeetEdu.Index.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.SearchPage">
            <summary>
            The search page
            </summary>
        </member>
        <member name="P:MeetEdu.SearchPage.SearchText">
            <summary>
            The search text
            </summary>
        </member>
        <member name="M:MeetEdu.SearchPage.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.AccountsRepository">
            <summary>
            The manager for the accounts
            </summary>
        </member>
        <member name="P:MeetEdu.AccountsRepository.Instance">
            <summary>
            The single instance of the <see cref="T:MeetEdu.AccountsRepository"/>
            </summary>
        </member>
        <member name="M:MeetEdu.AccountsRepository.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.AccountsRepository.LoginAsync(MeetEdu.LogInRequestModel)">
            <summary>
            Validates the user credentials sent by the user and returns the user
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.AccountsRepository.ValidateUserCredentialsAsync(MeetEdu.LogInRequestModel)">
            <summary>
            Validates the user <paramref name="credentials"/>
            </summary>
            <param name="credentials">The credentials</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.AppointmentsRepository">
            <summary>
            Provides methods for managing appointments
            </summary>
        </member>
        <member name="P:MeetEdu.AppointmentsRepository.Instance">
            <summary>
            The single instance of the <see cref="T:MeetEdu.AppointmentsRepository"/>
            </summary>
        </member>
        <member name="M:MeetEdu.AppointmentsRepository.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.AppointmentsRepository.AddAppointmentAsync(MeetEdu.AppointmentRequestModel,System.Threading.CancellationToken)">
            <summary>
            Adds an appointment
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.AppointmentsRepository.UpdateAppointmentAsync(MongoDB.Bson.ObjectId,MeetEdu.AppointmentRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the appointment with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.AppointmentsRepository.DeleteAppointmentAsync(MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Deletes the appointment with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.AppointmentsRepository.AddAppointmentRuleAsync(MeetEdu.AppointmentRuleRequestModel,System.Threading.CancellationToken)">
            <summary>
            Adds an appointment rule
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.AppointmentsRepository.UpdateAppointmentRuleAsync(MongoDB.Bson.ObjectId,MeetEdu.AppointmentRuleRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the appointment rule with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.AppointmentsRepository.DeleteAppointmentRuleAsync(MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Deletes the appointment rule with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.DepartmentsRepository">
            <summary>
            Provides methods for managing departments
            </summary>
        </member>
        <member name="P:MeetEdu.DepartmentsRepository.Instance">
            <summary>
            The single instance of the <see cref="T:MeetEdu.DepartmentsRepository"/>
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.AddDepartmentAsync(MeetEdu.DepartmentRequestModel,System.Threading.CancellationToken)">
            <summary>
            Adds a department
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.UpdateDepartmentAsync(MongoDB.Bson.ObjectId,MeetEdu.DepartmentRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the department with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.DeleteDepartmentAsync(MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Deletes the department with the specified <paramref name="id"/>
            </summary>
            <param name="id">The department id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.AddDepartmentLabelAsync(MongoDB.Bson.ObjectId,MeetEdu.LabelRequestModel,System.Threading.CancellationToken)">
            <summary>
            Add a department label
            </summary>
            <param name="departmentId">The department id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.UpdateDepartmentLabelAsync(MongoDB.Bson.ObjectId,MeetEdu.LabelRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the department with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.DeleteDepartmentLabelAsync(MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Deletes the department label with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.AddDepartmentContactMessageAsync(MongoDB.Bson.ObjectId,MeetEdu.DepartmentContactMessageRequestModel,System.Threading.CancellationToken)">
            <summary>
            Add a department contact message 
            </summary>
            <param name="departmentId">The department id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.UpdateDepartmentContactMessageAsync(MongoDB.Bson.ObjectId,MeetEdu.DepartmentContactMessageRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the contact message with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.DeleteDepartmentContactMessageAsync(MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Deletes the department contact message with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.AddDepartmentLayoutAsync(MongoDB.Bson.ObjectId,MeetEdu.DepartmentLayoutRequestModel,System.Threading.CancellationToken)">
            <summary>
            Add a department layout
            </summary>
            <param name="departmentId">The department id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.UpdateDepartmentLayoutAsync(MongoDB.Bson.ObjectId,MeetEdu.DepartmentLayoutRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the layout with the specified <paramref name="layoutId"/>
            </summary>
            <param name="layoutId">The layout id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.DeleteDepartmentLayoutAsync(MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Deletes the department layout with the specified <paramref name="layoutId"/>
            </summary>
            <param name="layoutId">The layout id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.AddDepartmentLayoutRoomAsync(MongoDB.Bson.ObjectId,MeetEdu.DepartmentLayoutRoomDataModel,System.Threading.CancellationToken)">
            <summary>
            Add a department layout room
            </summary>
            <param name="layoutId">The layout id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.AddDepartmentLayoutRoomsAsync(MongoDB.Bson.ObjectId,System.Collections.Generic.IEnumerable{MeetEdu.DepartmentLayoutRoomDataModel},System.Threading.CancellationToken)">
            <summary>
            Add a list of rooms to the department layout 
            </summary>
            <param name="layoutId">The layout id</param>
            <param name="models">The models</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.UpdateDepartmentLayoutRoomsAsync(MongoDB.Bson.ObjectId,System.Collections.Generic.IEnumerable{MeetEdu.DepartmentLayoutRoomDataModel},System.Threading.CancellationToken)">
            <summary>
            Replaces the layout rooms with the specified <paramref name="models"/>
            of the department layout with the specified <paramref name="layoutId"/>
            </summary>
            <param name="layoutId">The layout id</param>
            <param name="models">The models</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.DeleteDepartmentLayoutRoomsAsync(MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Deletes the department layout rooms 
            from the department layout with the specified <paramref name="layoutId"/>
            </summary>
            <param name="layoutId">The layout id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.DepartmentsRepository.ExecuteAgainstDepartmentLayoutAsync(MongoDB.Bson.ObjectId,System.Func{MeetEdu.DepartmentLayoutEntity,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Executes the specified <paramref name="action"/> against the layout with the specified <paramref name="layoutId"/>
            </summary>
            <param name="layoutId">The layout id</param>
            <param name="action">The action</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.UniversitiesRepository">
            <summary>
            Provides methods for managing universities
            </summary>
        </member>
        <member name="P:MeetEdu.UniversitiesRepository.Instance">
            <summary>
            The single instance of the <see cref="T:MeetEdu.UniversitiesRepository"/>
            </summary>
        </member>
        <member name="M:MeetEdu.UniversitiesRepository.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.UniversitiesRepository.AddUniversityAsync(MeetEdu.UniversityRequestModel,System.Threading.CancellationToken)">
            <summary>
            Adds a university
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.UniversitiesRepository.UpdateUniversityAsync(MongoDB.Bson.ObjectId,MeetEdu.UniversityRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the university with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.UniversitiesRepository.DeleteUniversityAsync(MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Deletes the university with the specified <paramref name="id"/>
            </summary>
            <param name="id">The university id</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.UniversitiesRepository.AddUniversityLabelAsync(MongoDB.Bson.ObjectId,MeetEdu.LabelRequestModel,System.Threading.CancellationToken)">
            <summary>
            Add a university label
            </summary>
            <param name="universitiesId">The university id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.UniversitiesRepository.UpdateUniversityLabelAsync(MongoDB.Bson.ObjectId,MeetEdu.LabelRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the university with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.UniversitiesRepository.DeleteUniversityLabelAsync(MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Deletes the university label with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.MeetEduUserManager">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1"/> implementation that is used by the Atom framework
            </summary>
        </member>
        <member name="P:MeetEdu.MeetEduUserManager.EmailTokenProvider">
            <summary>
            The token provider used for generating 6 digit verification tokens
            </summary>
        </member>
        <member name="M:MeetEdu.MeetEduUserManager.#ctor(Microsoft.AspNetCore.Identity.IUserStore{MeetEdu.UserEntity},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.AspNetCore.Identity.IPasswordHasher{MeetEdu.UserEntity},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{MeetEdu.UserEntity}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{MeetEdu.UserEntity}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{MeetEdu.UserEntity}})">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.MeetEduUserManager.GeneratePasswordResetTokenAsync(MeetEdu.UserEntity)">
            <summary>
            Generates a password reset token for the specified user, using the configured
            password reset token provider.
            </summary>
            <param name="user">The user to generate a password reset token for.</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduUserManager.GenerateEmailConfirmationTokenAsync(MeetEdu.UserEntity)">
            <summary>
            Generates an email confirmation token for the specified user.
            </summary>
            <param name="user">The user to generate an email confirmation token for.</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduUserManager.VerifyUserTokenAsync(MeetEdu.UserEntity,System.String,System.String,System.String)">
            <summary>
            Returns a flag indicating whether the specified token is valid for the given
            user and purpose.
            </summary>
            <param name="user">The user to validate the token against.</param>
            <param name="tokenProvider">The token provider used to generate the token.</param>
            <param name="purpose">The purpose the token should be generated for.</param>
            <param name="token">The token to validate</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MeetEduUserManager.ChangePasswordAsync(MeetEdu.UserEntity,System.String)">
            <summary>
            Changes the password of the specified user
            </summary>
            <param name="user">The user</param>
            <param name="newPassword">The new password</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.MembersRepository">
            <summary>
            Provides methods for managing members
            </summary>
        </member>
        <member name="P:MeetEdu.MembersRepository.Instance">
            <summary>
            The single instance of the <see cref="T:MeetEdu.MembersRepository"/>
            </summary>
        </member>
        <member name="M:MeetEdu.MembersRepository.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.MembersRepository.AddMemberAsync(MeetEdu.MemberRequestModel)">
            <summary>
            Adds a member
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MembersRepository.UpdateMemberAsync(MongoDB.Bson.ObjectId,MeetEdu.UserRequestModel)">
            <summary>
            Updates the member with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MembersRepository.DeleteMemberAsync(MongoDB.Bson.ObjectId)">
            <summary>
            Deletes the member with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MembersRepository.AddMemberSavedDpartmentAsync(MongoDB.Bson.ObjectId,MongoDB.Bson.ObjectId)">
            <summary>
            Adds the professor with the specified <paramref name="departmentId"/> as a saved professor to the member with the specified <paramref name="memberId"/>
            </summary>
            <param name="memberId">The member id</param>
            <param name="departmentId">The professor id</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MembersRepository.DeleteMemberSavedDepartmentAsync(MongoDB.Bson.ObjectId)">
            <summary>
            Deletes the member saved department with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MembersRepository.AddMemberSavedProfessorAsync(MongoDB.Bson.ObjectId,MongoDB.Bson.ObjectId)">
            <summary>
            Adds the professor with the specified <paramref name="professorId"/> as a saved professor to the member with the specified <paramref name="memberId"/>
            </summary>
            <param name="memberId">The member id</param>
            <param name="professorId">The professor id</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.MembersRepository.DeleteMemberFavoriteProfessorAsync(MongoDB.Bson.ObjectId)">
            <summary>
            Deletes the member saved professor with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.ProfessorsRepository">
            <summary>
            Provides methods for managing professors
            </summary>
        </member>
        <member name="P:MeetEdu.ProfessorsRepository.Instance">
            <summary>
            The single instance of the <see cref="T:MeetEdu.ProfessorsRepository"/>
            </summary>
        </member>
        <member name="M:MeetEdu.ProfessorsRepository.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.ProfessorsRepository.AddProfessorAsync(MeetEdu.ProfessorRequestModel,System.Threading.CancellationToken)">
            <summary>
            Adds a professor
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ProfessorsRepository.UpdateProfessorAsync(MongoDB.Bson.ObjectId,MeetEdu.ProfessorRequestModel,MeetEdu.UserRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the professor with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="professor">The professor</param>
            <param name="user">The user</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.ProfessorsRepository.DeleteProfessorAsync(MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Deletes the professor with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.SecretariesRepository">
            <summary>
            Provides methods for managing secretaries
            </summary>
        </member>
        <member name="P:MeetEdu.SecretariesRepository.Instance">
            <summary>
            The single instance of the <see cref="T:MeetEdu.SecretariesRepository"/>
            </summary>
        </member>
        <member name="M:MeetEdu.SecretariesRepository.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.SecretariesRepository.AddSecretaryAsync(MeetEdu.SecretaryRequestModel,System.Threading.CancellationToken)">
            <summary>
            Adds a secretary
            </summary>
            <param name="model">The model</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.SecretariesRepository.UpdateSecretaryAsync(MongoDB.Bson.ObjectId,MeetEdu.SecretaryRequestModel,MeetEdu.UserRequestModel,System.Threading.CancellationToken)">
            <summary>
            Updates the secretary with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="secretary">The secretary</param>
            <param name="user">The user</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.SecretariesRepository.DeleteSecretaryAsync(MongoDB.Bson.ObjectId,System.Threading.CancellationToken)">
            <summary>
            Deletes the secretary with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.UsersRepository">
            <summary>
            Provides methods for managing users
            </summary>
        </member>
        <member name="P:MeetEdu.UsersRepository.Instance">
            <summary>
            The single instance of the <see cref="T:MeetEdu.UsersRepository"/>
            </summary>
        </member>
        <member name="M:MeetEdu.UsersRepository.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.UsersRepository.AddUserAsync(MeetEdu.UserRequestModel)">
            <summary>
            Adds a user
            </summary>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.UsersRepository.UpdateUserAsync(MongoDB.Bson.ObjectId,MeetEdu.UserRequestModel)">
            <summary>
            Updates the user with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <param name="model">The model</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.UsersRepository.DeleteUserAsync(MongoDB.Bson.ObjectId)">
            <summary>
            Deletes the user with the specified <paramref name="id"/>
            </summary>
            <param name="id">The id</param>
            <returns></returns>
        </member>
        <member name="T:MeetEdu.Shared.MainLayout">
            <summary>
            The main layout
            </summary>
        </member>
        <member name="F:MeetEdu.Shared.MainLayout.mMeetEduTheme">
            <summary>
            The theme provider
            </summary>
        </member>
        <member name="M:MeetEdu.Shared.MainLayout.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.WebServerFailable">
            <summary>
            An implementation of the <see cref="T:MeetEdu.IFailable"/> used by the services of the web server
            </summary>
        </member>
        <member name="F:MeetEdu.WebServerFailable.mException">
            <summary>
            The member of the <see cref="P:MeetEdu.WebServerFailable.Exception"/> property
            </summary>
        </member>
        <member name="F:MeetEdu.WebServerFailable.mErrorMessage">
            <summary>
            The member of the <see cref="P:MeetEdu.WebServerFailable.ErrorMessage"/> property
            </summary>
        </member>
        <member name="P:MeetEdu.WebServerFailable.Exception">
            <summary>
            The exception that was thrown
            </summary>
        </member>
        <member name="P:MeetEdu.WebServerFailable.ErrorType">
            <summary>
            The error type
            </summary>
        </member>
        <member name="P:MeetEdu.WebServerFailable.ErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="P:MeetEdu.WebServerFailable.IsSuccessful">
            <summary>
            A flag indicating whether the task was successful or not
            </summary>
        </member>
        <member name="P:MeetEdu.WebServerFailable.StatusCode">
            <summary>
            The status code
            </summary>
        </member>
        <member name="M:MeetEdu.WebServerFailable.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.WebServerFailable.#ctor(System.Exception)">
            <summary>
            Exception based constructor
            </summary>
            <param name="ex">The exception</param>
        </member>
        <member name="M:MeetEdu.WebServerFailable.FromResult``1(``0)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.WebServerFailable`1"/> that
            represents the specified <paramref name="result"/>
            </summary>
            <typeparam name="T">The type of the result</typeparam>
            <param name="result">The result</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.WebServerFailable.NotFound(System.String,System.String)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.WebServerFailable`1"/> indicating
            that a resource was not found
            </summary>
            <param name="itemId">The id of the item that was searched</param>
            <param name="itemsName">The name of the items</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.WebServerFailable.NotFound(MongoDB.Bson.ObjectId,System.String)">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.WebServerFailable`1"/> indicating
            that a resource was not found
            </summary>
            <param name="itemId">The id of the item that was searched</param>
            <param name="itemsName">The name of the items</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.WebServerFailable.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.WebServerFailable.op_Implicit(System.String)~MeetEdu.WebServerFailable">
            <summary>
            Creates a <see cref="T:MeetEdu.WebServerFailable"/> using the specified string as its error message
            </summary>
            <param name="s">The string</param>
        </member>
        <member name="M:MeetEdu.WebServerFailable.op_Implicit(System.Exception)~MeetEdu.WebServerFailable">
            <summary>
            Creates a <see cref="T:MeetEdu.WebServerFailable"/> using the message of the specified ex and its inner exceptions
            as its error message
            </summary>
            <param name="ex">The exception</param>
        </member>
        <member name="T:MeetEdu.WebServerFailable.UnsuccessfulWebServerFailable">
            <summary>
            A <see cref="T:MeetEdu.WebServerFailable"/> used when the operation was unsuccessful
            </summary>
        </member>
        <member name="M:MeetEdu.WebServerFailable.UnsuccessfulWebServerFailable.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:MeetEdu.WebServerFailable`1">
            <summary>
            An implementation of the <see cref="T:MeetEdu.IFailable`1"/> used by the web server services
            </summary>
            <typeparam name="TResult">The type of the result</typeparam>
        </member>
        <member name="P:MeetEdu.WebServerFailable`1.Result">
            <summary>
            The result
            </summary>
        </member>
        <member name="M:MeetEdu.WebServerFailable`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:MeetEdu.WebServerFailable`1.#ctor(`0)">
            <summary>
            Result based constructor
            </summary>
            <param name="result">The result</param>
        </member>
        <member name="M:MeetEdu.WebServerFailable`1.#ctor(System.Exception)">
            <summary>
            Exception based constructor
            </summary>
            <param name="ex">The exception</param>
        </member>
        <member name="M:MeetEdu.WebServerFailable`1.ToString">
            <summary>
            Returns a string that represents the current object
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.WebServerFailable`1.ToObjectResult">
            <summary>
            Creates and returns an <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> that represents the 
            current <see cref="T:MeetEdu.WebServerFailable"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.WebServerFailable`1.op_Implicit(System.String)~MeetEdu.WebServerFailable{`0}">
            <summary>
            Creates a <see cref="T:MeetEdu.WebServerFailable`1"/> using the specified string as its error message
            </summary>
            <param name="s">The string</param>
        </member>
        <member name="M:MeetEdu.WebServerFailable`1.op_Implicit(System.Exception)~MeetEdu.WebServerFailable{`0}">
            <summary>
            Creates a <see cref="T:MeetEdu.WebServerFailable`1"/> using the message of the specified ex and its inner exceptions
            as its error message
            </summary>
            <param name="ex">The exception</param>
        </member>
        <member name="M:MeetEdu.WebServerFailable`1.op_Implicit(`0)~MeetEdu.WebServerFailable{`0}">
            <summary>
            Creates a <see cref="T:MeetEdu.WebServerFailable`1"/> using the specified result as its result
            </summary>
            <param name="result">The result</param>
        </member>
        <member name="M:MeetEdu.WebServerFailable`1.op_Implicit(MeetEdu.WebServerFailable.UnsuccessfulWebServerFailable)~MeetEdu.WebServerFailable{`0}">
            <summary>
            Creates a <see cref="T:MeetEdu.WebServerFailable`1"/> from the specified <paramref name="failable"/>
            </summary>
        </member>
        <member name="M:MeetEdu.WebServerFailable`1.op_Implicit(MeetEdu.WebServerFailable{`0})~Microsoft.AspNetCore.Mvc.ActionResult{`0}">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult`1"/> using the specified <paramref name="result"/>
            </summary>
            <param name="result">The result</param>
        </member>
        <member name="T:MeetEdu.WebServerFailableExtensions">
            <summary>
            Extension methods for <see cref="T:MeetEdu.WebServerFailable`1"/>
            </summary>
        </member>
        <member name="M:MeetEdu.WebServerFailableExtensions.ToActionResult``2(MeetEdu.WebServerFailable{``0},System.Func{``0,``1})">
            <summary>
            Creates and returns a <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that represents the specified <paramref name="failable"/>
            </summary>
            <typeparam name="TResult">The initial type of the result of the failable</typeparam>
            <typeparam name="TOtherResult">The projected type of the result of the failable</typeparam>
            <param name="failable">The failable</param>
            <param name="projector">The projector</param>
            <returns></returns>
        </member>
        <member name="M:MeetEdu.WebServerFailableExtensions.ToUnsuccessfulWebServerFailable(MeetEdu.WebServerFailable,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates and returns a <see cref="T:MeetEdu.WebServerFailable.UnsuccessfulWebServerFailable"/> from the <paramref name="failable"/>
            </summary>
            <param name="failable">The failable</param>
            <param name="customErrorMessage">The custom error message</param>
            <param name="customStatusCode">The custom status code</param>
            <returns></returns>
        </member>
    </members>
</doc>
