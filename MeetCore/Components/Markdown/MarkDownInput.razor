@using static MeetBase.Blazor.PaletteColors
@using static MeetBase.Blazor.CssVariables

@using static MeetBase.Blazor.Personalization

@namespace MeetCore

<div class="textContainer" id="@Id">
    @if (mIsTextReadOnly)
    {
        <MarkdownBlock Text="@Text" CssClass="textMarkDownContainer" />
        <span class="textDivider"></span>
    }
    else
    {
        <MudTextField T="string" Placeholder="@Placeholder"
                        FullWidth="true"
                        Variant="Variant.Text"
                        ReadOnly="@mIsTextReadOnly"
                        Lines="@Lines"
                        @bind-Text="@mInputText" />
    }
    
    <EditToOptionsButton Alignment="Alignment.Horizontal"
                         HasOverlay="false"
                         EditButton="@(new(White, EditButtonColor ?? Amber, IconPaths.PencilOutlinePath, EventCallback.Factory.Create(this, () => EditButton_OnClick())))"
                         OptionButtons="@(new List<OptionButton>()
                                            {
                                                new(White, Green, IconPaths.CheckPath, EventCallback.Factory.Create(this, () => SaveButton_Onclick())),
                                                new(White, Red, IconPaths.ClosePath, EventCallback.Factory.Create(this, () => CancelButton_Onclick()))
                                            })" />
    

    @ChildContent
</div>

<style>

    .textMarkDownContainer {
        width: 100%;
        min-height: 124px;
        font-size: 1rem;
        padding: 21px 0;
    }

    .textDivider {
        width: 100%;
        height: 0px;
        border-bottom: solid 1px @LightGray.NormalizedColor();
        border-style: dashed;
    }

</style>