@using static MeetBase.Blazor.PaletteColors
@using static MeetBase.Blazor.CssVariables

@using static MeetBase.Blazor.Personalization

@namespace MeetCore

<MudDialog>
    <DialogContent>
        @if(Model is not null)
        {
            <div class="dialogSection">
                <span class="dialogSectionText">Update Department</span>
            </div>
            <div class="dialogContentContainer">
                <span class="dialogContentTitle dialogContentFullRow" style="padding:inherit;">Department info</span>
                <MudTextField @bind-Value="@Model.Model!.Name"
                              Placeholder="Name"
                              Class="dialogContentFullRow dialogInput"
                              FullWidth="true"
                              Variant="Variant.Text"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@MudIconPaths.Account" />
                <MudSelect T="DepartmentType" @bind-Value="@mCategory"
                           Placeholder="Category"
                           Class="dialogInput"
                           FullWidth="true"
                           Variant="Variant.Text"
                           Adornment="Adornment.Start"
                           AdornmentIcon="@MudIconPaths.Account"
                           AnchorOrigin="Origin.BottomCenter">
                    @foreach (var value in Enum.GetValues<DepartmentType>())
                    {
                        <MudSelectItem Value="@value">@value</MudSelectItem>
                    }
                </MudSelect>
                <MudColorPicker Placeholder="Color" @bind-Text="@Model.Model.Color"
                                Style="@($"color: {Model.Model.Color.NormalizedColor()};")"
                                DisableModeSwitch="false"
                                DisableToolbar="false"
                                Class="dialogInput colorInput"
                                Adornment="@Adornment.Start"
                                AdornmentIcon="@Icons.Material.Filled.Palette"
                                PickerVariant="PickerVariant.Inline"
                                DisableAlpha="true" />
                <MudTextField @bind-Value="@Model.Model.Email"
                              Placeholder="Email"
                              Class="dialogContentFullRow dialogInput"
                              FullWidth="true"
                              Variant="Variant.Text"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@MudIconPaths.Email" />

                <div class="dialogPhoneNumberInputsContainer">
                    <MudTextField @bind-Value="@mCountryCode"
                                  Placeholder="CC"
                                  Class="dialogInput"
                                  FullWidth="true"
                                  Variant="Variant.Text"
                                  Adornment="Adornment.Start"
                                  AdornmentIcon="@MudIconPaths.Plus" />
                    <MudTextField @bind-Value="@mPhoneNumber"
                                  Placeholder="Phone number"
                                  Class="dialogInput"
                                  FullWidth="true"
                                  Variant="Variant.Text"
                                  Adornment="Adornment.Start"
                                  AdornmentIcon="@MudIconPaths.Phone" />
                </div>
                <MudFileUpload T="IBrowserFile" Accept=".png, .jpg" FilesChanged="@((e) => mFile = e)" Class="dialogContentPhotoContainer">
                    <ButtonTemplate>
                        <MudButton HtmlTag="label"
                                   Variant="Variant.Text"
                                   Class="mud-input mud-input-underline dialogInput"
                                   StartIcon="@Icons.Material.Filled.Image"
                                   for="@context">
                            @mPhotoLabel
                        </MudButton>
                    </ButtonTemplate>
                    <SelectedTemplate>
                        @if (context != null)
                        {
                            mPhotoLabel = context.Name;
                        }
                    </SelectedTemplate>
                </MudFileUpload>

                <span class="dialogContentTitle dialogContentFullRow">Quote</span>
                <MudTextField T="string" Placeholder="Write a quote that defines the department" Class="dialogContentFullRow" Variant="Variant.Text" @bind-Text="@Model.Model!.Quote" Lines="3" />

                <span class="dialogContentTitle dialogContentFullRow">Websites</span>

                @foreach (var website in mWebsites)
                {
                    <div class="professorWebsiteInputsAndButtonContainer dialogContentFullRow" @key="@website">
                        <div class="professorWebsiteInputsContainer dialogContentContainer" style="overflow-y:clip; padding: 0;">
                            <MudTextField @bind-Value="@website.Name"
                                          Placeholder="Name"
                                          Class="dialogContentFullRow dialogInput"
                                          FullWidth="true"
                                          Variant="Variant.Text"
                                          Adornment="Adornment.Start"
                                          AdornmentIcon="@MudIconPaths.AbjadArabic" />
                            <MudTextField T="Uri" @bind-Value="@website.Link"
                                          Converter="@(new MudBlazor.Converter<Uri>() { SetFunc = value => value?.ToString(), GetFunc = text => !text.IsNullOrEmpty() ? new Uri(text) : null })"
                                          Placeholder="Link"
                                          Class="dialogContentFullRow dialogInput"
                                          FullWidth="true"
                                          Variant="Variant.Text"
                                          Adornment="Adornment.Start"
                                          AdornmentIcon="@MudIconPaths.AbjadArabic" />
                        </div>

                        <IconButton VectorSource="@IconPaths.TrashCanOutlinePath"
                                    ForeColor="@Red"
                                    BackColor="transparent"
                                    BorderRadius="@SmallBorderRadius"
                                    BoxShadow="none"
                                    CssClasses="websiteDeleteButton"
                                    OnClick="@(() => mWebsites.Remove(website))" />
                    </div>
                }
                <span class="dialogContentTitle dialogContentFullRow">Location info</span>
                <div class="dialogLocationGrid dialogContentFullRow " style="padding:0">
                    <div class="dialogLocationMapContainer dialogContentFullRow">
                        <LocationPointer MapId="updateDepartmentMap" Color="@Model.Model?.Color" @bind-Location="@mLocation"/>
                    </div>
                </div>
            </div>
        }
    </DialogContent>
    <DialogActions>
        <div class="dialogActionsContainer">
            <MudButton Variant="Variant.Text" Color="Color.Error" OnClick="@Cancel" Class="px-10">Cancel</MudButton>
            <MudButton Variant="Variant.Text" Color="Color.Success" OnClick="@Save" Class="px-10">Save</MudButton>
        </div>
    </DialogActions>
</MudDialog>

<style>
    
    .dialogSection {
        background-color: @Model.Model!.Color.NormalizedColor();
        color: @Model.Model.Color.DarkOrWhite().NormalizedColor();
    }

    .colorInput .mud-input-adornment-start:after {
        background-color: @Model.Model.Color.NormalizedColor();
        border-radius: @NormalBorderRadius;
    }

    .updateDepartmentMap {
        position: relative;
        width: 100%;
        height: 280px;
        border-radius: @LargeBorderRadius;
        border: solid 1px @LightGray.NormalizedColor();
    }

    .professorWebsiteInputsAndButtonContainer {
        display: flex;
        justify-content: center;
        align-items: end;
        gap: 0.5rem;
    }

    .websiteDeleteButton {
        width: 48px;
        height: 48px;
        padding: 0.5rem;
    }

</style>
