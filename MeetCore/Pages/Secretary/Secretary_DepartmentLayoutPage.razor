@page "/secretaries/{Id}/layout"

@inherits BasePage

@using static MeetBase.Blazor.PaletteColors
@using static MeetBase.Blazor.CssVariables

@using static MeetBase.Blazor.Personalization

@namespace MeetCore

<PageTitle>@EnglishLocalization.Layout</PageTitle>

<ApplicationContainer>

    @if(!mLayoutId.IsNullOrEmpty())
    {
        <div class="layoutDescription">
            @if(mIsLayoutDescripitonReadOnly)
            {
                @((MarkupString)Markdig.Markdown.ToHtml(mLayoutDescription))
                <MudDivider DividerType="DividerType.Middle" Class="my-6 divider" />
            }
            else
            {
                <MudTextField T="string" Placeholder="The department layout's additional information" 
                              FullWidth="true" 
                              Variant="Variant.Text" 
                              ReadOnly="@mIsLayoutDescripitonReadOnly"
                              @bind-Text="@mLayoutDescriptionInput" 
                              Lines="5" />
            }

            <div class="layoutEditDescriptionButtonsContainer">
                @if(mIsLayoutDescripitonReadOnly)
                {
                    <IconButton BackColor="@White"
                                ForeColor="@Amber"
                                BorderRadius="@LargeBorderRadius"
                                VectorSource="@IconPaths.PencilOutlinePath"
                                OnClick="@(() => mIsLayoutDescripitonReadOnly = false)"
                                CssClasses="layoutButton" />
                }
                else 
                {
                    <IconButton BackColor="@White"
                                ForeColor="@Green"
                                BorderRadius="@LargeBorderRadius"
                                VectorSource="@IconPaths.CheckPath"
                                OnClick="@SaveButton_Onclick"
                                CssClasses="layoutButton" />
                    <IconButton BackColor="@White"
                                ForeColor="@Persimmon"
                                BorderRadius="@LargeBorderRadius"
                                VectorSource="@IconPaths.ClosePath"
                                OnClick="@(() => {mIsLayoutDescripitonReadOnly = true; mLayoutDescriptionInput = string.Empty; })"
                                CssClasses="layoutButton" />
                }
            </div>
        </div>
    }

    @foreach (var layoutRoom in mLayoutRooms)
    {
        <LayoutPresenter LayoutRoom="@layoutRoom" IsEditable="true" EditButtonClicked="@UpdateLayout" />
    }
</ApplicationContainer>

<IconButton BackColor="@White"
            ForeColor="@Amber"
            VectorSource="@IconPaths.PlusPath"
            BorderRadius="@CircleBorderRadius"
            OnClick="@AddButton_Onclick"
            CssClasses="layoutButton layoutAddButton" />

<style>
    .layoutDescription {
        position: relative;
        width: 100%;
        height: auto;
        min-height: 200px;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: @XXLargePadding;
    }

    .layoutButton {
        width: 3rem;
        height: 3rem;
        padding: 8px;
        cursor: pointer;
    }

    .layoutAddButton {
        position: absolute;
        bottom: @XXLargePadding;
        right: @XXLargePadding;
    }

    .layoutEditDescriptionButtonsContainer {
        position: absolute;
        top: @XXLargePadding;
        right: @XXLargePadding;
        display: flex;
    }

    .divider {
        position: absolute;
        bottom: 0;
        width: 92%;
    }

</style>