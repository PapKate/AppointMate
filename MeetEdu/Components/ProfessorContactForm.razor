@using static MeetBase.Blazor.PaletteColors
@using static MeetBase.Blazor.CssVariables
@using static MeetBase.Blazor.Personalization

@namespace MeetEdu

@if (FormTemplate is not null && !AppointmentRules.IsNullOrEmpty())
{
    <div class="contactFormContainer">
        <div class="contactFormInputsContainer @mFormCssClass">
            <MudSelect T="AppointmentRuleResponseModel"
                       @bind-Value="@mRule"
                       Placeholder="Type"
                       Class="formInput"
                       FullWidth="true"
                       AnchorOrigin="Origin.BottomCenter">
                @foreach(var rule in AppointmentRules)
                {
                    <MudSelectItem Value="@rule">@rule.Name</MudSelectItem>
                }
            </MudSelect>

            <MudTextField @bind-Value="@mAppointment.FirstName"
                          Placeholder="First name"
                          Class="formInput"
                          FullWidth="true"
                          Variant="Variant.Text" />

            <MudTextField @bind-Value="@mAppointment.LastName"
                          Placeholder="Last name"
                          Class="formInput"
                          FullWidth="true"
                          Variant="Variant.Text" />

            <MudTextField @bind-Value="@mAppointment.Email"
                          Placeholder="Email"
                          Class="formInput"
                          FullWidth="true"
                          Variant="Variant.Text" />

            <PhoneNumberInput CssClasses="phoneNumberFormInput" @bind-Value="@mPhoneNumber" />

            <MudTextField @bind-Value="@mAppointment.Message"
                          Placeholder="Message"
                          Lines="8"
                          Class="formInput"
                          FullWidth="true"
                          Variant="Variant.Text" />

            <MudCheckBox T="bool" @bind-Value="mIsRemote" ReadOnly="@(mRule is null || !mRule.HasRemoteOption)" Class="formCheckBox">Remote meeting</MudCheckBox>

            <TextButton @ref="@mSetDateButton" Text="@mSetDateButtonText"
                        BackColor="@Professor?.User!.Color.DarkOrWhite()"
                        ForeColor="@Professor?.User!.Color"
                        HoverBackColor="@Professor?.User!.Color"
                        HoverForeColor="@Professor?.User!.Color.DarkOrWhite()"
                        BorderRadius="0"
                        BoxShadow="none"
                        CssClasses="setDateFormButton"
                        OnClick="@SetDate_OnClick" />

            <div class="contactFormButtonsContainer">
                <TextButton Text="Reset"
                            BackColor="transparent"
                            ForeColor="@Red"
                            HoverBackColor="@Red"
                            HoverForeColor="@White"
                            BorderRadius="0"
                            BoxShadow="none"
                            CssClasses="contactFormButton"
                            OnClick="@ResetForm"/>
                <TextButton Text="Send"
                            BackColor="transparent"
                            ForeColor="@Green"
                            HoverBackColor="@Green"
                            HoverForeColor="@White"
                            BorderRadius="0"
                            BoxShadow="none"
                            CssClasses="contactFormButton"
                            OnClick="@SendButton_OnClick"/>
            </div>
        </div>

        <div class="appointmentInformationContainer" style="visibility: @mAppointmentInfoCssStyle;">
            @if(mRule is not null && mAppointment is not null)
            {
                <h2>Awesome!</h2>
                <h3>Your appointment for a @mRule.Name has been created.</h3>
                <div class="appointmentInformationDurationContainer">
                    <h4 class="appointmentInformationDuration"><strong>Date:</strong> @mAppointment.DateStart.ToString("dd/MM/yyyy HH:mm")</h4>
                    <h4 class="appointmentInformationDuration"><strong>Duration:</strong> @mRule.Duration.ToString()</h4>
                    <span class="appointmentInformationNote">@(mRule.Note.IsNullOrEmpty() ? "Please be present at least 5 minutes earlier than the scheduled time." : mRule.Note)</span>
                </div>

                <TextButton Text="Download event"
                            BackColor="@Professor?.User!.Color.DarkOrWhite()"
                            ForeColor="@Professor?.User!.Color"
                            HoverBackColor="@Professor?.User!.Color"
                            HoverForeColor="@Professor?.User!.Color.DarkOrWhite()"
                            BorderRadius="0"
                            BoxShadow="none"
                            CssClasses="setDateFormButton"
                            OnClick="@DownloadEvent_OnClick" />

                <TextButton Text="Return to form"
                            ForeColor="@Professor?.User!.Color.DarkOrWhite()"
                            BackColor="@Professor?.User!.Color"
                            BorderRadius="0"
                            BoxShadow="none"
                            CssClasses="setDateFormButton"
                            OnClick="@ReturnToForm_OnClick" />
            }


        </div>

        <div class="contactFormImageContainer">
            <div class="contactFormVectorContainer">
                <DynamicComponent Type="@(typeof(EmailContactVector).Assembly.GetType(FormTemplate.VectorName))"
                                  @ref="@mVectorComponent" />
            </div>
            <div class="contactFormNote">
                @FormTemplate.Note
            </div>

        </div>
    </div>
}

<style>

    .contactFormContainer {
        position: relative;
        display: grid;
        grid-template-columns: 1fr 1fr;
        justify-content: center;
        align-items: center;
        gap: @XXLargeGap;
        padding: 3rem;
        background-color: @Professor?.User!.Color.HexToRGBA(0.4);
    }

    .hidden {
        visibility: hidden;
    }

    .contactFormInputsContainer {
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: @VeryLargeGap;
    }

        .contactFormInputsContainer .mud-select {
            width: 100%;
        }

    .formCheckBox.mud-input-control.mud-input-control-boolean-input {
        width: 100%;
        color: @White.NormalizedColor();
        margin-top: -1rem;
    }

    .formCheckBox .mud-icon-button {
            color: @White.NormalizedColor();
    }

    .setDateFormButton {
        width: 100%;
        height: 40px;
        text-transform: capitalize;
        font-weight: 600;
        position: relative;
        padding: @SmallPadding @VeryLargePadding;
        border-radius: @LargeBorderRadius;
        filter: @LightFilterDropShadow;
    }

    .formInput {
        position: relative;
        padding: @SmallPadding @VeryLargePadding;
        border-radius: @LargeBorderRadius;
        filter: @LightFilterDropShadow;
        background: @White.NormalizedColor();
    }

        .formInput .mud-input.mud-input-underline:before {
            display: none;
        }

        .formInput .mud-input.mud-input-underline:after {
            display: none;
        }

    .appointmentInformationContainer {
        position: absolute;
        width: 50%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: @VeryLargeGap;
        padding: 3rem;
        text-align: center;
    }

    .appointmentInformationDurationContainer {
        padding: 2rem 0;
        font-size: 120%;
        display: flex;
        flex-direction: column;
        align-items: start;
    }

    .appointmentInformationDuration {
        font-weight: 400;
    }

    .appointmentInformationNote {
        font-size: 92%;
        align-self: center;
    }

    .contactFormImageContainer {
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: @VeryLargeGap;
    }

    .contactFormVectorContainer {
        position: relative;
        height: 16rem;
        filter: @LightFilterDropShadow;
    }

    .contactFormNote {
        position: relative;
        width: 64%;
        text-align: center;
    }

    .mud-primary-hover {
        background-color: @Professor?.User!.Color.HexToRGBA(0.2) !important;
    }

    .mud-primary-text {
        color: @Professor?.User!.Color.NormalizedColor() !important;
    }

</style>