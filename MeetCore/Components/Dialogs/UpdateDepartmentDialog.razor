@using static MeetBase.Blazor.PaletteColors
@using static MeetBase.Blazor.CssVariables

@using static MeetBase.Blazor.Personalization

@namespace MeetCore

<MudDialog>
    <DialogContent>
        <div class="dialogSection">
            <span class="dialogSectionText">Update Department</span>
        </div>
        <div class="dialogContentContainer">
            <span class="dialogContentTitle dialogContentFullRow">Department info</span>
            <MudTextField @bind-Value="@Model.Name"
                          Placeholder="Name"
                          Class="dialogContentFullRow dialogInput"
                          FullWidth="true"
                          Variant="Variant.Text"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@MudIconPaths.Account" />
            <MudSelect T="DepartmentType" @bind-Value="@Model.Category"
                       Placeholder="Category"
                       Class="dialogInput"
                       FullWidth="true"
                       Variant="Variant.Text"
                       Adornment="Adornment.Start"
                       AdornmentIcon="@MudIconPaths.Account"
                       AnchorOrigin="Origin.BottomCenter">
                @foreach (var value in Enum.GetValues<DepartmentType>())
                {
                    <MudSelectItem Value="@value">@value</MudSelectItem>
                }
            </MudSelect>
            <MudColorPicker Placeholder="Color" @bind-Text="@Model.Color"
                            Style="@($"color: {Model.Color.NormalizedColor()};")"
                            DisableModeSwitch="false"
                            DisableToolbar="false"
                            Class="dialogInput colorInput"
                            Adornment="@Adornment.Start"
                            AdornmentIcon="@Icons.Material.Filled.Palette"
                            PickerVariant="PickerVariant.Inline"
                            DisableAlpha="true" />
            <MudTextField @bind-Value="@Model.Email"
                          Placeholder="Email"
                          Class="dialogContentFullRow dialogInput"
                          FullWidth="true"
                          Variant="Variant.Text"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@MudIconPaths.Email" />
            <div class="dialogPhoneNumberInputsContainer">
                <MudTextField @bind-Value="@mCountryCode"
                              Placeholder="CC"
                              Class="dialogInput"
                              FullWidth="true"
                              Variant="Variant.Text"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@MudIconPaths.Plus" />
                <MudTextField @bind-Value="@mPhoneNumber"
                              Placeholder="Phone number"
                              Class="dialogInput"
                              FullWidth="true"
                              Variant="Variant.Text"
                              Adornment="Adornment.Start"
                              AdornmentIcon="@MudIconPaths.Phone" />
            </div>
            <MudFileUpload T="IBrowserFile" Accept=".png, .jpg" FilesChanged="@((e) => ControlHelpers.SetBrowserFileToModelImage(e, Model))" Class="dialogContentPhotoContainer">
                <ButtonTemplate>
                    <MudButton HtmlTag="label"
                               Variant="Variant.Text"
                               Class="mud-input mud-input-underline dialogInput"
                               StartIcon="@Icons.Material.Filled.Image"
                               for="@context">
                        @mPhotoLabel
                    </MudButton>
                </ButtonTemplate>
                <SelectedTemplate>
                    @if (context != null)
                    {
                        mPhotoLabel = context.Name;
                    }
                </SelectedTemplate>
            </MudFileUpload>


            <span class="dialogContentTitle dialogContentFullRow">Location info</span>
            <div class="dialogLocationMapContainer">
                <img class="location" src="./icons/map.png" alt="map" />
            </div>
            <MudSelect T="CountryCode" @bind-Value="@mLocation.Country"
                       Placeholder="Country"
                       Class="dialogInput"
                       FullWidth="true"
                       Variant="Variant.Text"
                       Adornment="Adornment.Start"
                       AdornmentIcon="@MudIconPaths.Account"
                       AnchorOrigin="Origin.BottomCenter">
                @foreach (var value in Enum.GetValues<CountryCode>())
                {
                    <MudSelectItem Value="@value">@value</MudSelectItem>
                }
            </MudSelect>
            <MudTextField @bind-Value="@mLocation.City"
                          Placeholder="City"
                          Class="dialogInput locationInput"
                          FullWidth="true"
                          Variant="Variant.Text"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@MudIconPaths.Phone" />
            <MudTextField @bind-Value="@mLocation.Postcode"
                          Placeholder="Postcode"
                          Class="dialogInput locationInput"
                          FullWidth="true"
                          Variant="Variant.Text"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@MudIconPaths.Phone" />
            <MudTextField @bind-Value="@mLocation.Address"
                          Placeholder="Address"
                          Class="dialogInput locationInput"
                          FullWidth="true"
                          Variant="Variant.Text"
                          Adornment="Adornment.Start"
                          AdornmentIcon="@MudIconPaths.Phone" />
        </div>
    </DialogContent>
    <DialogActions>
        <div class="dialogActionsContainer">
            <MudButton Variant="Variant.Text" Color="Color.Error" OnClick="@Cancel" Class="px-10">Cancel</MudButton>
            <MudButton Variant="Variant.Text" Color="Color.Success" OnClick="@Save" Class="px-10">Save</MudButton>
        </div>
    </DialogActions>
</MudDialog>

<style>
    .dialogInput .mud-input-adornment-start {
        color: @Gray.NormalizedColor();
    }

    .mud-dialog {
        overflow: visible;
    }

        .mud-dialog .mud-dialog-content {
            padding-right: 0;
        }

        .mud-dialog .mud-dialog-title {
            padding: 0;
        }

    .dialogSection {
        position: relative;
        top: -0.8rem;
        width: fit-content;
        height: 48px;
        margin: auto;
        padding: 12px 1rem;
        font-weight: 800;
        font-size: 120%;
        background-color: @Model.Color.NormalizedColor();
        color: @Model.Color.DarkOrWhite().NormalizedColor();
        border-radius: 0 0 1rem 1rem;
        filter: @LightFilterDropShadow;
    }

    .dialogContentContainer {
        position: relative;
        width: 100%;
        height: 100%;
        max-height: 600px;
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 8px 2rem;
        justify-content: center;
        align-items: center;
        padding-right: 24px;
        overflow-y: auto;
        overflow-x: hidden;
    }

    .dialogContentPhotoContainer .mud-button {
        width: 100%;
        padding: 4px;
        margin-top: 16px;
    }

    .dialogContentPhotoContainer .mud-icon-root.mud-svg-icon {
        width: 24px;
        height: 24px;
    }

    .dialogContentPhotoContainer .mud-button-label {
        width: 100%;
        display: flex;
        justify-content: flex-start;
        align-items: center;
        font-weight: 300;
        color: @Gray.NormalizedColor();
        text-align: start;
        text-transform: capitalize;
    }

    .dialogContentFullRow {
        grid-column: 1 / 3;
    }

    .dialogContentTitle {
        padding-top: 1rem;
        font-weight: 800;
        font-size: 108%;
        color: @Gray.NormalizedColor();
    }

    .dialogPhoneNumberInputsContainer {
        display: grid;
        grid-template-columns: 1fr 3fr;
        grid-template-rows: 1fr;
        gap: 1rem;
        align-items: center;
        justify-content: start;
    }

    .dialogLocationMapContainer {
        grid-row: 7 / 12;
        grid-column: 1 / 2;
        position: relative;
    }

    .locationInput {
        grid-column: 2 / 3;
        position: relative;
    }

    .dialogActionsContainer {
        position: relative;
        width: 100%;
        height: fit-content;
        display: flex;
        flex-direction: row;
        justify-content: space-evenly;
        align-items: center;
        margin-top: 1rem;
    }

    .colorInput .mud-input-adornment-start:after {
        content: '';
        position: absolute;
        margin-left: 2.5rem;
        width: calc(100% - 4.5rem);
        height: 24px;
        background-color: @Model.Color.NormalizedColor();
        border-radius: @NormalBorderRadius;
    }

</style>
