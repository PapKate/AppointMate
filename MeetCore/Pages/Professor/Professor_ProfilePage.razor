@page "/professors/{Id}/profile"

@inherits BasePage

@using static MeetBase.Blazor.PaletteColors
@using static MeetBase.Blazor.CssVariables

@using static MeetBase.Blazor.Personalization

@namespace MeetCore

<PageTitle>@EnglishLocalization.Profile</PageTitle>

<ApplicationContainer>
    @if(Professor is not null)
    {
        <div class="staffMemberContainer" style="@BorderBrushVariable.SetCssColor(User.Color)">

            <div class="staffMemberRibbonContainer" style="@BackgroundVariable.SetCssColor(User.Color) @ForegroundVariable.SetCssColor(User.Color.DarkOrWhite())">
                <div></div>
                <div class="staffMemberRibbon">
                    <div class="staffMemberRibbonInfoContainer">
                        <span class="staffMemberRibbonInfo">@User.LastName @User.FirstName</span>
                        <span class="staffMemberRibbonInfoDetails">@Professor.Rank.ToString().BreakWords()</span>
                    </div>
                    <IconButton BackColor="transparent"
                                ForeColor="@White"
                                VectorSource="@IconPaths.PencilOutlinePath"
                                BoxShadow="none"
                                OnClick="@UpdateProfessor"
                                CssClasses="staffmemberRibbonEditContainer" />
                </div>
            </div>

            <div class="modelInfoContainer" style="@ForegroundVariable.SetCssColor(User.Color)">
                <div class="staffMemberImageAndContactContainer">
                    <div class="staffMemberImageContainer">
                        <ImageWithFallbackVector CssClasses="staffMemberImage"
                                                 ImageSource="@User!.ImageUrl?.ToString()"
                                                 AspectRatio="1 / 1"
                                                 VectorType="@typeof(AvatarVector)"
                                                 FallbackIconColor="@User.Color"
                                                 FallbackIconMargin="1rem"
                                                 AlternateText="@User.Username" />
                    </div>
                    <div class="staffMemberContactContainer">
                        <div class="staffMemberContactImage">
                            <MapMarkerVector Color="@User.Color" />
                        </div>
                        <span class="staffMemberContactValue">@User.Location?.Address</span>

                        <div class="staffMemberContactImage">
                            <CallVector Color="@User.Color" />
                        </div>
                        <span class="staffMemberContactValue">+@User.PhoneNumber</span>

                        <div class="staffMemberContactImage">
                            <EmailVector Color="@User.Color" />
                        </div>
                        <span class="staffMemberContactValue">@User.Email</span>

                    </div>
                </div>
                <div class="staffMemberPositionContainer">
                    <span class="modelInfoTitle">Department</span>
                    <span class="modelInfoText">@StateManager.Department?.Name</span>
                </div>
                @if(!Professor.Websites.IsNullOrEmpty())
                {
                    <div id="professorWebsites" class="staffMemberPositionContainer">
                        <span class="modelInfoTitle">Websites</span>
                        @foreach(var website in Professor.Websites)
                        {
                            <span class="modelInfoText modelWebsiteName">
                                <a href="@website.Link" target="_blank" rel="noopener noreferrer" style="@ForegroundVariable.SetCssColor(User.Color)">@website.Name</a>
                            </span>
                        }
                    </div>
                }
                <div class="modelWeeklyScheduleContainer">
                    <div class="modelWeeklySchedule">
                        <span class="modelWeeklyScheduleTitle">Office hours</span>
                    </div>
                    @if (Professor.WeeklySchedule is not null)
                    {
                        @foreach (var schedule in Professor.WeeklySchedule.WeeklyHours.OrderBy(x => x.DayOfWeek).GroupBy(x => x.DayOfWeek))
                        {
                            <div class="modelWeeklyScheduleDayContainer">
                                <span class="modelWeeklyScheduleDay">@schedule.Key</span>
                                @foreach (var timespan in schedule.OrderBy(x => x.Start))
                                {
                                    <span class="modelWeeklyScheduleTime">@timespan.Start.ToFormatedString(TimeOnlyExtensions.ShortTimeFormat) - @timespan.End.ToFormatedString(TimeOnlyExtensions.ShortTimeFormat)</span>
                                }
                            </div>
                        }
                    }
                    <span class="modelWeeklyScheduleNote">@Professor.WeeklySchedule?.Note</span>
                </div>
            </div>

            <div class="locationContainer" style="margin-bottom: @mBottomMargin;">
                <LocationPointer MapId="@Professor.Id" Color="@Professor.User?.Color" Location="@Professor.User?.Location" IsReadOnly="true" />
            </div>
        </div>

        <div class="staffMemberQuoteContainer">
            @if(!Professor.Quote.IsNullOrEmpty())
            {
                <MudDivider DividerType="DividerType.Middle" Class="my-6" />
                <span>"@Professor.Quote"</span>
                <MudDivider DividerType="DividerType.Middle" Class="my-6" />
            }
        </div>

        <MarkDownInput Id="professorResearchTextContainer"
                       EditButtonColor="@User.Color"
                       Lines="12"
                       Placeholder="Tell us about your research interests here..."
                       Text="@mText"
                       TextChanged="@SaveResearchInterests">
            <span class="professorResearchTitle" style="@ForegroundVariable.SetCssColor(User.Color)">Research interests</span>
        </MarkDownInput>
    }

</ApplicationContainer>


<style>

    .staffMemberInfoContainer {
        min-height: 382px;
    }

    .professorResearchTitle {
        position: absolute;
        top: 0;
        left: @XXLargePadding;
        color: @ForegroundVariable.GetCssVariable();
        font-size: 112%;
        font-weight: 700;
    }

    #professorWebsites {
        gap: 0;
    }

    #professorResearchTextContainer {
        min-height: 336px;
    }

        #professorResearchTextContainer .textMarkDownContainer {
            min-height: 256px;
        }

</style>