@using static MeetBase.Blazor.PaletteColors
@using static MeetBase.Blazor.Personalization
@using static MeetBase.Blazor.CssVariables

@namespace MeetCore

@if(Layout is not null)
{
    <div class="layoutRoomContainer @mLayoutImageTheme" style="@BackgroundVariable.SetCssColor(Layout.Color.IsNullOrEmpty() ? Amber.HexToRGBA(0.5) : Layout.Color.HexToRGBA(0.5))">
        <div class="@(Layout.DisplayTheme == ImageDisplayTheme.Center ? "layoutRoomImageFullContainer" : "layoutRoomImageContainer")">
            <img class="@(Layout.DisplayTheme == ImageDisplayTheme.Center ? "layoutRoomImageFull" : "layoutRoomImage")" src="@Layout.ImageUrl?.ToString()" alt="@Layout.Name" />
        </div>
    
        <div class="layoutRoomTextContainer">
            <h3>@Layout.Name</h3>
            @((MarkupString)Markdig.Markdown.ToHtml(Layout.Note))
        </div>

        @if(IsEditable)
        {
            <EditToOptionsButton Alignment="Alignment.Vertical"
                                 HasOverlay="true"
                                 EditButton="@(new(White.HexToRGBA(0.6), Gray, IconPaths.PencilBoxMultipleOutlinePath))"
                                 OptionButtons="@(new List<OptionButton>()
                                                {
                                                    new(White.HexToRGBA(0.6), Orange, IconPaths.PencilOutlinePath, EventCallback.Factory.Create(this, () => EditLayoutRoom())),
                                                    new(White.HexToRGBA(0.6), Red, IconPaths.TrashCanOutlinePath, EventCallback.Factory.Create(this, () => DeleteLayoutRoom()))
                                                })"/>
        }
    </div>
}

<style>

    .layoutRoomContainer {
        position: relative;
        width: 100%;
        height: auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: @BackgroundVariable.GetCssVariable();
    }

    .layoutRoomTextContainer {
        padding: @LargePadding @XXLargePadding;
    }

    .layoutRoomImageContainer {
        position: relative;
        width: 60%;
        max-width: 600px;
        height: auto;
        max-height: 340px;
        padding: @XXLargePadding;
        aspect-ratio: 1 / 1;
    }

    .layoutRoomImageFullContainer {
        position: relative;
        width: 100%;
    }

    .layoutRoomImage {
        width: 100%;
        height: 100%;
        object-fit: contain;
    }

    .layoutRoomImageFull {
        width: 100%;
        height: 100%;
        object-fit: fill;
    }

    .layoutRoomCenterContainer {
        flex-direction: column;
        text-align: center;
    }

    .layoutRoomLeftContainer {
        flex-direction: row;
        text-align: right;
    }

    .layoutRoomRightContainer {
        flex-direction: row-reverse;
        text-align: left;
    }


    .editButtonContainer {
        position: absolute;
        top: 1rem;
        right: 1rem;
        width: 3rem;
        height: 3rem;
        padding: 8px;
        cursor: pointer;
    }

</style>