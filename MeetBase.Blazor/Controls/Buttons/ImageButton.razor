@inherits MenuButton

@using static MeetBase.Blazor.PaletteColors
@using static MeetBase.Blazor.Personalization
@using static MeetBase.Blazor.CssVariables
@using static MeetBase.Blazor.CssVariableHelpers

@namespace MeetBase.Blazor


<button disabled="@(!IsEnabled)" class="baseButton borderControl @CssClasses" id="@Id"
        @onmouseover="@OnMouseOver"
        @onmouseout="@OnMouseOut"
        @onmousedown="OnMouseDown"
        @onmouseup="OnMouseUp"
        @onclick="@(async (e) => { await OnBaseButtonClick(e); })"
        style="@SetBorderControlCssVariables(Width, Height, Background, Foreground, BoxShadow, BorderRadius, BorderStyle, BorderBrush, BorderThickness)
               @Style">
    <div class="buttonAnimationContainer">
        <div class="@mButtonAnimation"
             style="background-color:@(!Foreground.IsHexValue() ? White.HexToRGBA(0.4) : Foreground?.HexToRGBA(0.4));
                    animation-duration: @($"{RippleAnimationDuration.TotalSeconds}s");
                    top: @mTop; left: @mLeft;">
        </div>
    </div>
    <div class="menuButtonContent" style="flex-direction: @(ControlHelpers.SetFlexDirectionForContainer(IconPlacement));">
        @if (VectorSource != null)
        {
            <div class="menuButtonIcon" style="@(IconPlacement == ContentPlacement.Bottom || IconPlacement == ContentPlacement.Top ? "height: inherit; width: 50%;" : "height: 24px; width: auto;")">
                <VectorIcon Color="@Foreground" VectorSource="@VectorSource" />
            </div>
        }

        <img class="menuButtonImage" src="@(ImageUri?.ToString())" alt="@ImageLabel" style="@ImageStyle" />

        <span class="buttonText">
            @Text
        </span>
    </div>
    
    @ChildContent

</button>
