@page "/professors/{Id}/profile"

@inherits BasePage

@using static MeetBase.Blazor.PaletteColors
@using static MeetBase.Blazor.CssVariables

@using static MeetBase.Blazor.Personalization

@namespace MeetCore

<PageTitle>@EnglishLocalization.Profile</PageTitle>

<ApplicationContainer>

    <div class="staffMemberContainer" style="@BorderBrushVariable.SetCssColor(User.Color)">

        <div class="staffMemberRibbonContainer" style="@BackgroundVariable.SetCssColor(User.Color) @ForegroundVariable.SetCssColor(User.Color.DarkOrWhite())">
            <div></div>
            <div class="staffMemberRibbon">
                <div class="staffMemberRibbonInfoContainer">
                    <span class="staffMemberRibbonInfo">@User.LastName @User.FirstName</span>
                    <span class="staffMemberRibbonInfoDetails">@Professor.Rank</span>
                </div>
                <IconButton BackColor="transparent"
                            ForeColor="@White"
                            VectorSource="@IconPaths.PencilOutlinePath"
                            BoxShadow="none"
                            OnClick="@UpdateProfessor"
                            CssClasses="staffmemberRibbonEditContainer" />
            </div>
        </div>

        <div class="staffMemberInfoContainer">
            <div class="staffMemberImageAndContactContainer">
                <div class="staffMemberImageContainer">
                    <img class="staffMemberImage" src="@User.ImageUrl?.ToString()" alt="name" />
                </div>
                <div class="staffMemberContactContainer">
                    <div class="staffMemberContactImage">
                        <MapMarkerVector Color="@User.Color" />
                    </div>
                    <span class="staffMemberContactValue">@User.Location?.Address</span>

                    <div class="staffMemberContactImage">
                        <CallVector Color="@User.Color" />
                    </div>
                    <span class="staffMemberContactValue">+@User.PhoneNumber</span>

                    <div class="staffMemberContactImage">
                        <EmailVector Color="@User.Color" />
                    </div>
                    <span class="staffMemberContactValue">@User.Email</span>

                </div>
            </div>
            <div class="staffMemberPositionContainer">
                <span class="staffMemberWeeklyScheduleTitle" style="@ForegroundVariable.SetCssColor(User.Color)">Department</span>
                <span class="staffMemberPosition">@StateManager.Department?.Name</span>
            </div>
            @if(!Professor.Websites.IsNullOrEmpty())
            {
                <div id="professorWebsites" class="staffMemberPositionContainer">
                    <span class="staffMemberWeeklyScheduleTitle" style="@ForegroundVariable.SetCssColor(User.Color)">Websites</span>
                    @foreach(var website in Professor.Websites)
                    {
                        <span class="staffMemberPosition professorWebsiteTitle">
                            <a href="@website.Link" target="_blank" rel="noopener noreferrer">@website.Name</a>
                        </span>
                    }
                </div>
            }
            <div class="staffMemberWeeklyScheduleContainer">
                <div class="staffMemberWeeklySchedule">
                    <span class="staffMemberWeeklyScheduleTitle" style="@ForegroundVariable.SetCssColor(User.Color)">Office hours</span>
                </div>
                @if (Professor.WeeklySchedule is not null)
                {
                    @foreach (var schedule in Professor.WeeklySchedule.WeeklyHours.OrderBy(x => x.DayOfWeek).GroupBy(x => x.DayOfWeek))
                    {
                        <div class="staffMemberWeeklyScheduleDayContainer">
                            <span class="staffMemberWeeklyScheduleDay">@schedule.Key</span>
                            @foreach (var timespan in schedule.OrderBy(x => x.Start))
                            {
                                <span class="staffMemberWeeklyScheduleTime">@timespan.Start.ToFormatedString(TimeOnlyExtensions.ShortTimeFormat) - @timespan.End.ToFormatedString(TimeOnlyExtensions.ShortTimeFormat)</span>
                            }
                        </div>
                    }
                }
                <span class="staffMemberWeeklyScheduleNote">@Professor.WeeklySchedule?.Note</span>
            </div>
        </div>

        <div class="locationContainer">
            <img class="location" src="./icons/map.png" alt="map" />
        </div>
    </div>

    <div class="staffMemberQuoteContainer">
        <MudDivider DividerType="DividerType.Middle" Class="my-6" />
        <span>"@Professor.Quote"</span>
        <MudDivider DividerType="DividerType.Middle" Class="my-6" />
    </div>

    <MarkDownInput Id="professorResearchTextContainer"
                   EditButtonColor="@User.Color"
                   Lines="12"
                   Placeholder="Tell us about your research interests here..."
                   Text="@mText"
                   TextChanged="@SaveResearchInterests">
        <span class="professorResearchTitle" style="@ForegroundVariable.SetCssColor(User.Color)">Research interests</span>
    </MarkDownInput>
</ApplicationContainer>


<style>

    .staffMemberInfoContainer {
        min-height: 382px;
    }

    .professorResearchTitle {
        position: absolute;
        top: 0;
        left: @XXLargePadding;
        color: @ForegroundVariable.GetCssVariable();
        font-size: 112%;
        font-weight: 700;
    }

    #professorWebsites {
        gap: 0;
    }

    .professorWebsiteTitle{
        grid-column-start: 2;
        font-weight: @BoldFont;
    }

    #professorResearchTextContainer {
        min-height: 336px;
    }

        #professorResearchTextContainer .textMarkDownContainer {
            min-height: 256px;
        }

</style>